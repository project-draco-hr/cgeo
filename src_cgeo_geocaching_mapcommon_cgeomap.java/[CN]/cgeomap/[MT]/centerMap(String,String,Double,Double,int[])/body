{
  if (!centered && mapState != null) {
    try {
      mapController.setCenter(settings.getMapFactory().getGeoPointBase(mapState[0],mapState[1]));
      mapController.setZoom(mapState[2]);
    }
 catch (    Exception e) {
    }
    centered=true;
    alreadyCentered=true;
  }
 else   if (!centered && (geocodeCenter != null || searchIdIntent != null)) {
    try {
      List<Object> viewport=null;
      if (geocodeCenter != null) {
        viewport=app.getBounds(geocodeCenter);
      }
 else {
        viewport=app.getBounds(searchIdCenter);
      }
      if (viewport == null)       return;
      Integer cnt=(Integer)viewport.get(0);
      Integer minLat=null;
      Integer maxLat=null;
      Integer minLon=null;
      Integer maxLon=null;
      if (viewport.get(1) != null) {
        minLat=(int)((Double)viewport.get(1) * 1e6);
      }
      if (viewport.get(2) != null) {
        maxLat=(int)((Double)viewport.get(2) * 1e6);
      }
      if (viewport.get(3) != null) {
        maxLon=(int)((Double)viewport.get(3) * 1e6);
      }
      if (viewport.get(4) != null) {
        minLon=(int)((Double)viewport.get(4) * 1e6);
      }
      if (cnt == null || cnt <= 0 || minLat == null || maxLat == null || minLon == null || maxLon == null) {
        return;
      }
      int centerLat=0;
      int centerLon=0;
      if ((Math.abs(maxLat) - Math.abs(minLat)) != 0) {
        centerLat=minLat + ((maxLat - minLat) / 2);
      }
 else {
        centerLat=maxLat;
      }
      if ((Math.abs(maxLon) - Math.abs(minLon)) != 0) {
        centerLon=minLon + ((maxLon - minLon) / 2);
      }
 else {
        centerLon=maxLon;
      }
      if (cnt != null && cnt > 0) {
        mapController.setCenter(settings.getMapFactory().getGeoPointBase(centerLat,centerLon));
        if (Math.abs(maxLat - minLat) != 0 && Math.abs(maxLon - minLon) != 0) {
          mapController.zoomToSpan(Math.abs(maxLat - minLat),Math.abs(maxLon - minLon));
        }
      }
    }
 catch (    Exception e) {
    }
    centered=true;
    alreadyCentered=true;
  }
 else   if (!centered && latitudeCenter != null && longitudeCenter != null) {
    try {
      mapController.setCenter(makeGeoPoint(latitudeCenter,longitudeCenter));
    }
 catch (    Exception e) {
    }
    centered=true;
    alreadyCentered=true;
  }
}
