{
  final int id=item.getItemId();
  if (id == MENU_TRAIL_MODE) {
    if (settings.maptrail == 1) {
      prefsEdit.putInt("maptrail",0);
      prefsEdit.commit();
      settings.maptrail=0;
    }
 else {
      prefsEdit.putInt("maptrail",1);
      prefsEdit.commit();
      settings.maptrail=1;
    }
  }
 else   if (id == MENU_MAP_LIVE) {
    if (settings.maplive == 1) {
      settings.liveMapDisable();
    }
 else {
      settings.liveMapEnable();
    }
    liveChanged=true;
    searchId=null;
    searchIdIntent=null;
  }
 else   if (id == MENU_STORE_CACHES) {
    if (live && !isLoading() && caches != null && !caches.isEmpty()) {
      final List<String> geocodes=new ArrayList<String>();
      List<cgCache> cachesProtected=new ArrayList<cgCache>(caches);
      try {
        if (CollectionUtils.isNotEmpty(cachesProtected)) {
          final GeoPointImpl mapCenter=mapView.getMapViewCenter();
          final int mapCenterLat=mapCenter.getLatitudeE6();
          final int mapCenterLon=mapCenter.getLongitudeE6();
          final int mapSpanLat=mapView.getLatitudeSpan();
          final int mapSpanLon=mapView.getLongitudeSpan();
          for (          cgCache oneCache : cachesProtected) {
            if (oneCache != null && oneCache.latitude != null && oneCache.longitude != null) {
              if (cgBase.isCacheInViewPort(mapCenterLat,mapCenterLon,mapSpanLat,mapSpanLon,oneCache.latitude,oneCache.longitude) && app.isOffline(oneCache.geocode,null) == false) {
                geocodes.add(oneCache.geocode);
              }
            }
          }
        }
      }
 catch (      Exception e) {
        Log.e(cgSettings.tag,"cgeomap.onOptionsItemSelected.#4: " + e.toString());
      }
      detailTotal=geocodes.size();
      if (detailTotal == 0) {
        ActivityMixin.showToast(activity,res.getString(R.string.warn_save_nothing));
        return true;
      }
      waitDialog=new ProgressDialog(activity);
      waitDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
      waitDialog.setCancelable(true);
      waitDialog.setMax(detailTotal);
      waitDialog.setOnCancelListener(new DialogInterface.OnCancelListener(){
        public void onCancel(        DialogInterface arg0){
          try {
            if (loadDetailsThread != null) {
              loadDetailsThread.stopIt();
            }
            if (geo == null) {
              geo=app.startGeo(activity,geoUpdate,base,settings,0,0);
            }
            if (settings.useCompass == 1 && dir == null) {
              dir=app.startDir(activity,dirUpdate);
            }
          }
 catch (          Exception e) {
            Log.e(cgSettings.tag,"cgeocaches.onPrepareOptionsMenu.onCancel: " + e.toString());
          }
        }
      }
);
      Float etaTime=Float.valueOf((detailTotal * (float)7) / 60);
      if (etaTime < 0.4) {
        waitDialog.setMessage(res.getString(R.string.caches_downloading) + " " + res.getString(R.string.caches_eta_ltm));
      }
 else       if (etaTime < 1.5) {
        waitDialog.setMessage(res.getString(R.string.caches_downloading) + " " + String.format(Locale.getDefault(),"%.0f",etaTime)+ " "+ res.getString(R.string.caches_eta_min));
      }
 else {
        waitDialog.setMessage(res.getString(R.string.caches_downloading) + " " + String.format(Locale.getDefault(),"%.0f",etaTime)+ " "+ res.getString(R.string.caches_eta_mins));
      }
      waitDialog.show();
      detailProgressTime=System.currentTimeMillis();
      loadDetailsThread=new LoadDetails(loadDetailsHandler,geocodes);
      loadDetailsThread.start();
      return true;
    }
  }
 else   if (id == MENU_CIRCLE_MODE) {
    if (overlayCaches == null) {
      return false;
    }
    overlayCaches.switchCircles();
    mapView.invalidate();
  }
 else   if (SUBMENU_VIEW_GOOGLE_MAP <= id && SUBMENU_VIEW_MF_OFFLINE >= id) {
    item.setChecked(true);
    mapSourceEnum mapSource=getMapSourceFromMenuId(id);
    boolean mapRestartRequired=switchMapSource(mapSource);
    if (mapRestartRequired) {
      activity.finish();
      Intent mapIntent=new Intent(activity,settings.getMapFactory().getMapClass());
      mapIntent.putExtra("detail",fromDetailIntent);
      mapIntent.putExtra("searchid",searchIdIntent);
      mapIntent.putExtra("geocode",geocodeIntent);
      mapIntent.putExtra("latitude",latitudeIntent);
      mapIntent.putExtra("longitude",longitudeIntent);
      mapIntent.putExtra("wpttype",waypointTypeIntent);
      int[] mapState=new int[4];
      GeoPointImpl mapCenter=mapView.getMapViewCenter();
      mapState[0]=mapCenter.getLatitudeE6();
      mapState[1]=mapCenter.getLongitudeE6();
      mapState[2]=mapView.getMapZoomLevel();
      mapState[3]=followMyLocation ? 1 : 0;
      mapIntent.putExtra("mapstate",mapState);
      activity.startActivity(mapIntent);
    }
    return true;
  }
  return false;
}
