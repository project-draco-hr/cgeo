{
  Method declaredMethod=cls.getMethod(methodName,parameterTypes);
  if (Modifier.isPublic(declaredMethod.getDeclaringClass().getModifiers())) {
    return declaredMethod;
  }
  List<Class<?>> candidateClasses=new ArrayList<Class<?>>();
  candidateClasses.addAll(getAllInterfaces(cls));
  candidateClasses.addAll(getAllSuperclasses(cls));
  for (  Class<?> candidateClass : candidateClasses) {
    if (!Modifier.isPublic(candidateClass.getModifiers())) {
      continue;
    }
    Method candidateMethod;
    try {
      candidateMethod=candidateClass.getMethod(methodName,parameterTypes);
    }
 catch (    NoSuchMethodException ex) {
      continue;
    }
    if (Modifier.isPublic(candidateMethod.getDeclaringClass().getModifiers())) {
      return candidateMethod;
    }
  }
  throw new NoSuchMethodException("Can't find a public method for " + methodName + " "+ ArrayUtils.toString(parameterTypes));
}
