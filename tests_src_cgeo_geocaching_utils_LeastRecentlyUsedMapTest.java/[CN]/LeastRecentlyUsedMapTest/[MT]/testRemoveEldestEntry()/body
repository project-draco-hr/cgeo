{
  final LeastRecentlyUsedMap<String,Geocache> cache=new LeastRecentlyUsedMap.LruCache<String,Geocache>(10);
  final Geocache first=new Geocache();
  assertThat(cache.put("1",first)).isNull();
  final Geocache second=new Geocache();
  assertThat(cache.put("2",second)).isNull();
  assertThat(cache).hasSize(2);
  assertThat(cache).containsKey("1");
  assertThat(cache).containsValue(first);
  assertThat(cache).containsKey("2");
  assertThat(cache).containsValue(second);
  for (int i=3; i <= 10; i++) {
    assertThat(cache.put(Integer.toString(i),new Geocache())).isNull();
  }
  assertThat(cache).hasSize(10);
  assertThat(cache).containsKey("1");
  assertThat(cache).containsValue(first);
  assertThat(cache).containsKey("2");
  assertThat(cache).containsValue(second);
  assertThat(cache.remove("1")).isNotNull();
  assertThat(cache.put("1",new Geocache())).isNull();
  assertThat(cache.put("11",new Geocache())).isNull();
  assertThat(cache).hasSize(10);
  assertThat(cache).containsKey("1");
  assertThat(cache).containsKey("2");
  assertThat(cache).containsKey("11");
}
