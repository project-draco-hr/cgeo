{
  final LeastRecentlyUsedMap<String,Geocache> cache=new LeastRecentlyUsedMap.LruCache<String,Geocache>(10);
  final Geocache first=new Geocache();
  assertNull(cache.put("1",first));
  final Geocache second=new Geocache();
  assertNull(cache.put("2",second));
  assertEquals(2,cache.size());
  assertTrue(cache.containsKey("1"));
  assertTrue(cache.containsValue(first));
  assertTrue(cache.containsKey("2"));
  assertTrue(cache.containsValue(second));
  for (int i=3; i <= 10; i++) {
    assertNull(cache.put(Integer.toString(i),new Geocache()));
  }
  assertEquals(10,cache.size());
  assertTrue(cache.containsKey("1"));
  assertTrue(cache.containsValue(first));
  assertTrue(cache.containsKey("2"));
  assertTrue(cache.containsValue(second));
  assertNotNull(cache.remove("1"));
  assertNull(cache.put("1",new Geocache()));
  assertNull(cache.put("11",new Geocache()));
  assertEquals(10,cache.size());
  assertTrue(cache.containsKey("1"));
  assertFalse(cache.containsKey("2"));
  assertTrue(cache.containsKey("11"));
}
