{
  final String host="api.twitter.com";
  final String path="/oauth/access_token";
  final String method="POST";
  int status=0;
  try {
    final Parameters params=new Parameters("oauth_verifier",pinEntry.getText().toString());
    OAuth.signOAuth(host,path,method,true,params,OAtoken,OAtokenSecret);
    final String line=StringUtils.defaultString(cgBase.getResponseData(cgBase.postRequest("https://" + host + path,params)));
    OAtoken="";
    OAtokenSecret="";
    final Matcher paramsMatcher1=paramsPattern1.matcher(line);
    if (paramsMatcher1.find()) {
      OAtoken=paramsMatcher1.group(1);
    }
    final Matcher paramsMatcher2=paramsPattern2.matcher(line);
    if (paramsMatcher2.find() && paramsMatcher2.groupCount() > 0) {
      OAtokenSecret=paramsMatcher2.group(1);
    }
    if (StringUtils.isBlank(OAtoken) && StringUtils.isBlank(OAtokenSecret)) {
      OAtoken="";
      OAtokenSecret="";
      final SharedPreferences.Editor prefs=getSharedPreferences(Settings.preferences,0).edit();
      prefs.putString("tokenpublic",null);
      prefs.putString("tokensecret",null);
      prefs.putInt("twitter",0);
      prefs.commit();
    }
 else {
      final SharedPreferences.Editor prefs=getSharedPreferences(Settings.preferences,0).edit();
      prefs.remove("temp-token-public");
      prefs.remove("temp-token-secret");
      prefs.putString("tokenpublic",OAtoken);
      prefs.putString("tokensecret",OAtokenSecret);
      prefs.putInt("twitter",1);
      prefs.commit();
      status=1;
    }
  }
 catch (  Exception e) {
    Log.e(Settings.tag,"TwitterAuthorizationActivity.changeToken: " + e.toString());
  }
  changeTokensHandler.sendEmptyMessage(status);
}
