{
  if (msg.what == SHOW_CAPTCHA) {
    final AlertDialog.Builder dlg=new AlertDialog.Builder(activity);
    final View view=activity.getLayoutInflater().inflate(R.layout.recaptcha_dialog,null,false);
    final ImageView imageView=(ImageView)view.findViewById(R.id.image);
    final ImageButton reloadButton=(ImageButton)view.findViewById(R.id.button_recaptcha_refresh);
    reloadButton.setEnabled(false);
    reloadButton.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      final View v){
        recaptchaReceiver.fetchChallenge();
        loadChallenge(imageView,reloadButton);
      }
    }
);
    loadChallenge(imageView,reloadButton);
    dlg.setTitle(activity.getString(R.string.caches_recaptcha_title));
    dlg.setView(view);
    dlg.setNeutralButton(activity.getString(R.string.caches_recaptcha_continue),new DialogInterface.OnClickListener(){
      @Override public void onClick(      final DialogInterface dialog,      final int id){
        final String text=((EditText)view.findViewById(R.id.text)).getText().toString();
        recaptchaReceiver.setText(text);
        dialog.cancel();
      }
    }
);
    dlg.create().show();
  }
}
