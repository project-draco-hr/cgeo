{
  Log.i(Settings.tag,"Import GPX zip file: " + cacheFile.getAbsolutePath());
  ZipFile zipFile=new ZipFile(cacheFile);
  try {
    final String gpxName=getGpxFileNameForZipFileName(cacheFile.getName());
    if (gpxName == null) {
      throw new ParserException(cacheFile.getName() + " is not a GPX zip file");
    }
    final ZipEntry gpxEntry=zipFile.getEntry(gpxName);
    if (gpxEntry == null) {
      throw new ParserException(cacheFile.getName() + " is not a GPX zip file");
    }
    importStepHandler.sendMessage(importStepHandler.obtainMessage(IMPORT_STEP_READ_FILE,R.string.gpx_import_loading_caches,(int)gpxEntry.getSize()));
    Collection<cgCache> caches;
    GPXParser parser;
    try {
      parser=new GPX10Parser(listId);
      caches=parser.parse(zipFile.getInputStream(gpxEntry),progressHandler);
    }
 catch (    ParserException pe) {
      parser=new GPX11Parser(listId);
      caches=parser.parse(zipFile.getInputStream(gpxEntry),progressHandler);
    }
    final ZipEntry gpxWptsEntry=zipFile.getEntry(getWaypointsFileNameForGpxFileName(gpxName));
    if (gpxWptsEntry != null) {
      Log.i(Settings.tag,"Import GPX waypoint file: " + gpxWptsEntry.getName());
      importStepHandler.sendMessage(importStepHandler.obtainMessage(IMPORT_STEP_READ_WPT_FILE,R.string.gpx_import_loading_waypoints,(int)gpxWptsEntry.getSize()));
      caches=parser.parse(zipFile.getInputStream(gpxWptsEntry),progressHandler);
    }
    return caches;
  }
  finally {
    zipFile.close();
  }
}
