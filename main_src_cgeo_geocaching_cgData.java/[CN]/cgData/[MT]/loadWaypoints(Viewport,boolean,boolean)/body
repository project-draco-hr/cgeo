{
  final StringBuilder where=new StringBuilder(buildCoordinateWhere(dbTableWaypoints,viewport));
  if (excludeMine) {
    where.append(" and ").append(dbTableCaches).append(".own == 0 and ").append(dbTableCaches).append(".found == 0 ");
  }
  if (excludeDisabled) {
    where.append(" and ").append(dbTableCaches).append(".disabled == 0 ");
  }
  init();
  List<cgWaypoint> waypoints=new ArrayList<cgWaypoint>();
  final StringBuilder query=new StringBuilder("SELECT ");
  for (int i=0; i < WAYPOINT_COLUMNS.length; i++) {
    query.append(i > 0 ? ", " : "").append(dbTableWaypoints).append('.').append(WAYPOINT_COLUMNS[i]).append(' ');
  }
  query.append(" FROM ").append(dbTableWaypoints).append(", ").append(dbTableCaches).append(" WHERE ").append(dbTableWaypoints).append("._id == ").append(dbTableCaches).append("._id and ").append(where);
  Cursor cursor=databaseRO.rawQuery(query.toString(),null);
  if (cursor != null && cursor.getCount() > 0) {
    cursor.moveToFirst();
    do {
      cgWaypoint waypoint=createWaypointFromDatabaseContent(cursor);
      waypoints.add(waypoint);
    }
 while (cursor.moveToNext());
  }
  if (cursor != null) {
    cursor.close();
  }
  return waypoints;
}
