{
  if (CollectionUtils.isEmpty(geocodes)) {
    return Collections.emptySet();
  }
  init();
  final StringBuilder query=new StringBuilder(QUERY_CACHE_DATA);
  if (loadFlags.contains(LoadFlag.LOAD_OFFLINE_LOG)) {
    query.append(',').append(dbTableLogsOffline).append(".log");
  }
  query.append(" FROM ").append(dbTableCaches);
  if (loadFlags.contains(LoadFlag.LOAD_OFFLINE_LOG)) {
    query.append(" LEFT OUTER JOIN ").append(dbTableLogsOffline).append(" ON ( ").append(dbTableCaches).append(".geocode == ").append(dbTableLogsOffline).append(".geocode) ");
  }
  query.append(" WHERE ").append(dbTableCaches).append('.');
  query.append(cgData.whereGeocodeIn(geocodes));
  Cursor cursor=database.rawQuery(query.toString(),null);
  try {
    final Set<Geocache> caches=new HashSet<Geocache>();
    int logIndex=-1;
    while (cursor.moveToNext()) {
      Geocache cache=cgData.createCacheFromDatabaseContent(cursor);
      if (loadFlags.contains(LoadFlag.LOAD_ATTRIBUTES)) {
        cache.setAttributes(loadAttributes(cache.getGeocode()));
      }
      if (loadFlags.contains(LoadFlag.LOAD_WAYPOINTS)) {
        final List<Waypoint> waypoints=loadWaypoints(cache.getGeocode());
        if (CollectionUtils.isNotEmpty(waypoints)) {
          cache.setWaypoints(waypoints,false);
        }
      }
      if (loadFlags.contains(LoadFlag.LOAD_SPOILERS)) {
        final List<Image> spoilers=loadSpoilers(cache.getGeocode());
        cache.setSpoilers(spoilers);
      }
      if (loadFlags.contains(LoadFlag.LOAD_LOGS)) {
        cache.setLogs(loadLogs(cache.getGeocode()));
        final Map<LogType,Integer> logCounts=loadLogCounts(cache.getGeocode());
        if (MapUtils.isNotEmpty(logCounts)) {
          cache.getLogCounts().clear();
          cache.getLogCounts().putAll(logCounts);
        }
      }
      if (loadFlags.contains(LoadFlag.LOAD_INVENTORY)) {
        final List<Trackable> inventory=loadInventory(cache.getGeocode());
        if (CollectionUtils.isNotEmpty(inventory)) {
          if (cache.getInventory() == null) {
            cache.setInventory(new ArrayList<Trackable>());
          }
 else {
            cache.getInventory().clear();
          }
          cache.getInventory().addAll(inventory);
        }
      }
      if (loadFlags.contains(LoadFlag.LOAD_OFFLINE_LOG)) {
        if (logIndex < 0) {
          logIndex=cursor.getColumnIndex("log");
        }
        cache.setLogOffline(!cursor.isNull(logIndex));
      }
      cache.addStorageLocation(StorageLocation.DATABASE);
      cacheCache.putCacheInCache(cache);
      caches.add(cache);
    }
    return caches;
  }
  finally {
    cursor.close();
  }
}
