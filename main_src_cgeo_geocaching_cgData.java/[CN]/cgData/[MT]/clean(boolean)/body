{
  init();
  Log.d(Settings.tag,"Database clean: started");
  Cursor cursor=null;
  List<String> geocodes=new ArrayList<String>();
  try {
    if (more) {
      cursor=databaseRO.query(dbTableCaches,new String[]{"geocode"},"reason = 0",null,null,null,null,null);
    }
 else {
      long timestamp=System.currentTimeMillis() - (3 * 24 * 60* 60* 1000);
      String timestampString=Long.toString(timestamp);
      cursor=databaseRO.query(dbTableCaches,new String[]{"geocode"},"reason = 0 and detailed < ? and detailedupdate < ? and visiteddate < ?",new String[]{timestampString,timestampString,timestampString},null,null,null,null);
    }
    if (cursor != null) {
      if (cursor.getCount() > 0) {
        cursor.moveToFirst();
        final int index=cursor.getColumnIndex("geocode");
        do {
          geocodes.add(cursor.getString(index));
        }
 while (cursor.moveToNext());
      }
      cursor.close();
    }
    final int size=geocodes.size();
    if (size > 0) {
      Log.d(Settings.tag,"Database clean: removing " + size + " geocaches");
      dropCaches(geocodes);
    }
    databaseRW.execSQL("delete from " + dbTableCaches + " where geocode = \"\"");
    if (Log.isLoggable(Settings.tag,Log.DEBUG)) {
      final SQLiteStatement countSql=databaseRO.compileStatement("select count(_id) from " + dbTableCaches + " where reason = 0");
      final int count=(int)countSql.simpleQueryForLong();
      countSql.close();
      Log.d(Settings.tag,"Database clean: " + count + " cached geocaches remaining");
    }
  }
 catch (  Exception e) {
    Log.w(Settings.tag,"cgData.clean: " + e.toString());
  }
  Log.d(Settings.tag,"Database clean: finished");
}
