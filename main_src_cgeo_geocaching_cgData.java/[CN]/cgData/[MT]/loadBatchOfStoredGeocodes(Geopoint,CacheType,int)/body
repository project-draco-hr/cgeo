{
  if (cacheType == null) {
    throw new IllegalArgumentException("cacheType must not be null");
  }
  init();
  Set<String> geocodes=new HashSet<String>();
  StringBuilder selection=new StringBuilder();
  selection.append("reason ");
  selection.append(listId != StoredList.ALL_LIST_ID ? "=" + Math.max(listId,1) : ">= " + StoredList.STANDARD_LIST_ID);
  selection.append(" and detailed = 1 ");
  String[] selectionArgs=null;
  if (cacheType != CacheType.ALL) {
    selection.append(" and type = ?");
    selectionArgs=new String[]{String.valueOf(cacheType.id)};
  }
  try {
    Cursor cursor;
    if (coords != null) {
      cursor=database.query(dbTableCaches,new String[]{"geocode","(abs(latitude-" + String.format((Locale)null,"%.6f",coords.getLatitude()) + ") + abs(longitude-"+ String.format((Locale)null,"%.6f",coords.getLongitude())+ ")) as dif"},selection.toString(),selectionArgs,null,null,"dif",null);
    }
 else {
      cursor=database.query(dbTableCaches,new String[]{"geocode"},selection.toString(),selectionArgs,null,null,"geocode");
    }
    if (cursor.moveToFirst()) {
      final int index=cursor.getColumnIndex("geocode");
      do {
        geocodes.add(cursor.getString(index));
      }
 while (cursor.moveToNext());
    }
    cursor.close();
  }
 catch (  Exception e) {
    Log.e("cgData.loadBatchOfStoredGeocodes: " + e.toString());
  }
  return geocodes;
}
