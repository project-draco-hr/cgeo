{
  if (cache == null) {
    return false;
  }
  ContentValues values=new ContentValues();
  if (cache.updated == null) {
    values.put("updated",System.currentTimeMillis());
  }
 else {
    values.put("updated",cache.updated);
  }
  values.put("reason",cache.reason);
  values.put("detailed",cache.detailed ? 1 : 0);
  values.put("detailedupdate",cache.detailedUpdate);
  values.put("visiteddate",cache.visitedDate);
  values.put("geocode",cache.geocode);
  values.put("cacheid",cache.cacheId);
  values.put("guid",cache.guid);
  values.put("type",cache.type);
  values.put("name",cache.name);
  values.put("own",cache.own ? 1 : 0);
  values.put("owner",cache.owner);
  values.put("owner_real",cache.ownerReal);
  if (cache.hidden == null) {
    values.put("hidden",0);
  }
 else {
    values.put("hidden",cache.hidden.getTime());
  }
  values.put("hint",cache.hint);
  values.put("size",cache.size == null ? "" : cache.size.id);
  values.put("difficulty",cache.difficulty);
  values.put("terrain",cache.terrain);
  values.put("latlon",cache.latlon);
  values.put("location",cache.location);
  values.put("distance",cache.distance);
  values.put("direction",cache.direction);
  putCoords(values,cache.coords);
  values.put("reliable_latlon",cache.reliableLatLon ? 1 : 0);
  values.put("elevation",cache.elevation);
  values.put("shortdesc",cache.shortdesc);
  values.put("personal_note",cache.personalNote);
  values.put("description",cache.getDescription());
  values.put("favourite_cnt",cache.favouriteCnt);
  values.put("rating",cache.rating);
  values.put("votes",cache.votes);
  values.put("myvote",cache.myVote);
  values.put("disabled",cache.disabled ? 1 : 0);
  values.put("archived",cache.archived ? 1 : 0);
  values.put("members",cache.members ? 1 : 0);
  values.put("found",cache.found ? 1 : 0);
  values.put("favourite",cache.favourite ? 1 : 0);
  values.put("inventoryunknown",cache.inventoryItems);
  values.put("onWatchlist",cache.onWatchlist ? 1 : 0);
  boolean statusOk=true;
  if (cache.attributes != null) {
    if (!saveAttributes(cache.geocode,cache.attributes)) {
      statusOk=false;
    }
  }
  if (cache.waypoints != null) {
    if (!saveWaypoints(cache.geocode,cache.waypoints,true)) {
      statusOk=false;
    }
  }
  if (cache.spoilers != null) {
    if (!saveSpoilers(cache.geocode,cache.spoilers)) {
      statusOk=false;
    }
  }
  if (cache.logs != null) {
    if (!saveLogs(cache.geocode,cache.logs)) {
      statusOk=false;
    }
  }
  if (cache.logCounts != null && !cache.logCounts.isEmpty()) {
    if (!saveLogCount(cache.geocode,cache.logCounts)) {
      statusOk=false;
    }
  }
  if (cache.inventory != null) {
    if (!saveInventory(cache.geocode,cache.inventory)) {
      statusOk=false;
    }
  }
  if (!statusOk) {
    cache.detailed=false;
    cache.detailedUpdate=0L;
  }
  init();
  try {
    int rows=databaseRW.update(dbTableCaches,values,"geocode = ?",new String[]{cache.geocode});
    if (rows > 0) {
      values=null;
      return true;
    }
  }
 catch (  Exception e) {
  }
  try {
    long id=databaseRW.insert(dbTableCaches,null,values);
    if (id > 0) {
      values=null;
      return true;
    }
  }
 catch (  Exception e) {
  }
  values=null;
  return false;
}
