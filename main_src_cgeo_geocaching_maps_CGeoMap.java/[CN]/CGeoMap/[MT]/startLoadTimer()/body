{
  return Schedulers.newThread().createWorker().schedulePeriodically(new Action0(){
    @Override public void call(){
      try {
        if (mapView != null) {
          final Viewport viewportNow=mapView.getViewport();
          final int zoomNow=mapView.getMapZoomLevel();
          final boolean moved=markersInvalidated || (isLiveEnabled && !downloaded) || (viewport == null)|| zoomNow != zoom || (mapMoved(viewport,viewportNow) && (cachesCnt <= 0 || CollectionUtils.isEmpty(caches) || !viewport.includes(viewportNow)));
          if (moved || !viewportNow.equals(viewport)) {
            displayHandler.sendEmptyMessage(UPDATE_TITLE);
          }
          zoom=zoomNow;
          if (moved) {
            markersInvalidated=false;
            long currentTime=System.currentTimeMillis();
            if (1000 < (currentTime - loadThreadRun)) {
              viewport=viewportNow;
              loadExecutor.execute(new LoadRunnable(viewport));
            }
          }
        }
      }
 catch (      Exception e) {
        Log.w("CGeoMap.startLoadtimer.start",e);
      }
    }
  }
,250,250,TimeUnit.MILLISECONDS);
}
