{
  super.onCreate(savedInstanceState);
  res=this.getResources();
  activity=this.getActivity();
  final MapProvider mapProvider=Settings.getMapProvider();
  mapItemFactory=mapProvider.getMapItemFactory();
  final Bundle extras=activity.getIntent().getExtras();
  mapOptions=new MapOptions(activity,extras);
  ArrayList<Location> trailHistory=null;
  if (savedInstanceState != null) {
    currentSourceId=savedInstanceState.getInt(BUNDLE_MAP_SOURCE,Settings.getMapSource().getNumericalId());
    mapOptions.mapState=savedInstanceState.getParcelable(BUNDLE_MAP_STATE);
    mapOptions.isLiveEnabled=savedInstanceState.getBoolean(BUNDLE_LIVE_ENABLED,false);
    trailHistory=savedInstanceState.getParcelableArrayList(BUNDLE_TRAIL_HISTORY);
  }
 else {
    currentSourceId=Settings.getMapSource().getNumericalId();
  }
  if (changeMapSource(Settings.getMapSource())) {
    return;
  }
  noMapTokenShowed=false;
  ActivityMixin.onCreate(activity,true);
  ActivityMixin.setTheme(activity);
  setDisplayHomeAsUpEnabled();
  activity.setContentView(mapProvider.getMapLayoutId());
  setTitle();
  mapView=(MapViewImpl)activity.findViewById(mapProvider.getMapViewId());
  mapView.setMapSource();
  mapView.setBuiltInZoomControls(true);
  mapView.displayZoomControls(true);
  mapView.preLoad();
  mapView.setOnDragListener(new MapDragListener(this));
  mapView.clearOverlays();
  overlayCaches=mapView.createAddMapOverlay(mapView.getContext(),Compatibility.getDrawable(getResources(),R.drawable.marker));
  overlayPositionAndScale=mapView.createAddPositionAndScaleOverlay(mapOptions.coords,mapOptions.geocode);
  if (trailHistory != null) {
    overlayPositionAndScale.setHistory(trailHistory);
  }
  mapView.repaintRequired(null);
  setZoom(Settings.getMapZoom(mapOptions.mapMode));
  mapView.getMapController().setCenter(Settings.getMapCenter());
  if (mapOptions.mapState == null) {
    followMyLocation=followMyLocation && (mapOptions.mapMode == MapMode.LIVE);
  }
 else {
    followMyLocation=mapOptions.mapState.followsMyLocation();
    if (overlayCaches.getCircles() != mapOptions.mapState.showsCircles()) {
      overlayCaches.switchCircles();
    }
  }
  if (mapOptions.geocode != null || mapOptions.searchResult != null || mapOptions.coords != null || mapOptions.mapState != null) {
    centerMap(mapOptions.geocode,mapOptions.searchResult,mapOptions.coords,mapOptions.mapState);
  }
  final CheckBox locSwitch=ButterKnife.findById(activity,R.id.my_position);
  if (locSwitch != null) {
    initMyLocationSwitchButton(locSwitch);
  }
  prepareFilterBar();
  final View overflowActionBar=ButterKnife.findById(activity,R.id.overflowActionBar);
  if (overflowActionBar != null) {
    honeycombMenu=true;
    overflowActionBar.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      final View v){
        showPopupHoneycomb(v);
      }
    }
);
  }
  LiveMapHint.getInstance().showHint(activity);
  AndroidBeam.disable(activity);
}
