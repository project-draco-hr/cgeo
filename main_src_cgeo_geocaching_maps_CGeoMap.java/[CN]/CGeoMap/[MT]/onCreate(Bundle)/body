{
  super.onCreate(savedInstanceState);
  res=this.getResources();
  activity=this.getActivity();
  app=(cgeoapplication)activity.getApplication();
  mapProvider=Settings.getMapProvider();
  final Bundle extras=activity.getIntent().getExtras();
  if (extras != null) {
    searchIntent=(SearchResult)extras.getParcelable(EXTRAS_SEARCH);
    geocodeIntent=extras.getString(EXTRAS_GEOCODE);
    coordsIntent=(Geopoint)extras.getParcelable(EXTRAS_COORDS);
    waypointTypeIntent=WaypointType.findById(extras.getString(EXTRAS_WPTTYPE));
    mapStateIntent=extras.getIntArray(EXTRAS_MAPSTATE);
    mapTitle=extras.getString(EXTRAS_MAP_TITLE);
  }
  if (StringUtils.isBlank(mapTitle)) {
    mapTitle=res.getString(R.string.map_map);
  }
  if (savedInstanceState != null) {
    currentSourceId=savedInstanceState.getInt(BUNDLE_MAP_SOURCE,Settings.getMapSource());
    mapStateIntent=savedInstanceState.getIntArray(BUNDLE_MAP_STATE);
  }
 else {
    currentSourceId=Settings.getMapSource();
  }
  if (changeMapSource(Settings.getMapSource())) {
    return;
  }
  noMapTokenShowed=false;
  ActivityMixin.keepScreenOn(activity,true);
  ActivityMixin.setTheme(activity);
  activity.setContentView(mapProvider.getMapLayoutId());
  ActivityMixin.setTitle(activity,res.getString(R.string.map_map));
  if (Settings.isUseCompass() && dir == null) {
    dir=app.startDir(activity,dirUpdate);
  }
  mapView=(MapViewImpl)activity.findViewById(mapProvider.getMapViewId());
  mapView.setMapSource();
  mapView.setBuiltInZoomControls(true);
  mapView.displayZoomControls(true);
  mapView.preLoad();
  mapView.setOnDragListener(this);
  mapView.clearOverlays();
  if (overlayPosition == null) {
    overlayPosition=mapView.createAddPositionOverlay(activity);
  }
  if (Settings.isPublicLoc() && overlayGo4Cache == null) {
    overlayGo4Cache=mapView.createAddUsersOverlay(activity,getResources().getDrawable(R.drawable.user_location));
  }
  if (overlayCaches == null) {
    overlayCaches=mapView.createAddMapOverlay(mapView.getContext(),getResources().getDrawable(R.drawable.marker));
  }
  if (overlayScale == null) {
    overlayScale=mapView.createAddScaleOverlay(activity);
  }
  mapView.repaintRequired(null);
  mapController=mapView.getMapController();
  mapController.setZoom(Settings.getMapZoom());
  if (dir != null) {
    dirUpdate.updateDirection(dir);
  }
  live=(searchIntent == null && geocodeIntent == null && coordsIntent == null);
  if (null == mapStateIntent) {
    followMyLocation=live;
  }
 else {
    followMyLocation=1 == mapStateIntent[3];
  }
  if (geocodeIntent != null || searchIntent != null || coordsIntent != null || mapStateIntent != null) {
    centerMap(geocodeIntent,searchIntent,coordsIntent,mapStateIntent);
  }
  myLocSwitch=(ImageSwitcher)activity.findViewById(R.id.my_position);
  myLocSwitch.setFactory(this);
  myLocSwitch.setInAnimation(activity,android.R.anim.fade_in);
  myLocSwitch.setOutAnimation(activity,android.R.anim.fade_out);
  myLocSwitch.setOnClickListener(new MyLocationListener());
  switchMyLocationButton();
  prepareFilterBar();
  if (!Settings.getHideLiveMapHint()) {
    Intent hintIntent=new Intent(activity,LiveMapInfo.class);
    activity.startActivity(hintIntent);
  }
}
