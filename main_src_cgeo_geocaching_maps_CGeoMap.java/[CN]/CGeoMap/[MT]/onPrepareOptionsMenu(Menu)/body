{
  super.onPrepareOptionsMenu(menu);
  for (  Integer mapSourceId : MapProviderFactory.getMapSources().keySet()) {
    final MenuItem menuItem=menu.findItem(mapSourceId);
    if (menuItem != null) {
      final MapSource mapSource=MapProviderFactory.getMapSource(mapSourceId);
      if (mapSource != null) {
        menuItem.setEnabled(mapSource.isAvailable());
      }
    }
  }
  MenuItem item;
  try {
    item=menu.findItem(MENU_TRAIL_MODE);
    if (Settings.isMapTrail()) {
      item.setTitle(res.getString(R.string.map_trail_hide));
    }
 else {
      item.setTitle(res.getString(R.string.map_trail_show));
    }
    item=menu.findItem(MENU_MAP_LIVE);
    if (mapMode == MapMode.LIVE_ONLINE) {
      item.setTitle(res.getString(R.string.map_live_disable));
    }
 else     if (mapMode == MapMode.LIVE_OFFLINE) {
      item.setTitle(res.getString(R.string.map_live_enable));
    }
 else {
      item.setEnabled(false);
      item.setTitle(res.getString(R.string.map_live_enable));
    }
    final Set<String> geocodesInViewport=getGeocodesForCachesInViewport();
    menu.findItem(MENU_STORE_CACHES).setEnabled(isLiveMode() && !isLoading() && CollectionUtils.isNotEmpty(geocodesInViewport)&& app.hasUnsavedCaches(new SearchResult(geocodesInViewport)));
    item=menu.findItem(MENU_CIRCLE_MODE);
    if (overlayCaches != null && overlayCaches.getCircles()) {
      item.setTitle(res.getString(R.string.map_circles_hide));
    }
 else {
      item.setTitle(res.getString(R.string.map_circles_show));
    }
    item=menu.findItem(MENU_AS_LIST);
    item.setEnabled(isLiveMode() && !isLoading());
    menu.findItem(SUBMENU_STRATEGY).setEnabled(isLiveMode());
  }
 catch (  Exception e) {
    Log.e("cgeomap.onPrepareOptionsMenu: " + e.toString());
  }
  return true;
}
