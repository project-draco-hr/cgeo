{
  super.onResume();
  resumeSubscription=Subscriptions.from(geoDirUpdate.start(GeoDirHandler.UPDATE_GEODIR),startTimer());
  final List<String> toRefresh;
synchronized (dirtyCaches) {
    toRefresh=new ArrayList<>(dirtyCaches);
    dirtyCaches.clear();
  }
  if (!toRefresh.isEmpty()) {
    AndroidRxUtils.refreshScheduler.createWorker().schedule(new Action0(){
      @Override public void call(){
        for (        final String geocode : toRefresh) {
          final Geocache cache=DataStore.loadCache(geocode,LoadFlags.LOAD_WAYPOINTS);
          if (cache != null) {
            caches.remove(cache);
            caches.add(cache);
          }
        }
        displayExecutor.execute(new DisplayRunnable(CGeoMap.this));
      }
    }
);
  }
}
