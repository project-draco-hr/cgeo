{
  final File[] themeFiles=Settings.getMapThemeFiles();
  String currentTheme=StringUtils.EMPTY;
  String currentThemePath=Settings.getCustomRenderThemeFilePath();
  if (StringUtils.isNotEmpty(currentThemePath)) {
    File currentThemeFile=new File(currentThemePath);
    currentTheme=currentThemeFile.getName();
  }
  int currentItem=0;
  List<String> names=new ArrayList<String>();
  names.add(res.getString(R.string.map_theme_builtin));
  for (  File file : themeFiles) {
    if (currentTheme.equalsIgnoreCase(file.getName())) {
      currentItem=names.size();
    }
    names.add(file.getName());
  }
  final int selectedItem=currentItem;
  AlertDialog.Builder builder=new AlertDialog.Builder(activity);
  builder.setTitle(R.string.map_theme_select);
  builder.setSingleChoiceItems(names.toArray(new String[names.size()]),selectedItem,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int newItem){
      if (newItem == selectedItem) {
      }
 else {
        if (newItem > 0) {
          Settings.setCustomRenderThemeFile(themeFiles[newItem - 1].getPath());
        }
 else {
          Settings.setCustomRenderThemeFile(StringUtils.EMPTY);
        }
        mapView.setMapTheme();
      }
      dialog.cancel();
    }
  }
);
  builder.show();
}
