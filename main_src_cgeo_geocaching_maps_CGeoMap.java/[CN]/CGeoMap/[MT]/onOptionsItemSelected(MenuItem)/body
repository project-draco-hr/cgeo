{
  final int id=item.getItemId();
switch (id) {
case MENU_TRAIL_MODE:
    Settings.setMapTrail(!Settings.isMapTrail());
  return true;
case MENU_MAP_LIVE:
Settings.setLiveMap(!Settings.isLiveMap());
liveChanged=true;
searchId=null;
searchIdIntent=null;
return true;
case MENU_STORE_CACHES:
if (live && !isLoading() && CollectionUtils.isNotEmpty(caches)) {
final List<String> geocodes=new ArrayList<String>();
List<cgCache> cachesProtected=new ArrayList<cgCache>(caches);
try {
if (cachesProtected.size() > 0) {
final GeoPointImpl mapCenter=mapView.getMapViewCenter();
final int mapCenterLat=mapCenter.getLatitudeE6();
final int mapCenterLon=mapCenter.getLongitudeE6();
final int mapSpanLat=mapView.getLatitudeSpan();
final int mapSpanLon=mapView.getLongitudeSpan();
for (cgCache oneCache : cachesProtected) {
if (oneCache != null && oneCache.coords != null) {
if (cgBase.isCacheInViewPort(mapCenterLat,mapCenterLon,mapSpanLat,mapSpanLon,oneCache.coords) && !app.isOffline(oneCache.geocode,null)) {
  geocodes.add(oneCache.geocode);
}
}
}
}
}
 catch (Exception e) {
Log.e(Settings.tag,"cgeomap.onOptionsItemSelected.#4: " + e.toString());
}
detailTotal=geocodes.size();
detailProgress=0;
if (detailTotal == 0) {
ActivityMixin.showToast(activity,res.getString(R.string.warn_save_nothing));
return true;
}
waitDialog=new ProgressDialog(activity);
waitDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
waitDialog.setCancelable(true);
waitDialog.setMax(detailTotal);
waitDialog.setOnCancelListener(new DialogInterface.OnCancelListener(){
public void onCancel(DialogInterface arg0){
try {
if (loadDetailsThread != null) {
loadDetailsThread.stopIt();
}
if (geo == null) {
geo=app.startGeo(activity,geoUpdate,base,0,0);
}
if (Settings.isUseCompass() && dir == null) {
dir=app.startDir(activity,dirUpdate);
}
}
 catch (Exception e) {
Log.e(Settings.tag,"cgeocaches.onPrepareOptionsMenu.onCancel: " + e.toString());
}
}
}
);
Float etaTime=Float.valueOf((detailTotal * (float)7) / 60);
if (etaTime < 0.4) {
waitDialog.setMessage(res.getString(R.string.caches_downloading) + " " + res.getString(R.string.caches_eta_ltm));
}
 else if (etaTime < 1.5) {
waitDialog.setMessage(res.getString(R.string.caches_downloading) + " " + String.format(Locale.getDefault(),"%.0f",etaTime)+ " "+ res.getString(R.string.caches_eta_min));
}
 else {
waitDialog.setMessage(res.getString(R.string.caches_downloading) + " " + String.format(Locale.getDefault(),"%.0f",etaTime)+ " "+ res.getString(R.string.caches_eta_mins));
}
waitDialog.show();
detailProgressTime=System.currentTimeMillis();
loadDetailsThread=new LoadDetails(loadDetailsHandler,geocodes);
loadDetailsThread.start();
}
return true;
case MENU_CIRCLE_MODE:
if (overlayCaches == null) {
return false;
}
overlayCaches.switchCircles();
mapView.invalidate();
return true;
case MENU_AS_LIST:
final cgSearch search=new cgSearch();
search.totalCnt=caches.size();
for (cgCache cache : caches) {
search.addGeocode(cache.geocode);
}
cgeocaches.startActivityMap(activity,app.addSearch(search,caches,true,0));
return true;
default :
if (SUBMENU_VIEW_GOOGLE_MAP <= id && SUBMENU_VIEW_MF_OFFLINE >= id) {
item.setChecked(true);
mapSourceEnum mapSource=getMapSourceFromMenuId(id);
boolean mapRestartRequired=switchMapSource(mapSource);
if (mapRestartRequired) {
activity.finish();
Intent mapIntent=new Intent(activity,Settings.getMapFactory().getMapClass());
mapIntent.putExtra(EXTRAS_DETAIL,fromDetailIntent);
mapIntent.putExtra(EXTRAS_SEARCHID,searchIdIntent);
mapIntent.putExtra(EXTRAS_GEOCODE,geocodeIntent);
if (coordsIntent != null) {
mapIntent.putExtra(EXTRAS_LATITUDE,coordsIntent.getLatitude());
mapIntent.putExtra(EXTRAS_LONGITUDE,coordsIntent.getLongitude());
}
mapIntent.putExtra(EXTRAS_WPTTYPE,waypointTypeIntent != null ? waypointTypeIntent.id : null);
int[] mapState=new int[4];
GeoPointImpl mapCenter=mapView.getMapViewCenter();
mapState[0]=mapCenter.getLatitudeE6();
mapState[1]=mapCenter.getLongitudeE6();
mapState[2]=mapView.getMapZoomLevel();
mapState[3]=followMyLocation ? 1 : 0;
mapIntent.putExtra(EXTRAS_MAPSTATE,mapState);
activity.startActivity(mapIntent);
}
return true;
}
 else {
NavigationAppFactory.onMenuItemSelected(item,geo,activity,res,caches != null && caches.size() > 0 ? caches.get(0) : null,searchId,null,coordsIntent);
}
break;
}
return false;
}
