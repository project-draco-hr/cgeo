{
  try {
    stop=false;
    working=true;
    if (stop) {
      displayHandler.sendEmptyMessage(0);
      working=false;
      return;
    }
    double lat1=(centerLat / 1e6) - ((spanLat / 1e6) / 2) - ((spanLat / 1e6) / 4);
    double lat2=(centerLat / 1e6) + ((spanLat / 1e6) / 2) + ((spanLat / 1e6) / 4);
    double lon1=(centerLon / 1e6) - ((spanLon / 1e6) / 2) - ((spanLon / 1e6) / 4);
    double lon2=(centerLon / 1e6) + ((spanLon / 1e6) / 2) + ((spanLon / 1e6) / 4);
    double latMin=Math.min(lat1,lat2);
    double latMax=Math.max(lat1,lat2);
    double lonMin=Math.min(lon1,lon2);
    double lonMax=Math.max(lon1,lon2);
    if (token == null) {
      token=base.getMapUserToken(noMapTokenHandler);
    }
    if (stop) {
      displayHandler.sendEmptyMessage(0);
      working=false;
      return;
    }
    Map<String,String> params=new HashMap<String,String>();
    params.put("usertoken",token);
    params.put("latitude-min",String.format((Locale)null,"%.6f",latMin));
    params.put("latitude-max",String.format((Locale)null,"%.6f",latMax));
    params.put("longitude-min",String.format((Locale)null,"%.6f",lonMin));
    params.put("longitude-max",String.format((Locale)null,"%.6f",lonMax));
    searchId=base.searchByViewport(params,0);
    if (searchId != null) {
      downloaded=true;
    }
    if (stop) {
      displayHandler.sendEmptyMessage(0);
      working=false;
      return;
    }
    caches=app.getCaches(searchId,centerLat,centerLon,spanLat,spanLon);
    if (stop) {
      displayHandler.sendEmptyMessage(0);
      working=false;
      return;
    }
    if (displayThread != null && displayThread.isWorking()) {
      displayThread.stopIt();
    }
    displayThread=new DisplayThread(centerLat,centerLon,spanLat,spanLon);
    displayThread.start();
  }
  finally {
    working=false;
  }
}
