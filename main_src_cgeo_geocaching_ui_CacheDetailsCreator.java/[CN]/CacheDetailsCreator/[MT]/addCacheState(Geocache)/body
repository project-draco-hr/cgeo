{
  final List<String> states=new ArrayList<>(5);
  String date=getVisitedDate(cache);
  if (cache.isLogOffline()) {
    states.add(res.getString(R.string.cache_status_offline_log) + date);
    date="";
  }
  if (cache.isFound()) {
    states.add(res.getString(R.string.cache_status_found) + date);
  }
  if (cache.isEventCache() && states.isEmpty()) {
    for (    final LogEntry log : cache.getLogs()) {
      if (log.getType() == LogType.WILL_ATTEND && log.isOwn()) {
        states.add(LogType.WILL_ATTEND.getL10n());
      }
    }
  }
  if (cache.isArchived()) {
    states.add(res.getString(R.string.cache_status_archived));
  }
  if (cache.isDisabled()) {
    states.add(res.getString(R.string.cache_status_disabled));
  }
  if (cache.isPremiumMembersOnly()) {
    states.add(res.getString(R.string.cache_status_premium));
  }
  if (!states.isEmpty()) {
    add(R.string.cache_status,StringUtils.join(states,", "));
  }
}
