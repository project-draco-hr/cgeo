{
  if (StringUtils.isBlank(geocode)) {
    return null;
  }
  init();
  List<cgLog> logs=new ArrayList<cgLog>();
  Cursor cursor=databaseRO.rawQuery("SELECT cg_logs._id as cg_logs_id, type, author, log, date, found, " + dbTableLogImages + "._id as cg_logImages_id, log_id, title, url FROM "+ dbTableLogs+ " LEFT OUTER JOIN "+ dbTableLogImages+ " ON ( cg_logs._id = log_id ) WHERE geocode = ?  ORDER BY date desc, cg_logs._id asc",new String[]{geocode});
  if (cursor != null && cursor.getCount() > 0) {
    cgLog log=null;
    while (cursor.moveToNext() && logs.size() < 100) {
      if (log == null || log.id != cursor.getInt(cursor.getColumnIndex("cg_logs_id"))) {
        log=new cgLog();
        log.id=(int)cursor.getInt(cursor.getColumnIndex("cg_logs_id"));
        log.type=(int)cursor.getInt(cursor.getColumnIndex("type"));
        log.author=(String)cursor.getString(cursor.getColumnIndex("author"));
        log.log=(String)cursor.getString(cursor.getColumnIndex("log"));
        log.date=(long)cursor.getLong(cursor.getColumnIndex("date"));
        log.found=(int)cursor.getInt(cursor.getColumnIndex("found"));
        logs.add(log);
      }
      if (!cursor.isNull(cursor.getColumnIndex("cg_logImages_id"))) {
        final cgImage log_img=new cgImage();
        log_img.title=(String)cursor.getString(cursor.getColumnIndex("title"));
        if (log_img.title == null) {
          log_img.title="";
        }
        log_img.url=(String)cursor.getString(cursor.getColumnIndex("url"));
        if (log_img.url == null) {
          log_img.url="";
        }
        if (log.logImages == null) {
          log.logImages=new ArrayList<cgImage>();
        }
        log.logImages.add(log_img);
      }
    }
  }
  if (cursor != null) {
    cursor.close();
  }
  return logs;
}
