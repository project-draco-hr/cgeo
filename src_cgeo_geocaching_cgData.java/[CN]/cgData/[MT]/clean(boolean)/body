{
  init();
  Log.d(cgSettings.tag,"Database clean: started");
  Cursor cursor=null;
  ArrayList<String> geocodes=new ArrayList<String>();
  try {
    if (more) {
      cursor=databaseRO.query(dbTableCaches,new String[]{"_id","geocode"},"reason = 0",null,null,null,null,null);
    }
 else {
      cursor=databaseRO.query(dbTableCaches,new String[]{"_id","geocode"},"reason = 0 and detailed < " + (System.currentTimeMillis() - (3 * 24 * 60* 60* 1000)) + " and detailedupdate < "+ (System.currentTimeMillis() - (3 * 24 * 60* 60* 1000))+ " and visiteddate < "+ (System.currentTimeMillis() - (3 * 24 * 60* 60* 1000)),null,null,null,null,null);
    }
    if (cursor != null) {
      if (cursor.getCount() > 0) {
        cursor.moveToFirst();
        do {
          geocodes.add("\"" + (String)cursor.getString(cursor.getColumnIndex("geocode")) + "\"");
        }
 while (cursor.moveToNext());
      }
      cursor.close();
    }
    final int size=geocodes.size();
    if (size > 0) {
      Log.d(cgSettings.tag,"Database clean: removing " + size + " geocaches");
      String geocodeList=cgBase.implode(", ",geocodes.toArray());
      databaseRW.execSQL("delete from " + dbTableCaches + " where geocode in ("+ geocodeList+ ")");
      databaseRW.execSQL("delete from " + dbTableAttributes + " where geocode in ("+ geocodeList+ ")");
      databaseRW.execSQL("delete from " + dbTableSpoilers + " where geocode in ("+ geocodeList+ ")");
      databaseRW.execSQL("delete from " + dbTableLogs + " where geocode in ("+ geocodeList+ ")");
      databaseRW.execSQL("delete from " + dbTableLogCount + " where geocode in ("+ geocodeList+ ")");
      databaseRW.execSQL("delete from " + dbTableLogsOffline + " where geocode in ("+ geocodeList+ ")");
      databaseRW.execSQL("delete from " + dbTableWaypoints + " where geocode in ("+ geocodeList+ ") and type <> \"own\"");
      databaseRW.execSQL("delete from " + dbTableTrackables + " where geocode in ("+ geocodeList+ ")");
      geocodes.clear();
    }
    databaseRW.execSQL("delete from " + dbTableCaches + " where geocode = \"\"");
    if (Log.isLoggable(cgSettings.tag,Log.DEBUG)) {
      final SQLiteStatement countSql=databaseRO.compileStatement("select count(_id) from " + dbTableCaches + " where reason = 0");
      final int count=(int)countSql.simpleQueryForLong();
      countSql.close();
      Log.d(cgSettings.tag,"Database clean: " + count + " cached geocaches remaining");
    }
  }
 catch (  Exception e) {
    Log.w(cgSettings.tag,"cgData.clean: " + e.toString());
  }
  Log.d(cgSettings.tag,"Database clean: finished");
}
