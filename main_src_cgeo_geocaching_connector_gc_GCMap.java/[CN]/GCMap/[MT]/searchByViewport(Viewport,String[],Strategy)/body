{
  Log.d("GCMap.searchByViewport" + viewport.toString());
  final SearchResult searchResult=new SearchResult();
  if (Settings.isDebug()) {
    searchResult.setUrl(viewport.getCenter().format(Format.LAT_LON_DECMINUTE));
  }
  if (strategy.flags.contains(StrategyFlag.LOAD_TILES)) {
    final Set<Tile> tiles=Tile.getTilesForViewport(viewport);
    if (Settings.isDebug()) {
      searchResult.setUrl(new StringBuilder().append(tiles.iterator().next().getZoomlevel()).append(Formatter.SEPARATOR).append(searchResult.getUrl()).toString());
    }
    for (    Tile tile : tiles) {
      if (!Tile.Cache.contains(tile)) {
        final Parameters params=new Parameters("x",String.valueOf(tile.getX()),"y",String.valueOf(tile.getY()),"z",String.valueOf(tile.getZoomlevel()),"ep","1","app","cgeo");
        if (tokens != null) {
          params.put("k",tokens[0],"st",tokens[1]);
        }
        if (Settings.isExcludeMyCaches()) {
          params.put("hf","1","hh","1");
        }
        if (Settings.getCacheType() == CacheType.TRADITIONAL) {
          params.put("ect","9,5,3,6,453,13,1304,137,11,4,8,1858");
        }
 else         if (Settings.getCacheType() == CacheType.MULTI) {
          params.put("ect","9,5,2,6,453,13,1304,137,11,4,8,1858");
        }
 else         if (Settings.getCacheType() == CacheType.MYSTERY) {
          params.put("ect","9,5,3,6,453,13,1304,137,11,4,2,1858");
        }
        if (tile.getZoomlevel() != 14) {
          params.put("_",String.valueOf(System.currentTimeMillis()));
        }
        Bitmap bitmap=Tile.requestMapTile(params);
        if (bitmap != null && (bitmap.getWidth() != Tile.TILE_SIZE || bitmap.getHeight() != Tile.TILE_SIZE)) {
          bitmap.recycle();
          bitmap=null;
        }
        String data=Tile.requestMapInfo(GCConstants.URL_MAP_INFO,params,GCConstants.URL_LIVE_MAP);
        if (StringUtils.isEmpty(data)) {
          Log.w("GCMap.searchByViewport: No data from server for tile (" + tile.getX() + "/"+ tile.getY()+ ")");
        }
 else {
          final SearchResult search=GCMap.parseMapJSON(data,tile,bitmap,strategy);
          if (search == null || CollectionUtils.isEmpty(search.getGeocodes())) {
            Log.e("GCMap.searchByViewport: No cache parsed for viewport " + viewport);
          }
 else {
            searchResult.addSearchResult(search);
          }
          Tile.Cache.add(tile);
        }
        if (bitmap != null) {
          bitmap.recycle();
        }
      }
    }
    if (tiles.iterator().next().getZoomlevel() >= Tile.ZOOMLEVEL_MIN_PERSONALIZED) {
      searchResult.addFilteredGeocodes(cgData.getCachedMissingFromSearch(searchResult,tiles,GCConnector.getInstance(),Tile.ZOOMLEVEL_MIN_PERSONALIZED - 1));
    }
  }
  if (strategy.flags.contains(StrategyFlag.SEARCH_NEARBY) && Settings.isPremiumMember()) {
    final Geopoint center=viewport.getCenter();
    if ((lastSearchViewport == null) || !lastSearchViewport.contains(center)) {
      SearchResult search=GCParser.searchByCoords(center,Settings.getCacheType(),false,null);
      if (search != null && !search.isEmpty()) {
        final Set<String> geocodes=search.getGeocodes();
        lastSearchViewport=cgData.getBounds(geocodes);
        searchResult.addGeocodes(geocodes);
      }
    }
  }
  return searchResult;
}
