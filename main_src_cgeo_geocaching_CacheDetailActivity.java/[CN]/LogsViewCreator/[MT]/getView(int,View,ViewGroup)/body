{
  View rowView=convertView;
  if (null == rowView) {
    rowView=getLayoutInflater().inflate(R.layout.cacheview_logs_item,null);
  }
  LogViewHolder holder=(LogViewHolder)rowView.getTag();
  if (null == holder) {
    holder=new LogViewHolder(rowView);
    rowView.setTag(holder);
  }
  final cgLog log=getItem(position);
  if (log.date > 0) {
    holder.date.setText(Formatter.formatShortDate(log.date));
    holder.date.setVisibility(View.VISIBLE);
  }
 else {
    holder.date.setVisibility(View.GONE);
  }
  holder.type.setText(log.type.getL10n());
  holder.author.setText(StringEscapeUtils.unescapeHtml4(log.author));
  holder.count.setVisibility(View.VISIBLE);
  if (log.found == -1) {
    holder.count.setVisibility(View.GONE);
  }
 else   if (log.found == 0) {
    holder.count.setText(res.getString(R.string.cache_count_no));
  }
 else   if (log.found == 1) {
    holder.count.setText(res.getString(R.string.cache_count_one));
  }
 else {
    holder.count.setText(log.found + " " + res.getString(R.string.cache_count_more));
  }
  if (BaseUtils.containsHtml(log.log)) {
    holder.text.setText(Html.fromHtml(log.log,new HtmlImage(CacheDetailActivity.this,cache.getGeocode(),false,cache.getListId(),false),null),TextView.BufferType.SPANNABLE);
  }
 else {
    holder.text.setText(log.log);
  }
  if (CollectionUtils.isNotEmpty(log.logImages)) {
    List<String> titles=new ArrayList<String>(5);
    for (    cgImage image : log.logImages) {
      if (StringUtils.isNotBlank(image.getTitle())) {
        titles.add(image.getTitle());
      }
    }
    if (titles.isEmpty()) {
      titles.add(res.getString(R.string.cache_log_image_default_title));
    }
    holder.images.setText(StringUtils.join(titles,", "));
    holder.images.setVisibility(View.VISIBLE);
    holder.images.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        cgeoimages.startActivityLogImages(CacheDetailActivity.this,cache.getGeocode(),new ArrayList<cgImage>(log.logImages));
      }
    }
);
  }
 else {
    holder.images.setVisibility(View.GONE);
  }
  holder.statusMarker.setVisibility(View.VISIBLE);
  if (log.type == LogType.LOG_FOUND_IT || log.type == LogType.LOG_WEBCAM_PHOTO_TAKEN || log.type == LogType.LOG_ATTENDED) {
    holder.statusMarker.setImageResource(R.drawable.mark_green);
  }
 else   if (log.type == LogType.LOG_PUBLISH_LISTING || log.type == LogType.LOG_ENABLE_LISTING || log.type == LogType.LOG_OWNER_MAINTENANCE) {
    holder.statusMarker.setImageResource(R.drawable.mark_green_more);
  }
 else   if (log.type == LogType.LOG_DIDNT_FIND_IT || log.type == LogType.LOG_NEEDS_MAINTENANCE || log.type == LogType.LOG_NEEDS_ARCHIVE) {
    holder.statusMarker.setImageResource(R.drawable.mark_red);
  }
 else   if (log.type == LogType.LOG_TEMP_DISABLE_LISTING || log.type == LogType.LOG_ARCHIVE) {
    holder.statusMarker.setImageResource(R.drawable.mark_red_more);
  }
 else {
    holder.statusMarker.setVisibility(View.GONE);
  }
  if (null == convertView) {
    holder.author.setOnClickListener(userActionsClickListener);
    holder.text.setMovementMethod(LinkMovementMethod.getInstance());
    holder.text.setOnClickListener(decryptTextClickListener);
    registerForContextMenu(holder.text);
  }
  return rowView;
}
