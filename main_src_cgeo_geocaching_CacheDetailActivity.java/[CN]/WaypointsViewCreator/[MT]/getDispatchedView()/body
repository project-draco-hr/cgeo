{
  if (cache == null) {
    return null;
  }
  view=(ScrollView)getLayoutInflater().inflate(R.layout.cacheview_waypoints,null);
  final LinearLayout waypoints=(LinearLayout)view.findViewById(R.id.waypoints);
  final List<cgWaypoint> sortedWaypoints=new ArrayList<cgWaypoint>(cache.getWaypoints());
  Collections.sort(sortedWaypoints);
  for (  final cgWaypoint wpt : sortedWaypoints) {
    final LinearLayout waypointView=(LinearLayout)getLayoutInflater().inflate(R.layout.waypoint_item,null);
    if (null != wpt.getCoords()) {
      final TextView coordinatesView=(TextView)waypointView.findViewById(R.id.coordinates);
      coordinatesView.setText(wpt.getCoords().toString());
      coordinatesView.setVisibility(View.VISIBLE);
    }
    final List<String> infoTextList=new ArrayList<String>(3);
    if (WaypointType.ALL_TYPES_EXCEPT_OWN.contains(wpt.getWaypointType())) {
      infoTextList.add(wpt.getWaypointType().getL10n());
    }
    if (cgWaypoint.PREFIX_OWN.equalsIgnoreCase(wpt.getPrefix())) {
      infoTextList.add(res.getString(R.string.waypoint_custom));
    }
 else {
      if (StringUtils.isNotBlank(wpt.getPrefix())) {
        infoTextList.add(wpt.getPrefix());
      }
      if (StringUtils.isNotBlank(wpt.getLookup())) {
        infoTextList.add(wpt.getLookup());
      }
    }
    if (CollectionUtils.isNotEmpty(infoTextList)) {
      final TextView infoView=(TextView)waypointView.findViewById(R.id.info);
      infoView.setText(StringUtils.join(infoTextList,Formatter.SEPARATOR));
      infoView.setVisibility(View.VISIBLE);
    }
    final TextView nameView=(TextView)waypointView.findViewById(R.id.name);
    if (StringUtils.isNotBlank(wpt.getName())) {
      nameView.setText(StringEscapeUtils.unescapeHtml4(wpt.getName()));
    }
 else     if (null != wpt.getCoords()) {
      nameView.setText(wpt.getCoords().toString());
    }
 else {
      nameView.setText(res.getString(R.string.waypoint));
    }
    wpt.setIcon(res,nameView);
    if (StringUtils.isNotBlank(wpt.getNote())) {
      final TextView noteView=(TextView)waypointView.findViewById(R.id.note);
      noteView.setVisibility(View.VISIBLE);
      if (BaseUtils.containsHtml(wpt.getNote())) {
        noteView.setText(Html.fromHtml(wpt.getNote()),TextView.BufferType.SPANNABLE);
      }
 else {
        noteView.setText(wpt.getNote());
      }
    }
    final View wpNavView=waypointView.findViewById(R.id.wpDefaultNavigation);
    wpNavView.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        NavigationAppFactory.startDefaultNavigationApplication(geolocation,CacheDetailActivity.this,null,wpt,null);
      }
    }
);
    wpNavView.setOnLongClickListener(new View.OnLongClickListener(){
      @Override public boolean onLongClick(      View v){
        NavigationAppFactory.startDefaultNavigationApplication2(geolocation,CacheDetailActivity.this,null,wpt,null);
        return true;
      }
    }
);
    registerForContextMenu(waypointView);
    waypointView.setOnClickListener(new WaypointInfoClickListener());
    waypoints.addView(waypointView);
  }
  final Button addWaypoint=(Button)view.findViewById(R.id.add_waypoint);
  addWaypoint.setClickable(true);
  addWaypoint.setOnClickListener(new AddWaypointClickListener());
  return view;
}
