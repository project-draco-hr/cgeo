{
  final int groupId=item.getGroupId();
  final int index=item.getItemId();
switch (groupId) {
case R.id.author:
case R.id.value:
    final int itemId=item.getItemId();
switch (itemId) {
case 1:
    cgeocaches.startActivityOwner(this,contextMenuUser);
  return true;
case 2:
cgeocaches.startActivityUserName(this,contextMenuUser);
return true;
case 3:
startActivity(new Intent(Intent.ACTION_VIEW,Uri.parse("http://www.geocaching.com/profile/?u=" + URLEncoder.encode(contextMenuUser))));
return true;
default :
break;
}
break;
case R.id.log:
switch (index) {
case 1:
ClipboardUtils.copyToClipboard(contextMenuLogText);
return true;
case 2:
startActivity(new Intent(Intent.ACTION_VIEW,Uri.parse(TranslationUtils.buildTranslationURI(Locale.getDefault().getLanguage(),contextMenuLogText.toString()))));
return true;
case 3:
startActivity(new Intent(Intent.ACTION_VIEW,Uri.parse(TranslationUtils.buildTranslationURI(Locale.ENGLISH.getLanguage(),contextMenuLogText.toString()))));
return true;
default :
break;
}
break;
case CONTEXT_MENU_WAYPOINT_EDIT:
if (cache.hasWaypoints() && index < cache.getWaypoints().size()) {
final cgWaypoint waypoint=cache.getWaypoints().get(index);
Intent editIntent=new Intent(this,cgeowaypointadd.class);
editIntent.putExtra("waypoint",waypoint.getId());
startActivity(editIntent);
refreshOnResume=true;
}
break;
case CONTEXT_MENU_WAYPOINT_DUPLICATE:
if (cache.duplicateWaypoint(index)) {
notifyDataSetChanged();
}
break;
case CONTEXT_MENU_WAYPOINT_DELETE:
if (cache.deleteWaypoint(index)) {
notifyDataSetChanged();
}
break;
case CONTEXT_MENU_WAYPOINT_DEFAULT_NAVIGATION:
{
final cgWaypoint waypoint=cache.getWaypoint(index);
if (waypoint != null) {
NavigationAppFactory.startDefaultNavigationApplication(geolocation,this,null,null,waypoint,null);
}
}
break;
case CONTEXT_MENU_WAYPOINT_NAVIGATE:
{
final cgWaypoint waypoint=cache.getWaypoint(contextMenuWPIndex);
if (waypoint != null) {
NavigationAppFactory.showNavigationMenu(geolocation,this,null,null,waypoint,null);
}
}
break;
case CONTEXT_MENU_WAYPOINT_CACHES_AROUND:
{
final cgWaypoint waypoint=cache.getWaypoint(index);
if (waypoint != null) {
cgeocaches.startActivityCachesAround(this,waypoint.getCoords());
}
}
break;
default :
return onOptionsItemSelected(item);
}
return false;
}
