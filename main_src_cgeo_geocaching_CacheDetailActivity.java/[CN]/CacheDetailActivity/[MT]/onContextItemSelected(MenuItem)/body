{
  final int groupId=item.getGroupId();
  final int index=item.getItemId();
switch (groupId) {
case R.id.value:
case R.id.shortdesc:
case R.id.longdesc:
case R.id.personalnote:
case R.id.hint:
case R.id.log:
switch (index) {
case MENU_FIELD_COPY:
      ClipboardUtils.copyToClipboard(clickedItemText);
    showToast(res.getString(R.string.clipboard_copy_ok));
  return true;
case MENU_FIELD_TRANSLATE:
TranslationUtils.startActivityTranslate(this,Locale.getDefault().getLanguage(),HtmlUtils.extractText(clickedItemText));
return true;
case MENU_FIELD_TRANSLATE_EN:
TranslationUtils.startActivityTranslate(this,Locale.ENGLISH.getLanguage(),HtmlUtils.extractText(clickedItemText));
return true;
case MENU_FIELD_SHARE:
final Intent intent=new Intent(Intent.ACTION_SEND);
intent.setType("text/plain");
intent.putExtra(Intent.EXTRA_TEXT,clickedItemText.toString());
startActivity(Intent.createChooser(intent,res.getText(R.string.cache_share_field)));
return true;
default :
break;
}
break;
case CONTEXT_MENU_WAYPOINT_EDIT:
final Waypoint waypointEdit=cache.getWaypoint(index);
if (waypointEdit != null) {
EditWaypointActivity.startActivityEditWaypoint(this,waypointEdit.getId());
refreshOnResume=true;
}
break;
case CONTEXT_MENU_WAYPOINT_DUPLICATE:
final Waypoint waypointDuplicate=cache.getWaypoint(index);
if (cache.duplicateWaypoint(waypointDuplicate)) {
cgData.saveCache(cache,EnumSet.of(SaveFlag.SAVE_DB));
notifyDataSetChanged();
}
break;
case CONTEXT_MENU_WAYPOINT_DELETE:
final Waypoint waypointDelete=cache.getWaypoint(index);
if (cache.deleteWaypoint(waypointDelete)) {
cgData.saveCache(cache,EnumSet.of(SaveFlag.SAVE_DB));
notifyDataSetChanged();
}
break;
case CONTEXT_MENU_WAYPOINT_DEFAULT_NAVIGATION:
final Waypoint waypointNavigation=cache.getWaypoint(index);
if (waypointNavigation != null) {
NavigationAppFactory.startDefaultNavigationApplication(1,this,waypointNavigation);
}
break;
case CONTEXT_MENU_WAYPOINT_NAVIGATE:
final Waypoint waypointNav=cache.getWaypoint(contextMenuWPIndex);
if (waypointNav != null) {
NavigationAppFactory.showNavigationMenu(this,null,waypointNav,null);
}
break;
case CONTEXT_MENU_WAYPOINT_CACHES_AROUND:
final Waypoint waypointAround=cache.getWaypoint(index);
if (waypointAround != null) {
cgeocaches.startActivityCoordinates(this,waypointAround.getCoords());
}
break;
case CONTEXT_MENU_WAYPOINT_RESET_ORIGINAL_CACHE_COORDINATES:
new ResetCacheCoordinatesDialog(cache,cache.getWaypoint(index),this).show();
break;
default :
if (imagesList != null && imagesList.onContextItemSelected(item)) {
return true;
}
return onOptionsItemSelected(item);
}
return false;
}
