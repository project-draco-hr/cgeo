{
  super.onCreateContextMenu(menu,view,info);
  final int viewId=view.getId();
  contextMenuWPIndex=-1;
switch (viewId) {
case R.id.value:
    clickedItemText=((TextView)view).getText();
  String itemTitle=(String)((TextView)((View)view.getParent()).findViewById(R.id.name)).getText();
buildOptionsContextmenu(menu,viewId,itemTitle,true);
break;
case R.id.shortdesc:
clickedItemText=((TextView)view).getText();
buildOptionsContextmenu(menu,viewId,res.getString(R.string.cache_description),false);
break;
case R.id.longdesc:
String shortDesc=cache.getShortDescription();
if (StringUtils.isBlank(shortDesc)) {
clickedItemText=((TextView)view).getText();
}
 else {
clickedItemText=shortDesc + "\n\n" + ((TextView)view).getText();
}
buildOptionsContextmenu(menu,viewId,res.getString(R.string.cache_description),false);
break;
case R.id.personalnote:
clickedItemText=((TextView)view).getText();
buildOptionsContextmenu(menu,viewId,res.getString(R.string.cache_personal_note),true);
break;
case R.id.hint:
clickedItemText=((TextView)view).getText();
buildOptionsContextmenu(menu,viewId,res.getString(R.string.cache_hint),false);
break;
case R.id.log:
clickedItemText=((TextView)view).getText();
buildOptionsContextmenu(menu,viewId,res.getString(R.string.cache_logs),false);
break;
case -1:
if (null != cache.getWaypoints()) {
try {
final ViewGroup parent=((ViewGroup)view.getParent());
for (int i=0; i < parent.getChildCount(); i++) {
if (parent.getChildAt(i) == view) {
final List<Waypoint> sortedWaypoints=new ArrayList<Waypoint>(cache.getWaypoints());
Collections.sort(sortedWaypoints);
final Waypoint waypoint=sortedWaypoints.get(i);
final int index=cache.getWaypoints().indexOf(waypoint);
menu.setHeaderTitle(res.getString(R.string.waypoint));
if (waypoint.getWaypointType().equals(WaypointType.ORIGINAL)) {
menu.add(CONTEXT_MENU_WAYPOINT_RESET_ORIGINAL_CACHE_COORDINATES,index,0,R.string.waypoint_reset_cache_coords);
}
 else {
menu.add(CONTEXT_MENU_WAYPOINT_EDIT,index,0,R.string.waypoint_edit);
menu.add(CONTEXT_MENU_WAYPOINT_DUPLICATE,index,0,R.string.waypoint_duplicate);
}
contextMenuWPIndex=index;
if (waypoint.isUserDefined() && !waypoint.getWaypointType().equals(WaypointType.ORIGINAL)) {
menu.add(CONTEXT_MENU_WAYPOINT_DELETE,index,0,R.string.waypoint_delete);
}
if (waypoint.getCoords() != null) {
menu.add(CONTEXT_MENU_WAYPOINT_DEFAULT_NAVIGATION,index,0,NavigationAppFactory.getDefaultNavigationApplication().getName());
menu.add(CONTEXT_MENU_WAYPOINT_NAVIGATE,index,0,R.string.cache_menu_navigate).setIcon(R.drawable.ic_menu_mapmode);
menu.add(CONTEXT_MENU_WAYPOINT_CACHES_AROUND,index,0,R.string.cache_menu_around);
}
break;
}
}
}
 catch (Exception e) {
}
}
break;
default :
if (imagesList != null) {
imagesList.onCreateContextMenu(menu,view);
}
break;
}
}
