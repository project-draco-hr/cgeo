{
  super.onCreate(savedInstanceState,R.layout.cachedetail_activity);
  setTitle(res.getString(R.string.cache));
  String geocode=null;
  if (search != null) {
    cache=search.getFirstCacheFromResult(LoadFlags.LOAD_ALL_DB_ONLY);
    if (cache != null && cache.getGeocode() != null) {
      geocode=cache.getGeocode();
    }
  }
  final Bundle extras=getIntent().getExtras();
  final Uri uri=getIntent().getData();
  String name=null;
  String guid=null;
  if (geocode == null && extras != null) {
    geocode=extras.getString(Intents.EXTRA_GEOCODE);
    name=extras.getString(Intents.EXTRA_NAME);
    guid=extras.getString(Intents.EXTRA_GUID);
  }
  if (geocode == null && guid == null && uri != null) {
    final String uriHost=uri.getHost().toLowerCase(Locale.US);
    final String uriPath=uri.getPath().toLowerCase(Locale.US);
    final String uriQuery=uri.getQuery();
    if (uriQuery != null) {
      Log.i("Opening URI: " + uriHost + uriPath+ "?"+ uriQuery);
    }
 else {
      Log.i("Opening URI: " + uriHost + uriPath);
    }
    if (uriHost.contains("geocaching.com")) {
      geocode=uri.getQueryParameter("wp");
      guid=uri.getQueryParameter("guid");
      if (StringUtils.isNotBlank(geocode)) {
        geocode=geocode.toUpperCase(Locale.US);
        guid=null;
      }
 else       if (StringUtils.isNotBlank(guid)) {
        geocode=null;
        guid=guid.toLowerCase(Locale.US);
      }
 else {
        showToast(res.getString(R.string.err_detail_open));
        finish();
        return;
      }
    }
 else     if (uriHost.contains("coord.info")) {
      if (uriPath != null && uriPath.startsWith("/gc")) {
        geocode=uriPath.substring(1).toUpperCase(Locale.US);
      }
 else {
        showToast(res.getString(R.string.err_detail_open));
        finish();
        return;
      }
    }
 else     if (uriHost.contains("opencaching.de")) {
      if (uriPath != null && uriPath.startsWith("/oc")) {
        geocode=uriPath.substring(1).toUpperCase(Locale.US);
      }
 else {
        geocode=uri.getQueryParameter("wp");
        if (StringUtils.isNotBlank(geocode)) {
          geocode=geocode.toUpperCase(Locale.US);
        }
 else {
          showToast(res.getString(R.string.err_detail_open));
          finish();
          return;
        }
      }
    }
 else {
      showToast(res.getString(R.string.err_detail_open));
      finish();
      return;
    }
  }
  if (geocode == null && guid == null) {
    showToast(res.getString(R.string.err_detail_cache));
    finish();
    return;
  }
  final LoadCacheHandler loadCacheHandler=new LoadCacheHandler();
  try {
    String title=res.getString(R.string.cache);
    if (StringUtils.isNotBlank(name)) {
      title=name;
    }
 else     if (null != geocode && StringUtils.isNotBlank(geocode)) {
      title=geocode;
    }
    progress.show(this,title,res.getString(R.string.cache_dialog_loading_details),true,loadCacheHandler.cancelMessage());
  }
 catch (  final Exception e) {
  }
  final ImageView defaultNavigationImageView=(ImageView)findViewById(R.id.defaultNavigation);
  defaultNavigationImageView.setOnLongClickListener(new OnLongClickListener(){
    @Override public boolean onLongClick(    View v){
      startDefaultNavigation2();
      return true;
    }
  }
);
  final int pageToOpen=savedInstanceState != null ? savedInstanceState.getInt(STATE_PAGE_INDEX,0) : Settings.isOpenLastDetailsPage() ? Settings.getLastDetailsPage() : 1;
  createViewPager(pageToOpen,new OnPageSelectedListener(){
    @Override public void onPageSelected(    int position){
      if (Settings.isOpenLastDetailsPage()) {
        Settings.setLastDetailsPage(position);
      }
      if (getPage(position) == Page.IMAGES) {
        loadCacheImages();
      }
    }
  }
);
  new LoadCacheThread(geocode,guid,loadCacheHandler).start();
}
