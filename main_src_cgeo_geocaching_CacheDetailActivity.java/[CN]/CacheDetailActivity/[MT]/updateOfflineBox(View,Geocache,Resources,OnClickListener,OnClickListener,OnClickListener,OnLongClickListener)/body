{
  final TextView offlineText=ButterKnife.findById(view,R.id.offline_text);
  final ImageButton offlineRefresh=ButterKnife.findById(view,R.id.offline_refresh);
  final ImageButton offlineStoreDrop=ButterKnife.findById(view,R.id.offline_store_drop);
  final ImageButton offlineEdit=ButterKnife.findById(view,R.id.offline_edit);
  offlineStoreDrop.setClickable(true);
  offlineStoreDrop.setOnClickListener(storeCacheClickListener);
  if (moveCacheListener != null) {
    offlineEdit.setOnLongClickListener(moveCacheListener);
  }
  offlineRefresh.setVisibility(cache.supportsRefresh() ? View.VISIBLE : View.GONE);
  offlineRefresh.setClickable(true);
  offlineRefresh.setOnClickListener(refreshCacheClickListener);
  if (cache.isOffline()) {
    final long diff=(System.currentTimeMillis() / (60 * 1000)) - (cache.getDetailedUpdate() / (60 * 1000));
    final String ago;
    if (diff < 15) {
      ago=res.getString(R.string.cache_offline_time_mins_few);
    }
 else     if (diff < 50) {
      ago=res.getQuantityString(R.plurals.cache_offline_about_time_mins,(int)diff,(int)diff);
    }
 else     if (diff < (48 * 60)) {
      ago=res.getQuantityString(R.plurals.cache_offline_about_time_hours,(int)(diff / 60),(int)(diff / 60));
    }
 else {
      ago=res.getQuantityString(R.plurals.cache_offline_about_time_days,(int)(diff / (24 * 60)),(int)(diff / (24 * 60)));
    }
    offlineText.setText(res.getString(R.string.cache_offline_stored) + "\n" + ago);
    offlineStoreDrop.setOnClickListener(dropCacheClickListener);
    offlineStoreDrop.setClickable(true);
    offlineStoreDrop.setImageResource(R.drawable.ic_menu_delete);
    offlineEdit.setVisibility(View.VISIBLE);
    offlineEdit.setOnClickListener(storeCacheClickListener);
  }
 else {
    offlineText.setText(res.getString(R.string.cache_offline_not_ready));
    offlineStoreDrop.setImageResource(R.drawable.ic_menu_save);
    offlineEdit.setVisibility(View.GONE);
  }
}
