{
  final TextView offlineText=(TextView)view.findViewById(R.id.offline_text);
  final Button offlineRefresh=(Button)view.findViewById(R.id.offline_refresh);
  final Button offlineStore=(Button)view.findViewById(R.id.offline_store);
  if (cache.isOffline()) {
    long diff=(System.currentTimeMillis() / (60 * 1000)) - (cache.getDetailedUpdate() / (60 * 1000));
    String ago;
    if (diff < 15) {
      ago=res.getString(R.string.cache_offline_time_mins_few);
    }
 else     if (diff < 50) {
      ago=res.getString(R.string.cache_offline_time_about) + " " + diff+ " "+ res.getString(R.string.cache_offline_time_mins);
    }
 else     if (diff < 90) {
      ago=res.getString(R.string.cache_offline_time_about) + " " + res.getString(R.string.cache_offline_time_hour);
    }
 else     if (diff < (48 * 60)) {
      ago=res.getString(R.string.cache_offline_time_about) + " " + (diff / 60)+ " "+ res.getString(R.string.cache_offline_time_hours);
    }
 else {
      ago=res.getString(R.string.cache_offline_time_about) + " " + (diff / (24 * 60))+ " "+ res.getString(R.string.cache_offline_time_days);
    }
    offlineText.setText(res.getString(R.string.cache_offline_stored) + "\n" + ago);
    offlineRefresh.setOnClickListener(new RefreshCacheClickListener());
    offlineStore.setText(res.getString(R.string.cache_offline_drop));
    offlineStore.setClickable(true);
    offlineStore.setOnClickListener(new DropCacheClickListener());
  }
 else {
    offlineText.setText(res.getString(R.string.cache_offline_not_ready));
    offlineRefresh.setOnClickListener(new RefreshCacheClickListener());
    offlineStore.setText(res.getString(R.string.cache_offline_store));
    offlineStore.setClickable(true);
    offlineStore.setOnClickListener(new StoreCacheClickListener());
  }
  offlineRefresh.setVisibility(cache.supportsRefresh() ? View.VISIBLE : View.GONE);
  offlineRefresh.setClickable(true);
}
