{
  final LinearLayout rows=new LinearLayout(CacheDetailActivity.this);
  rows.setLayoutParams(new LayoutParams(LayoutParams.MATCH_PARENT,LayoutParams.WRAP_CONTENT));
  rows.setOrientation(LinearLayout.VERTICAL);
  LinearLayout attributeRow=newAttributeIconsRow();
  rows.addView(attributeRow);
  noAttributeIconsFound=true;
  for (  String attributeName : cache.getAttributes()) {
    attributeRow.measure(0,0);
    int rowWidth=attributeRow.getMeasuredWidth();
    FrameLayout fl=(FrameLayout)getLayoutInflater().inflate(R.layout.attribute_image,null);
    ImageView iv=(ImageView)fl.getChildAt(0);
    if ((parentWidth - rowWidth) < iv.getLayoutParams().width) {
      attributeRow=newAttributeIconsRow();
      rows.addView(attributeRow);
    }
    final boolean strikethru=!CacheAttribute.isEnabled(attributeName);
    final CacheAttribute attrib=CacheAttribute.getByRawName(CacheAttribute.trimAttributeName(attributeName));
    if (attrib != null) {
      noAttributeIconsFound=false;
      Drawable d=res.getDrawable(attrib.drawableId);
      iv.setImageDrawable(d);
      if (strikethru) {
        ImageView strikethruImage=new ImageView(CacheDetailActivity.this);
        strikethruImage.setLayoutParams(iv.getLayoutParams());
        d=res.getDrawable(R.drawable.attribute__strikethru);
        strikethruImage.setImageDrawable(d);
        fl.addView(strikethruImage);
      }
    }
 else {
      Drawable d=res.getDrawable(R.drawable.attribute_unknown);
      iv.setImageDrawable(d);
    }
    attributeRow.addView(fl);
  }
  return rows;
}
