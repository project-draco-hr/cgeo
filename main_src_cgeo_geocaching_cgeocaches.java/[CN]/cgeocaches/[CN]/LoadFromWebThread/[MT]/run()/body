{
  int ret=MSG_DONE;
  removeGeoAndDir();
  int delay=-1;
  int times=0;
  while (!needToStop && times < 3 * 60 / 5) {
    String deviceCode=Settings.getWebDeviceCode();
    if (deviceCode == null) {
      deviceCode="";
    }
    final Parameters params=new Parameters("code",deviceCode);
    HttpResponse responseFromWeb=Network.request("http://send2.cgeo.org/read.html",params,true);
    if (responseFromWeb != null && responseFromWeb.getStatusLine().getStatusCode() == 200) {
      final String response=Network.getResponseData(responseFromWeb);
      if (response.length() > 2) {
        String GCcode=response;
        delay=1;
        handler.sendMessage(handler.obtainMessage(1,GCcode));
        yield();
        cgBase.storeCache(cgeocaches.this,null,GCcode,listIdLFW,false,null);
        handler.sendMessage(handler.obtainMessage(2,GCcode));
        yield();
      }
 else       if ("RG".equals(response)) {
        Settings.setWebNameCode(null,null);
        ret=-3;
        needToStop=true;
        break;
      }
 else {
        delay=0;
        handler.sendEmptyMessage(0);
        yield();
      }
    }
    if (responseFromWeb == null || responseFromWeb.getStatusLine().getStatusCode() != 200) {
      ret=-2;
      needToStop=true;
      break;
    }
    try {
      yield();
      if (delay == 0) {
        sleep(5000);
        times++;
      }
 else {
        sleep(500);
        times=0;
      }
    }
 catch (    InterruptedException e) {
      Log.e(Settings.tag,"cgeocaches.LoadFromWebThread.sleep: " + e.toString());
    }
  }
  handler.sendEmptyMessage(ret);
}
