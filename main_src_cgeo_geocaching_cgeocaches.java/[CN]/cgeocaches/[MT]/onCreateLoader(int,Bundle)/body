{
  if (type >= CacheListLoaderType.values().length) {
    throw new IllegalArgumentException("invalid loader type " + type);
  }
  final CacheListLoaderType enumType=CacheListLoaderType.values()[type];
  AbstractSearchLoader loader=null;
switch (enumType) {
case OFFLINE:
    listId=Settings.getLastList();
  if (listId <= StoredList.TEMPORARY_LIST_ID) {
    listId=StoredList.STANDARD_LIST_ID;
    title=res.getString(R.string.stored_caches_button);
  }
 else {
    final StoredList list=cgData.getList(listId);
    listId=list.id;
    title=list.title;
  }
loader=new OfflineGeocacheListLoader(this.getBaseContext(),coords,listId);
break;
case HISTORY:
title=res.getString(R.string.caches_history);
loader=new HistoryGeocacheListLoader(app,coords);
break;
case NEAREST:
title=res.getString(R.string.caches_nearby);
loader=new CoordsGeocacheListLoader(app,coords);
break;
case COORDINATE:
title=coords.toString();
loader=new CoordsGeocacheListLoader(app,coords);
break;
case KEYWORD:
final String keyword=extras.getString(Intents.EXTRA_KEYWORD);
rememberTerm(keyword);
loader=new KeywordGeocacheListLoader(app,keyword);
break;
case ADDRESS:
final String address=extras.getString(Intents.EXTRA_ADDRESS);
if (StringUtils.isNotBlank(address)) {
rememberTerm(address);
}
 else {
title=coords.toString();
}
if (coords != null) {
loader=new CoordsGeocacheListLoader(app,coords);
}
 else {
loader=new AddressGeocacheListLoader(app,address);
}
break;
case USERNAME:
final String username=extras.getString(Intents.EXTRA_USERNAME);
rememberTerm(username);
loader=new UsernameGeocacheListLoader(app,username);
break;
case OWNER:
final String ownerName=extras.getString(Intents.EXTRA_USERNAME);
rememberTerm(ownerName);
loader=new OwnerGeocacheListLoader(app,ownerName);
break;
case MAP:
title=res.getString(R.string.map_map);
search=(SearchResult)extras.get(Intents.EXTRA_SEARCH);
replaceCacheListFromSearch();
loadCachesHandler.sendMessage(Message.obtain());
break;
case REMOVE_FROM_HISTORY:
title=res.getString(R.string.caches_history);
loader=new RemoveFromHistoryLoader(app,extras.getStringArray(Intents.EXTRA_CACHELIST),coords);
break;
case NEXT_PAGE:
loader=new NextPageGeocacheListLoader(app,search);
break;
case POCKET:
final String guid=extras.getString(Intents.EXTRA_POCKET_GUID);
final String pocket_name=extras.getString(Intents.EXTRA_NAME);
title=pocket_name;
loader=new PocketGeocacheListLoader(app,guid);
break;
}
setTitle(title);
showProgress(true);
showFooterLoadingCaches();
if (loader != null) {
loader.setRecaptchaHandler(new SearchHandler(this,res,loader));
}
return loader;
}
