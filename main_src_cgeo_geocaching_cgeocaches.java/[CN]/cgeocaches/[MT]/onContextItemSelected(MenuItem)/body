{
  final int id=item.getItemId();
  ContextMenu.ContextMenuInfo info=item.getMenuInfo();
  if (info == null) {
    info=lastMenuInfo;
    lastMenuInfo=null;
  }
  AdapterContextMenuInfo adapterInfo=null;
  try {
    adapterInfo=(AdapterContextMenuInfo)info;
  }
 catch (  Exception e) {
    Log.w(Settings.tag,"cgeocaches.onContextItemSelected: " + e.toString());
  }
  if (id == MENU_DEFAULT_NAVIGATION) {
    final cgCache cache=getCacheFromAdapter(adapterInfo);
    final SearchResult singleSearch=cgBase.searchByGeocode(cache.getGeocode(),null,0,false,null);
    NavigationAppFactory.startDefaultNavigationApplication(geo,this,cache,singleSearch,null,null);
    return true;
  }
 else   if (id == MENU_LOG_VISIT) {
    return getCacheFromAdapter(adapterInfo).logVisit(this);
  }
 else   if (id == MENU_CACHE_DETAILS) {
    final Intent cachesIntent=new Intent(this,CacheDetailActivity.class);
    final cgCache cache=getCacheFromAdapter(adapterInfo);
    cachesIntent.putExtra("geocode",cache.getGeocode().toUpperCase());
    cachesIntent.putExtra("name",cache.getName());
    startActivity(cachesIntent);
    return true;
  }
 else   if (id == MENU_DROP_CACHE) {
    cgBase.dropCache(app,getCacheFromAdapter(adapterInfo),new Handler(){
      @Override public void handleMessage(      Message msg){
        refreshCurrentList();
      }
    }
);
    return true;
  }
 else   if (id == MENU_MOVE_TO_LIST) {
    final String geocode=getCacheFromAdapter(adapterInfo).getGeocode();
    final List<StoredList> cacheLists=app.getLists();
    ArrayList<String> listNames=new ArrayList<String>();
    for (    StoredList list : cacheLists) {
      listNames.add(list.getTitleAndCount());
    }
    AlertDialog.Builder builder=new AlertDialog.Builder(this);
    builder.setTitle(res.getString(R.string.cache_menu_move_list));
    builder.setItems(listNames.toArray(new String[listNames.size()]),new DialogInterface.OnClickListener(){
      public void onClick(      DialogInterface dialog,      int item){
        final int newListId=cacheLists.get(item).id;
        app.moveToList(geocode,newListId);
        adapter.resetChecks();
        refreshCurrentList();
      }
    }
);
    builder.create().show();
    return true;
  }
  lastMenuInfo=info;
  if (adapterInfo != null) {
    final cgCache cache=getCacheFromAdapter(adapterInfo);
    final SearchResult singleSearch=cgBase.searchByGeocode(cache.getGeocode(),null,0,false,null);
    if (NavigationAppFactory.onMenuItemSelected(item,geo,this,cache,singleSearch,null,null)) {
      return true;
    }
    int logType=id - MENU_LOG_VISIT_OFFLINE;
    cache.logOffline(this,LogType.getById(logType));
  }
  return true;
}
