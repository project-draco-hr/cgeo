{
  super.onCreateContextMenu(menu,view,info);
  AdapterContextMenuInfo adapterInfo=null;
  try {
    adapterInfo=(AdapterContextMenuInfo)info;
  }
 catch (  final Exception e) {
    Log.w("cgeocaches.onCreateContextMenu",e);
  }
  if (adapterInfo == null || adapterInfo.position >= adapter.getCount()) {
    return;
  }
  final Geocache cache=adapter.getItem(adapterInfo.position);
  menu.setHeaderTitle(StringUtils.defaultIfBlank(cache.getName(),cache.getGeocode()));
  contextMenuGeocode=cache.getGeocode();
  if (cache.getCoords() != null) {
    menu.add(0,MENU_DEFAULT_NAVIGATION,0,NavigationAppFactory.getDefaultNavigationApplication().getName());
    menu.add(1,MENU_NAVIGATION,0,res.getString(R.string.cache_menu_navigate)).setIcon(R.drawable.ic_menu_mapmode);
    LoggingUI.addMenuItems(this,menu,cache);
    menu.add(0,MENU_CACHE_DETAILS,0,res.getString(R.string.cache_menu_details));
  }
  if (cache.isOffline()) {
    menu.add(0,MENU_DROP_CACHE,0,res.getString(R.string.cache_offline_drop));
    menu.add(0,MENU_MOVE_TO_LIST,0,res.getString(R.string.cache_menu_move_list));
    menu.add(0,MENU_EXPORT,0,res.getString(R.string.export));
    menu.add(0,MENU_REFRESH,0,res.getString(R.string.cache_menu_refresh));
  }
 else {
    menu.add(0,MENU_STORE_CACHE,0,res.getString(R.string.cache_offline_store));
  }
}
