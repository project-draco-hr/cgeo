{
  super.onCreate(savedInstanceState);
  setTheme();
  setContentView(R.layout.caches);
  Bundle extras=getIntent().getExtras();
  if (extras != null) {
    Object typeObject=extras.get(Intents.EXTRA_LIST_TYPE);
    type=(typeObject instanceof CacheListType) ? (CacheListType)typeObject : CacheListType.OFFLINE;
    coords=(Geopoint)extras.getParcelable(Intents.EXTRAS_COORDS);
  }
 else {
    extras=new Bundle();
  }
  if (isInvokedFromAttachment()) {
    type=CacheListType.OFFLINE;
    if (coords == null) {
      coords=new Geopoint(0.0,0.0);
    }
  }
  if (CollectionUtils.isNotEmpty(cacheList)) {
    showFooterMoreCaches();
  }
  setTitle(title);
  setAdapter();
  Thread threadPure;
  AbstractSearchThread thread;
  final String username=extras.getString(Intents.EXTRA_USERNAME);
switch (type) {
case OFFLINE:
    listId=Settings.getLastList();
  if (listId <= StoredList.TEMPORARY_LIST_ID) {
    listId=StoredList.STANDARD_LIST_ID;
    title=res.getString(R.string.stored_caches_button);
  }
 else {
    final StoredList list=cgData.getList(listId);
    listId=list.id;
    title=list.title;
  }
setTitle(title);
showProgress(true);
showFooterLoadingCaches();
threadPure=new LoadByOfflineThread(coords,listId);
threadPure.start();
break;
case HISTORY:
title=res.getString(R.string.caches_history);
setTitle(title);
showProgress(true);
showFooterLoadingCaches();
threadPure=new LoadByHistoryThread();
threadPure.start();
break;
case NEAREST:
title=res.getString(R.string.caches_nearby);
setTitle(title);
showProgress(true);
showFooterLoadingCaches();
thread=new LoadByCoordsThread(coords);
thread.setRecaptchaHandler(new SearchHandler(this,res,thread));
thread.start();
break;
case COORDINATE:
title=coords.toString();
setTitle(title);
showProgress(true);
showFooterLoadingCaches();
thread=new LoadByCoordsThread(coords);
thread.setRecaptchaHandler(new SearchHandler(this,res,thread));
thread.start();
break;
case KEYWORD:
final String keyword=extras.getString(Intents.EXTRA_KEYWORD);
title=keyword;
setTitle(title);
showProgress(true);
showFooterLoadingCaches();
thread=new LoadByKeywordThread(keyword);
thread.setRecaptchaHandler(new SearchHandler(this,res,thread));
thread.start();
break;
case ADDRESS:
final String address=extras.getString(Intents.EXTRA_ADDRESS);
if (StringUtils.isNotBlank(address)) {
title=address;
}
 else {
title=coords.toString();
}
setTitle(title);
showProgress(true);
showFooterLoadingCaches();
if (coords != null) {
thread=new LoadByCoordsThread(coords);
}
 else {
thread=new LoadByAddressThread(address);
}
thread.setRecaptchaHandler(new SearchHandler(this,res,thread));
thread.start();
break;
case USERNAME:
title=username;
setTitle(title);
showProgress(true);
showFooterLoadingCaches();
thread=new LoadByUserNameThread(username);
thread.setRecaptchaHandler(new SearchHandler(this,res,thread));
thread.start();
break;
case OWNER:
title=username;
setTitle(title);
showProgress(true);
showFooterLoadingCaches();
thread=new LoadByOwnerThread(username);
thread.setRecaptchaHandler(new SearchHandler(this,res,thread));
thread.start();
break;
case MAP:
title=res.getString(R.string.map_map);
setTitle(title);
showProgress(true);
search=(SearchResult)extras.get(Intents.EXTRA_SEARCH);
replaceCacheListFromSearch();
loadCachesHandler.sendMessage(Message.obtain());
break;
default :
title="caches";
setTitle(title);
Log.e("cgeocaches.onCreate: No action or unknown action specified");
break;
}
prepareFilterBar();
if (isInvokedFromAttachment()) {
importGpxAttachement();
}
}
