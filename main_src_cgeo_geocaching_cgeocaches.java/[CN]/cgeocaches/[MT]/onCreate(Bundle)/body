{
  super.onCreate(savedInstanceState);
  app.setAction(action);
  setTheme();
  setContentView(R.layout.caches);
  setTitle("caches");
  final Bundle extras=getIntent().getExtras();
  if (extras != null) {
    Object typeObject=extras.get(EXTRAS_LIST_TYPE);
    type=(typeObject instanceof CacheListType) ? (CacheListType)typeObject : CacheListType.OFFLINE;
    coords=new Geopoint(extras.getDouble("latitude"),extras.getDouble("longitude"));
    cacheType=Settings.getCacheType();
    keyword=extras.getString("keyword");
    address=extras.getString("address");
    username=extras.getString("username");
  }
  if (Intent.ACTION_VIEW.equals(getIntent().getAction())) {
    type=CacheListType.OFFLINE;
    if (coords == null) {
      coords=new Geopoint(0,0);
    }
  }
  init();
  Thread threadPure;
  cgSearchThread thread;
switch (type) {
case OFFLINE:
    listId=Settings.getLastList();
  if (listId <= StoredList.TEMPORARY_LIST_ID) {
    listId=StoredList.STANDARD_LIST_ID;
    title=res.getString(R.string.stored_caches_button);
  }
 else {
    final StoredList list=app.getList(listId);
    title=list.title;
  }
setTitle(title);
showProgress(true);
setLoadingCaches();
threadPure=new LoadByOfflineThread(loadCachesHandler,coords,listId);
threadPure.start();
break;
case HISTORY:
title=res.getString(R.string.caches_history);
setTitle(title);
showProgress(true);
setLoadingCaches();
threadPure=new LoadByHistoryThread(loadCachesHandler);
threadPure.start();
break;
case NEAREST:
action="pending";
title=res.getString(R.string.caches_nearby);
setTitle(title);
showProgress(true);
setLoadingCaches();
thread=new LoadByCoordsThread(loadCachesHandler,coords);
thread.setRecaptchaHandler(new cgSearchHandler(this,res,thread));
thread.start();
break;
case COORDINATE:
action="planning";
title=coords.toString();
setTitle(title);
showProgress(true);
setLoadingCaches();
thread=new LoadByCoordsThread(loadCachesHandler,coords);
thread.setRecaptchaHandler(new cgSearchHandler(this,res,thread));
thread.start();
break;
case KEYWORD:
title=keyword;
setTitle(title);
showProgress(true);
setLoadingCaches();
thread=new LoadByKeywordThread(loadCachesHandler,keyword);
thread.setRecaptchaHandler(new cgSearchHandler(this,res,thread));
thread.start();
break;
case ADDRESS:
action="planning";
if (StringUtils.isNotBlank(address)) {
title=address;
setTitle(title);
showProgress(true);
setLoadingCaches();
}
 else {
title=coords.toString();
setTitle(title);
showProgress(true);
setLoadingCaches();
}
thread=new LoadByCoordsThread(loadCachesHandler,coords);
thread.setRecaptchaHandler(new cgSearchHandler(this,res,thread));
thread.start();
break;
case USERNAME:
title=username;
setTitle(title);
showProgress(true);
setLoadingCaches();
thread=new LoadByUserNameThread(loadCachesHandler,username);
thread.setRecaptchaHandler(new cgSearchHandler(this,res,thread));
thread.start();
break;
case OWNER:
title=username;
setTitle(title);
showProgress(true);
setLoadingCaches();
thread=new LoadByOwnerThread(loadCachesHandler,username);
thread.setRecaptchaHandler(new cgSearchHandler(this,res,thread));
thread.start();
break;
case MAP:
title=res.getString(R.string.map_map);
setTitle(title);
showProgress(true);
SearchResult result=extras != null ? (SearchResult)extras.get("search") : null;
search=new SearchResult(result);
loadCachesHandler.sendMessage(Message.obtain());
break;
default :
title="caches";
setTitle(title);
Log.e(Settings.tag,"cgeocaches.onCreate: No action or unknown action specified");
break;
}
prepareFilterBar();
if (Intent.ACTION_VIEW.equals(getIntent().getAction())) {
importGpxAttachement();
}
}
