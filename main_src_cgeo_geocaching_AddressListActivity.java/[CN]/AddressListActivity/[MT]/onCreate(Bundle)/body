{
  super.onCreate(savedInstanceState,R.layout.addresses);
  final String keyword=getIntent().getStringExtra(Intents.EXTRA_KEYWORD);
  if (keyword == null) {
    showToast(res.getString(R.string.err_search_address_forgot));
    finish();
    return;
  }
  final AddressListAdapter adapter=new AddressListAdapter(this);
  setListAdapter(adapter);
  final ProgressDialog waitDialog=ProgressDialog.show(this,res.getString(R.string.search_address_started),keyword,true);
  waitDialog.setCancelable(true);
  new AsyncTask<Void,Void,List<Address>>(){
    @Override protected List<Address> doInBackground(    Void... params){
      final Geocoder geocoder=new Geocoder(AddressListActivity.this,Locale.getDefault());
      try {
        return geocoder.getFromLocationName(keyword,20);
      }
 catch (      Exception e) {
        if (StringUtils.containsIgnoreCase(e.getMessage(),"Service not Available")) {
          Log.i("No geocoder available");
        }
 else {
          Log.e("AddressListActivity.doInBackground",e);
        }
        return null;
      }
    }
    @Override protected void onPostExecute(    final List<Address> addresses){
      waitDialog.dismiss();
      if (CollectionUtils.isNotEmpty(addresses)) {
        for (        final Address address : addresses) {
          adapter.add(address);
        }
      }
 else {
        finish();
        cgeocaches.startActivityAddress(AddressListActivity.this,null,keyword);
      }
    }
  }
.execute();
}
