{
  final List<Drawable> layers=new ArrayList<>(9);
  final List<int[]> insets=new ArrayList<>(8);
  final Drawable marker=Compatibility.getDrawable(res,cache.getMapMarkerId());
  if (showBackground(cacheListType)) {
    layers.add(marker);
  }
  final int resolution=calculateResolution(marker);
  if (!cache.isReliableLatLon()) {
    insets.add(INSET_RELIABLE[resolution]);
    layers.add(Compatibility.getDrawable(res,R.drawable.marker_notreliable));
  }
  layers.add(Compatibility.getDrawable(res,cache.getType().markerId));
  insets.add(INSET_TYPE[resolution]);
  if (cache.isOwner()) {
    layers.add(Compatibility.getDrawable(res,R.drawable.marker_own));
    insets.add(INSET_OWN[resolution]);
  }
 else   if (cache.getListId() > 0 && showFloppyOverlay(cacheListType)) {
    layers.add(Compatibility.getDrawable(res,R.drawable.marker_stored));
    insets.add(INSET_OWN[resolution]);
  }
  if (cache.isFound()) {
    layers.add(Compatibility.getDrawable(res,R.drawable.marker_found));
    insets.add(INSET_FOUND[resolution]);
  }
 else   if (cache.isLogOffline()) {
    layers.add(Compatibility.getDrawable(res,R.drawable.marker_found_offline));
    insets.add(INSET_FOUND[resolution]);
  }
  if (cache.hasUserModifiedCoords()) {
    layers.add(Compatibility.getDrawable(res,R.drawable.marker_usermodifiedcoords));
    insets.add(driftBottomItems(INSET_USERMODIFIEDCOORDS,resolution,cacheListType));
  }
  if (cache.getPersonalNote() != null) {
    layers.add(Compatibility.getDrawable(res,R.drawable.marker_personalnote));
    insets.add(driftBottomItems(INSET_PERSONALNOTE,resolution,cacheListType));
  }
  final LayerDrawable ld=new LayerDrawable(layers.toArray(new Drawable[layers.size()]));
  int index=showBackground(cacheListType) ? 1 : 0;
  for (  final int[] inset : insets) {
    ld.setLayerInset(index++,inset[0],inset[1],inset[2],inset[3]);
  }
  return ld;
}
