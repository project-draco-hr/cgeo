{
  final Collection<String> removeCodes=getGeocodes();
  final Collection<String> newCodes=new HashSet<>();
  final Set<Geocache> cachesToDisplay=caches;
  if (!cachesToDisplay.isEmpty()) {
    final boolean showWaypoints=cachesToDisplay.size() < Settings.getWayPointsThreshold();
    Log.d(String.format(Locale.ENGLISH,"CachesToDisplay: %d, showWaypoints: %b",cachesToDisplay.size(),showWaypoints));
    for (    final Geocache cache : cachesToDisplay) {
      if (cache == null) {
        continue;
      }
      if (showWaypoints) {
        final List<Waypoint> waypoints=cache.getWaypoints();
        for (        final Waypoint waypoint : waypoints) {
          if (waypoint == null || waypoint.getCoords() == null) {
            continue;
          }
          if (removeCodes.contains(waypoint.getGpxId())) {
            removeCodes.remove(waypoint.getGpxId());
          }
 else {
            if (addItem(waypoint)) {
              newCodes.add(waypoint.getGpxId());
            }
          }
        }
      }
      if (cache.getCoords() == null) {
        continue;
      }
      if (removeCodes.contains(cache.getGeocode())) {
        removeCodes.remove(cache.getGeocode());
      }
 else {
        if (addItem(cache)) {
          newCodes.add(cache.getGeocode());
        }
      }
    }
  }
  syncLayers(removeCodes,newCodes);
  repaint();
}
