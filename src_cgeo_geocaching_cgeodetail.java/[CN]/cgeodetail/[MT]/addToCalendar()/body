{
  String[] projection=new String[]{"_id","displayName"};
  Uri calendarProvider=Compatibility.getCalendarProviderURI();
  Cursor cursor=managedQuery(calendarProvider,projection,"selected=1",null,null);
  calendars.clear();
  int cnt=0;
  if (cursor != null) {
    cnt=cursor.getCount();
    if (cnt > 0) {
      cursor.moveToFirst();
      int calId=0;
      String calIdPre=null;
      String calName=null;
      int calIdIn=cursor.getColumnIndex("_id");
      int calNameIn=cursor.getColumnIndex("displayName");
      do {
        calIdPre=cursor.getString(calIdIn);
        if (calIdPre != null) {
          calId=new Integer(calIdPre);
        }
        calName=cursor.getString(calNameIn);
        if (calId > 0 && calName != null) {
          calendars.put(calId,calName);
        }
      }
 while (cursor.moveToNext() == true);
    }
  }
  final CharSequence[] items=calendars.values().toArray(new CharSequence[calendars.size()]);
  AlertDialog.Builder builder=new AlertDialog.Builder(this);
  builder.setTitle(R.string.cache_calendars);
  builder.setItems(items,new DialogInterface.OnClickListener(){
    public void onClick(    DialogInterface dialog,    int item){
      addToCalendarFn(item);
    }
  }
);
  AlertDialog alert=builder.create();
  alert.show();
}
