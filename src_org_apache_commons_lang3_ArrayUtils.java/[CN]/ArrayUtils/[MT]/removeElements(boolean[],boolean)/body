{
  if (isEmpty(array) || isEmpty(values)) {
    return clone(array);
  }
  HashMap<Boolean,MutableInt> occurrences=new HashMap<Boolean,MutableInt>(values.length);
  for (  boolean v : values) {
    Boolean boxed=Boolean.valueOf(v);
    MutableInt count=occurrences.get(boxed);
    if (count == null) {
      occurrences.put(boxed,new MutableInt(1));
    }
 else {
      count.increment();
    }
  }
  HashSet<Integer> toRemove=new HashSet<Integer>();
  for (  Map.Entry<Boolean,MutableInt> e : occurrences.entrySet()) {
    Boolean v=e.getKey();
    int found=0;
    for (int i=0, ct=e.getValue().intValue(); i < ct; i++) {
      found=indexOf(array,v.booleanValue(),found);
      if (found < 0) {
        break;
      }
      toRemove.add(found++);
    }
  }
  return removeAll(array,extractIndices(toRemove));
}
