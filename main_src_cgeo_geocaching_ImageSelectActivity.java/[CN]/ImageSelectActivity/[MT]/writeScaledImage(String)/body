{
  scaleChoiceIndex=scaleView.getSelectedItemPosition();
  final int maxXY=getResources().getIntArray(R.array.log_image_scale_values)[scaleChoiceIndex];
  if (maxXY == 0) {
    return filePath;
  }
  BitmapFactory.Options sizeOnlyOptions=new BitmapFactory.Options();
  sizeOnlyOptions.inJustDecodeBounds=true;
  BitmapFactory.decodeFile(filePath,sizeOnlyOptions);
  final int myMaxXY=Math.max(sizeOnlyOptions.outHeight,sizeOnlyOptions.outWidth);
  final int sampleSize=myMaxXY / maxXY;
  Bitmap image;
  if (sampleSize > 1) {
    BitmapFactory.Options sampleOptions=new BitmapFactory.Options();
    sampleOptions.inSampleSize=sampleSize;
    image=BitmapFactory.decodeFile(filePath,sampleOptions);
  }
 else {
    image=BitmapFactory.decodeFile(filePath);
  }
  final BitmapDrawable scaledImage=ImageUtils.scaleBitmapTo(image,maxXY,maxXY);
  final String uploadFilename=getOutputImageFile().getPath();
  ImageUtils.storeBitmap(scaledImage.getBitmap(),Bitmap.CompressFormat.JPEG,75,uploadFilename);
  return uploadFilename;
}
