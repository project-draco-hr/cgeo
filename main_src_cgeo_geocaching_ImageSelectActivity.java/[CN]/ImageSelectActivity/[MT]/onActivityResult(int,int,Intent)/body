{
  if (resultCode == RESULT_CANCELED) {
    showToast(getResources().getString(R.string.info_select_logimage_cancelled));
    return;
  }
  if (resultCode != RESULT_OK) {
    showFailure();
    return;
  }
  if (data != null) {
    Uri selectedImage=data.getData();
    String[] filePathColumn={MediaColumns.DATA};
    Cursor cursor=null;
    try {
      cursor=getContentResolver().query(selectedImage,filePathColumn,null,null,null);
      if (cursor == null) {
        showFailure();
        return;
      }
      cursor.moveToFirst();
      int columnIndex=cursor.getColumnIndex(filePathColumn[0]);
      String filePath=cursor.getString(columnIndex);
      if (StringUtils.isBlank(filePath)) {
        showFailure();
        return;
      }
      imageUri=Uri.parse(filePath);
    }
 catch (    Exception e) {
      Log.e("ImageSelectActivity.onActivityResult",e);
      showFailure();
    }
 finally {
      if (cursor != null) {
        cursor.close();
      }
    }
    Log.d("SELECT IMAGE data = " + data.toString());
  }
 else {
    Log.d("SELECT IMAGE data is null");
  }
  if (requestCode == SELECT_NEW_IMAGE) {
    showToast(getResources().getString(R.string.info_stored_image) + "\n" + imageUri);
  }
  loadImagePreview();
}
