{
  final String log=args[0];
  try {
    final ImmutablePair<StatusCode,String> postResult=GCParser.postLog(geocode,cacheid,viewstates,typeSelected,date.get(Calendar.YEAR),(date.get(Calendar.MONTH) + 1),date.get(Calendar.DATE),log,trackables);
    if (postResult.left == StatusCode.NO_ERROR) {
      final LogEntry logNow=new LogEntry(date,typeSelected,log);
      cache.getLogs().add(0,logNow);
      if (typeSelected == LogType.FOUND_IT || typeSelected == LogType.ATTENDED) {
        cache.setFound(true);
      }
      cgData.saveChangedCache(cache);
      cgData.clearLogOffline(geocode);
      if (typeSelected == LogType.FOUND_IT) {
        if (tweetCheck.isChecked() && tweetBox.getVisibility() == View.VISIBLE) {
          Twitter.postTweetCache(geocode);
        }
        GCVote.setRating(cache,rating);
      }
      if (StringUtils.isNotBlank(imageUri.getPath())) {
        ImmutablePair<StatusCode,String> imageResult=GCParser.uploadLogImage(postResult.right,imageCaption,imageDescription,imageUri);
        final String uploadedImageUrl=imageResult.right;
        if (StringUtils.isNotEmpty(uploadedImageUrl)) {
          logNow.addLogImage(new Image(uploadedImageUrl,imageCaption,imageDescription));
          cgData.saveChangedCache(cache);
        }
        return imageResult.left;
      }
    }
    return postResult.left;
  }
 catch (  Exception e) {
    Log.e("cgeovisit.postLogFn",e);
  }
  return StatusCode.LOG_POST_ERROR;
}
