{
  if (page == null) {
    showToast(res.getString(R.string.err_log_load_data));
    showProgress(false);
    return;
  }
  viewstates=Login.getViewstates(page);
  trackables=GCParser.parseTrackableLog(page);
  possibleLogTypes=GCParser.parseTypes(page);
  possibleLogTypes.remove(LogType.UPDATE_COORDINATES);
  if (!possibleLogTypes.contains(typeSelected)) {
    typeSelected=possibleLogTypes.get(0);
    setType(typeSelected);
    showToast(res.getString(R.string.info_log_type_changed));
  }
  enablePostButton(true);
  if (CollectionUtils.isNotEmpty(trackables)) {
    if (inflater == null) {
      inflater=getLayoutInflater();
    }
    final LinearLayout inventoryView=(LinearLayout)findViewById(R.id.inventory);
    inventoryView.removeAllViews();
    for (    TrackableLog tb : trackables) {
      LinearLayout inventoryItem=(LinearLayout)inflater.inflate(R.layout.visit_trackable,null);
      ((TextView)inventoryItem.findViewById(R.id.trackcode)).setText(tb.trackCode);
      ((TextView)inventoryItem.findViewById(R.id.name)).setText(tb.name);
      ((TextView)inventoryItem.findViewById(R.id.action)).setText(res.getString(Settings.isTrackableAutoVisit() ? LogTypeTrackable.VISITED.resourceId : LogTypeTrackable.DO_NOTHING.resourceId) + " ???");
      inventoryItem.setId(tb.id);
      final String tbCode=tb.trackCode;
      inventoryItem.setClickable(true);
      registerForContextMenu(inventoryItem);
      inventoryItem.findViewById(R.id.info).setOnClickListener(new View.OnClickListener(){
        @Override public void onClick(        View view){
          final Intent trackablesIntent=new Intent(VisitCacheActivity.this,TrackableActivity.class);
          trackablesIntent.putExtra(EXTRAS_GEOCODE,tbCode);
          startActivity(trackablesIntent);
        }
      }
);
      inventoryItem.findViewById(R.id.action).setOnClickListener(new View.OnClickListener(){
        @Override public void onClick(        View view){
          openContextMenu(view);
        }
      }
);
      inventoryView.addView(inventoryItem);
      if (Settings.isTrackableAutoVisit()) {
        tb.action=LogTypeTrackable.VISITED;
        tbChanged=true;
      }
    }
    if (inventoryView.getChildCount() > 0) {
      findViewById(R.id.inventory_box).setVisibility(View.VISIBLE);
    }
    if (inventoryView.getChildCount() > 1) {
      final LinearLayout inventoryChangeAllView=(LinearLayout)findViewById(R.id.inventory_changeall);
      final Button changeButton=(Button)inventoryChangeAllView.findViewById(R.id.changebutton);
      registerForContextMenu(changeButton);
      changeButton.setOnClickListener(new View.OnClickListener(){
        @Override public void onClick(        View view){
          openContextMenu(view);
        }
      }
);
      inventoryChangeAllView.setVisibility(View.VISIBLE);
    }
  }
  showProgress(false);
}
