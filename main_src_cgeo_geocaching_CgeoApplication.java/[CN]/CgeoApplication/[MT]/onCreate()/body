{
  try {
    final ViewConfiguration config=ViewConfiguration.get(this);
    final Field menuKeyField=ViewConfiguration.class.getDeclaredField("sHasPermanentMenuKey");
    menuKeyField.setAccessible(true);
    menuKeyField.setBoolean(config,false);
  }
 catch (  IllegalArgumentException|IllegalAccessException|NoSuchFieldException ignored) {
  }
  Settings.setLanguage(Settings.isUseEnglish());
  DataStore.getLists();
  if (GooglePlayServicesUtil.isGooglePlayServicesAvailable(this) == ConnectionResult.SUCCESS) {
    isGooglePlayServicesAvailable=true;
  }
  Log.i("Google Play services are " + (isGooglePlayServicesAvailable ? "" : "not ") + "available");
  final Sensors sensors=Sensors.getInstance();
  sensors.setupGeoDataObservables(Settings.useGooglePlayServices(),Settings.useLowPowerMode());
  sensors.setupDirectionObservable(Settings.useLowPowerMode());
  sensors.geoDataObservable(true).subscribeOn(RxUtils.looperCallbacksScheduler).first().subscribe();
}
