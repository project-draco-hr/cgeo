{
  final StringBuilder fieldNoteBuffer=new StringBuilder();
  Map<LogType,String> logTypes=new HashMap<LogType,String>();
  logTypes.put(LogType.FOUND_IT,"Found it");
  logTypes.put(LogType.DIDNT_FIND_IT,"Didn't find it");
  logTypes.put(LogType.NOTE,"Write Note");
  logTypes.put(LogType.NEEDS_ARCHIVE,"Needs archived");
  logTypes.put(LogType.NEEDS_MAINTENANCE,"Needs Maintenance");
  logTypes.put(LogType.WILL_ATTEND,"Will Attend");
  logTypes.put(LogType.ATTENDED,"Attended");
  logTypes.put(LogType.WEBCAM_PHOTO_TAKEN,"Webcam Photo Taken");
  for (int i=0; i < caches.size(); i++) {
    try {
      final cgCache cache=caches.get(i);
      if (cache.isLogOffline()) {
        LogEntry log=cgeoapplication.getInstance().loadLogOffline(cache.getGeocode());
        if (null != logTypes.get(log.type)) {
          fieldNoteBuffer.append(cache.getGeocode()).append(',').append(fieldNoteDateFormat.format(new Date(log.date))).append(',').append(logTypes.get(log.type)).append(",\"").append(StringUtils.replaceChars(log.log,'"','\'')).append("\"\n");
        }
      }
      publishProgress(i + 1);
    }
 catch (    Exception e) {
      Log.e("FieldnoteExport.ExportTask generation",e);
      return false;
    }
  }
  fieldNoteBuffer.append('\n');
  if (Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {
    exportLocation.mkdirs();
    SimpleDateFormat fileNameDateFormat=new SimpleDateFormat("yyyyMMddHHmmss");
    exportFile=new File(exportLocation.toString() + '/' + fileNameDateFormat.format(new Date())+ ".txt");
    OutputStream os;
    Writer fw=null;
    try {
      os=new FileOutputStream(exportFile);
      fw=new OutputStreamWriter(os,"ISO-8859-1");
      fw.write(fieldNoteBuffer.toString());
    }
 catch (    IOException e) {
      Log.e("FieldnoteExport.ExportTask export",e);
      return false;
    }
 finally {
      if (fw != null) {
        try {
          fw.close();
        }
 catch (        IOException e) {
          Log.e("FieldnoteExport.ExportTask export",e);
          return false;
        }
      }
    }
  }
 else {
    return false;
  }
  return true;
}
