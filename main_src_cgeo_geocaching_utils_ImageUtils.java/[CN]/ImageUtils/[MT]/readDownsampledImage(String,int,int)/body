{
  int orientation=ExifInterface.ORIENTATION_NORMAL;
  try {
    final ExifInterface exif=new ExifInterface(filePath);
    orientation=exif.getAttributeInt(ExifInterface.TAG_ORIENTATION,ExifInterface.ORIENTATION_NORMAL);
  }
 catch (  IOException e) {
    Log.e("ImageUtils.readDownsampledImage",e);
  }
  final BitmapFactory.Options sizeOnlyOptions=new BitmapFactory.Options();
  sizeOnlyOptions.inJustDecodeBounds=true;
  BitmapFactory.decodeFile(filePath,sizeOnlyOptions);
  final int myMaxXY=Math.max(sizeOnlyOptions.outHeight,sizeOnlyOptions.outWidth);
  final int maxXY=Math.max(maxX,maxY);
  final int sampleSize=myMaxXY / maxXY;
  final BitmapFactory.Options sampleOptions=new BitmapFactory.Options();
  if (sampleSize > 1) {
    sampleOptions.inSampleSize=sampleSize;
  }
  final Bitmap decodedImage=BitmapFactory.decodeFile(filePath,sampleOptions);
  if (decodedImage != null) {
    for (int i=0; i < ORIENTATIONS.length; i++) {
      if (orientation == ORIENTATIONS[i]) {
        final Matrix matrix=new Matrix();
        matrix.postRotate(ROTATION[i]);
        return Bitmap.createBitmap(decodedImage,0,0,decodedImage.getWidth(),decodedImage.getHeight(),matrix,true);
      }
    }
  }
  return decodedImage;
}
