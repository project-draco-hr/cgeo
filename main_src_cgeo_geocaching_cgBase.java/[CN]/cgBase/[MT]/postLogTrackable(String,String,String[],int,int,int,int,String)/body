{
  if (isEmpty(viewstates)) {
    Log.e(Settings.tag,"cgeoBase.postLogTrackable: No viewstate given");
    return StatusCode.LOG_POST_ERROR;
  }
  if (!logTypes2.containsKey(logType)) {
    Log.e(Settings.tag,"cgeoBase.postLogTrackable: Unknown logtype");
    return StatusCode.LOG_POST_ERROR;
  }
  if (StringUtils.isBlank(log)) {
    Log.e(Settings.tag,"cgeoBase.postLogTrackable: No log text given");
    return StatusCode.NO_LOG_TEXT;
  }
  Log.i(Settings.tag,"Trying to post log for trackable #" + trackingCode + " - action: "+ logType+ "; date: "+ year+ "."+ month+ "."+ day+ ", log: "+ log);
  final String logInfo=log.replace("\n","\r\n");
  final Calendar currentDate=Calendar.getInstance();
  final Parameters params=new Parameters("__EVENTTARGET","","__EVENTARGUMENT","","__LASTFOCUS","","ctl00$ContentBody$LogBookPanel1$ddLogType",Integer.toString(logType),"ctl00$ContentBody$LogBookPanel1$tbCode",trackingCode);
  putViewstates(params,viewstates);
  if (currentDate.get(Calendar.YEAR) == year && (currentDate.get(Calendar.MONTH) + 1) == month && currentDate.get(Calendar.DATE) == day) {
    params.put("ctl00$ContentBody$LogBookPanel1$DateTimeLogged","");
  }
 else {
    params.put("ctl00$ContentBody$LogBookPanel1$DateTimeLogged",Integer.toString(month) + "/" + Integer.toString(day)+ "/"+ Integer.toString(year));
  }
  params.put("ctl00$ContentBody$LogBookPanel1$DateTimeLogged$Day",Integer.toString(day),"ctl00$ContentBody$LogBookPanel1$DateTimeLogged$Month",Integer.toString(month),"ctl00$ContentBody$LogBookPanel1$DateTimeLogged$Year",Integer.toString(year),"ctl00$ContentBody$LogBookPanel1$uxLogInfo",logInfo,"ctl00$ContentBody$LogBookPanel1$LogButton","Submit Log Entry","ctl00$ContentBody$uxVistOtherListingGC","");
  final String uri=new Uri.Builder().scheme("http").authority("www.geocaching.com").path("/track/log.aspx").encodedQuery("wid=" + tbid).build().toString();
  String page=getResponseData(postRequest(uri,params));
  if (!checkLogin(page)) {
    final StatusCode loginState=login();
    if (loginState == StatusCode.NO_ERROR) {
      page=getResponseData(postRequest(uri,params));
    }
 else {
      Log.e(Settings.tag,"cgeoBase.postLogTrackable: Can not log in geocaching (error: " + loginState + ")");
      return loginState;
    }
  }
  if (StringUtils.isBlank(page)) {
    Log.e(Settings.tag,"cgeoBase.postLogTrackable: No data from server");
    return StatusCode.NO_DATA_FROM_SERVER;
  }
  try {
    final Matcher matcherOk=GCConstants.PATTERN_OK2.matcher(page);
    if (matcherOk.find()) {
      Log.i(Settings.tag,"Log successfully posted to trackable #" + trackingCode);
      return StatusCode.NO_ERROR;
    }
  }
 catch (  Exception e) {
    Log.e(Settings.tag,"cgeoBase.postLogTrackable.check: " + e.toString());
  }
  Log.e(Settings.tag,"cgeoBase.postLogTrackable: Failed to post log because of unknown error");
  return StatusCode.LOG_POST_ERROR;
}
