{
  if (StringUtils.isEmpty(page)) {
    return null;
  }
  final List<cgTrackableLog> trackables=new ArrayList<cgTrackableLog>();
  String table=StringUtils.substringBetween(page,"<table id=\"tblTravelBugs\"","</table>");
  if (StringUtils.isBlank(table)) {
    return trackables;
  }
  table=StringUtils.substringBetween(table,"<tbody>","</tbody>");
  if (StringUtils.isBlank(table)) {
    Log.e("cgeoBase.parseTrackableLog: tbody not found on page");
    return null;
  }
  final Matcher trackableMatcher=GCConstants.PATTERN_TRACKABLE.matcher(page);
  while (trackableMatcher.find()) {
    if (trackableMatcher.groupCount() > 0) {
      final cgTrackableLog trackableLog=new cgTrackableLog();
      if (trackableMatcher.group(1) != null) {
        trackableLog.trackCode=trackableMatcher.group(1);
      }
 else {
        continue;
      }
      if (trackableMatcher.group(2) != null) {
        trackableLog.name=Html.fromHtml(trackableMatcher.group(2)).toString();
      }
 else {
        continue;
      }
      if (trackableMatcher.group(3) != null) {
        trackableLog.ctl=Integer.valueOf(trackableMatcher.group(3));
      }
 else {
        continue;
      }
      if (trackableMatcher.group(5) != null) {
        trackableLog.id=Integer.valueOf(trackableMatcher.group(5));
      }
 else {
        continue;
      }
      Log.i("Trackable in inventory (#" + trackableLog.ctl + "/"+ trackableLog.id+ "): "+ trackableLog.trackCode+ " - "+ trackableLog.name);
      trackables.add(trackableLog);
    }
  }
  return trackables;
}
