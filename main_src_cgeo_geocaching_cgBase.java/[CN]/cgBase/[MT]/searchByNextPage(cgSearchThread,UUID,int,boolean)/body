{
  final String[] viewstates=app.getViewstates(searchId);
  final String url=app.getUrl(searchId);
  if (StringUtils.isBlank(url)) {
    Log.e(Settings.tag,"cgeoBase.searchByNextPage: No url found");
    return searchId;
  }
  if (isEmpty(viewstates)) {
    Log.e(Settings.tag,"cgeoBase.searchByNextPage: No viewstate given");
    return searchId;
  }
  final String uri=Uri.parse(url).buildUpon().query(null).build().toString();
  final Parameters params=new Parameters("__EVENTTARGET","ctl00$ContentBody$pgrBottom$ctl08","__EVENTARGUMENT","");
  putViewstates(params,viewstates);
  String page=getResponseData(postRequest(uri,params));
  if (!checkLogin(page)) {
    final StatusCode loginState=login();
    if (loginState == StatusCode.NO_ERROR) {
      page=getResponseData(postRequest(uri,params));
    }
 else     if (loginState == StatusCode.NO_LOGIN_INFO_STORED) {
      Log.i(Settings.tag,"Working as guest.");
    }
 else {
      app.setError(searchId,loginState);
      Log.e(Settings.tag,"cgeoBase.searchByNextPage: Can not log in geocaching");
      return searchId;
    }
  }
  if (StringUtils.isBlank(page)) {
    Log.e(Settings.tag,"cgeoBase.searchByNextPage: No data from server");
    return searchId;
  }
  final cgCacheWrap caches=parseSearch(thread,url,page,showCaptcha);
  if (caches == null || CollectionUtils.isEmpty(caches.cacheList)) {
    Log.e(Settings.tag,"cgeoBase.searchByNextPage: No cache parsed");
    return searchId;
  }
  app.setError(searchId,caches.error);
  app.setViewstates(searchId,caches.viewstates);
  final List<cgCache> cacheList=new ArrayList<cgCache>();
  for (  cgCache cache : caches.cacheList) {
    app.addGeocode(searchId,cache.geocode);
    cacheList.add(cache);
  }
  app.addSearch(searchId,cacheList,true,reason);
  return searchId;
}
