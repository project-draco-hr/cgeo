{
  final Uri uri=buildURI(false,host,path,params);
  Integer timeout=30000;
  final StringBuffer buffer=new StringBuffer();
  for (int i=0; i < 3; i++) {
    if (i > 0) {
      Log.w(cgSettings.tag,"Failed to download data, retrying. Attempt #" + (i + 1));
    }
    buffer.delete(0,buffer.length());
    timeout=30000 + (i * 15000);
    try {
      try {
        final URL u=new URL(uri.toString());
        final URLConnection uc=(HttpURLConnection)u.openConnection();
        uc.setRequestProperty("Host",host);
        uc.setRequestProperty("Accept","application/json, text/javascript, */*; q=0.01");
        uc.setRequestProperty("Content-Type","application/json; charset=UTF-8");
        uc.setRequestProperty("X-Requested-With","XMLHttpRequest");
        final HttpURLConnection connection=(HttpURLConnection)uc;
        connection.setReadTimeout(timeout);
        connection.setRequestMethod("GET");
        HttpURLConnection.setFollowRedirects(true);
        connection.setDoInput(true);
        connection.setDoOutput(false);
        InputStream ins=getInputstreamFromConnection(connection);
        final InputStreamReader inr=new InputStreamReader(ins);
        final BufferedReader br=new BufferedReader(inr,1024);
        readIntoBuffer(br,buffer);
        final Integer httpCode=connection.getResponseCode();
        if (httpCode == 403) {
          break;
        }
        final String paramsLog=params.replaceAll(passMatch,"password=***");
        Log.i(cgSettings.tag + " | JSON","[POST " + (int)(params.length() / 1024) + "k | "+ httpCode+ " | "+ (int)(buffer.length() / 1024)+ "k] Downloaded "+ "http://"+ host+ path+ "?"+ paramsLog);
        connection.disconnect();
        br.close();
        ins.close();
        inr.close();
      }
 catch (      IOException e) {
        Log.e(cgSettings.tag,"cgeoBase.requestJSON.IOException",e);
      }
    }
 catch (    Exception e) {
      Log.e(cgSettings.tag,"cgeoBase.requestJSON",e);
    }
    if (StringUtils.isNotBlank(buffer)) {
      break;
    }
  }
  replaceWhitespace(buffer);
  return buffer.toString();
}
