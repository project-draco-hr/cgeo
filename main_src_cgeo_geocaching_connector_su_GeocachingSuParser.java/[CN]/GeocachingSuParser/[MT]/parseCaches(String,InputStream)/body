{
  final ArrayList<Geocache> caches=new ArrayList<>();
  try {
    final XmlPullParserFactory factory=XmlPullParserFactory.newInstance();
    factory.setNamespaceAware(true);
    final XmlPullParser parser=factory.newPullParser();
    parser.setInput(inputStream,"UTF-8");
    Parsed parsed=new Parsed();
    Geocache cache=createNewCache();
    String text="";
    int eventType=parser.getEventType();
    while (eventType != XmlPullParser.END_DOCUMENT) {
      final String tagname=parser.getName();
switch (eventType) {
case XmlPullParser.START_TAG:
        if ("cache".equalsIgnoreCase(tagname)) {
          cache=createNewCache();
          parsed=new Parsed();
        }
 else         if ("note".equalsIgnoreCase(tagname)) {
          parsed.logBuilder=new LogEntry.Builder();
          parsed.logBuilder.setAuthor(parser.getAttributeValue(null,"nick"));
          parsed.logBuilder.setDate(parseDateTime(parser.getAttributeValue(null,"date")));
          parsed.logBuilder.setLogType(LogType.NOTE);
        }
      break;
case XmlPullParser.TEXT:
    text=parser.getText();
  break;
case XmlPullParser.END_TAG:
if ("id".equalsIgnoreCase(tagname)) {
  cache.setGeocode("SU" + text);
}
 else if ("name".equalsIgnoreCase(tagname)) {
  cache.setName(text);
}
 else if (endTag.equalsIgnoreCase(tagname)) {
  storeCache(cache,caches,parsed);
}
 else if ("lat".equalsIgnoreCase(tagname)) {
  parsed.latitude=text;
}
 else if ("lng".equalsIgnoreCase(tagname)) {
  cache.setCoords(new Geopoint(parsed.latitude,text));
}
 else if ("nick".equalsIgnoreCase(tagname) || "autor".equalsIgnoreCase(tagname)) {
  cache.setOwnerDisplayName(text);
}
 else if ("adesc".equalsIgnoreCase(tagname)) {
  parsed.addDescription(text);
}
 else if ("cdesc".equalsIgnoreCase(tagname)) {
  parsed.addDescription(text);
}
 else if ("tpart".equalsIgnoreCase(tagname)) {
  parsed.addDescription(text);
}
 else if ("vpart".equalsIgnoreCase(tagname)) {
  parsed.addDescription(text);
}
 else if ("date".equalsIgnoreCase(tagname)) {
  cache.setHidden(parseDate(text));
}
 else if ("type".equalsIgnoreCase(tagname) || "ctype".equalsIgnoreCase(tagname)) {
  cache.setType(parseType(text));
}
 else if ("note".equalsIgnoreCase(tagname)) {
  parsed.logBuilder.setLog(StringUtils.trim(text));
  parsed.logs.add(parsed.logBuilder.build());
}
 else if ("img".equalsIgnoreCase(tagname)) {
  cache.addSpoiler(new Image.Builder().setUrl(text).build());
}
 else if ("status".equalsIgnoreCase(tagname)) {
  cache.setDisabled(isDisabledStatus(text));
}
break;
default :
break;
}
eventType=parser.next();
}
}
 catch (XmlPullParserException|IOException|ParseException e) {
Log.e("Error parsing geocaching.su data",e);
}
return new SearchResult(caches);
}
