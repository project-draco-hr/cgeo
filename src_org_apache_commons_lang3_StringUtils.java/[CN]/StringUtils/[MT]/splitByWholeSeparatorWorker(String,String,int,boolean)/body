{
  if (str == null) {
    return null;
  }
  int len=str.length();
  if (len == 0) {
    return ArrayUtils.EMPTY_STRING_ARRAY;
  }
  if ((separator == null) || (EMPTY.equals(separator))) {
    return splitWorker(str,null,max,preserveAllTokens);
  }
  int separatorLength=separator.length();
  ArrayList<String> substrings=new ArrayList<String>();
  int numberOfSubstrings=0;
  int beg=0;
  int end=0;
  while (end < len) {
    end=str.indexOf(separator,beg);
    if (end > -1) {
      if (end > beg) {
        numberOfSubstrings+=1;
        if (numberOfSubstrings == max) {
          end=len;
          substrings.add(str.substring(beg));
        }
 else {
          substrings.add(str.substring(beg,end));
          beg=end + separatorLength;
        }
      }
 else {
        if (preserveAllTokens) {
          numberOfSubstrings+=1;
          if (numberOfSubstrings == max) {
            end=len;
            substrings.add(str.substring(beg));
          }
 else {
            substrings.add(EMPTY);
          }
        }
        beg=end + separatorLength;
      }
    }
 else {
      substrings.add(str.substring(beg));
      end=len;
    }
  }
  return substrings.toArray(new String[substrings.size()]);
}
