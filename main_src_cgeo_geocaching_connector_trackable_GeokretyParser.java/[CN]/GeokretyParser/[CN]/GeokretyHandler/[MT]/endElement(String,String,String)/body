{
  try {
    if (localName.equalsIgnoreCase("geokret")) {
      if (StringUtils.isNotEmpty(content)) {
        trackable.setName(content);
      }
      if (trackable.getSpottedType() == Trackable.SPOTTED_USER) {
        if (trackable.getDistance() == 0) {
          trackable.setSpottedType(Trackable.SPOTTED_OWNER);
          trackable.setSpottedName(trackable.getOwner());
        }
 else {
          trackable.setSpottedName(getLastSpottedUsername(logsEntries));
        }
      }
      trackable.setLogs(logsEntries);
    }
    if (localName.equalsIgnoreCase("name")) {
      trackable.setName(content);
    }
    if (localName.equalsIgnoreCase("description")) {
      trackable.setDetails(content);
      isMultiline=false;
    }
    if (localName.equalsIgnoreCase("owner")) {
      trackable.setOwner(content);
    }
    if (StringUtils.isNotBlank(content) && localName.equalsIgnoreCase("datecreated")) {
      final Date date=DATE_FORMAT_SECONDS.parse(content);
      trackable.setReleased(date);
    }
    if (StringUtils.isNotBlank(content) && !isInMoves && (localName.equalsIgnoreCase("distancetravelled") || localName.equalsIgnoreCase("distancetraveled"))) {
      trackable.setDistance(Float.parseFloat(content));
    }
    if (localName.equalsIgnoreCase("images")) {
      isInImages=false;
    }
    if (StringUtils.isNotBlank(content) && localName.equalsIgnoreCase("image")) {
      if (isInMoves) {
        imageBuilder.setUrl("http://geokrety.org/obrazki/" + content);
        logEntryBuilder.addLogImage(imageBuilder.build());
      }
 else       if (!isInImages) {
        trackable.setImage("http://geokrety.org/obrazki/" + content);
      }
    }
    if (StringUtils.isNotBlank(content) && localName.equalsIgnoreCase("state")) {
      trackable.setSpottedType(getSpottedType(Integer.parseInt(content)));
    }
    if (StringUtils.isNotBlank(content) && localName.equalsIgnoreCase("missing")) {
      trackable.setMissing("1".equalsIgnoreCase(content));
    }
    if (StringUtils.isNotBlank(content) && localName.equalsIgnoreCase("waypoint")) {
      trackable.setSpottedName(content);
    }
    if (StringUtils.isNotBlank(content) && localName.equalsIgnoreCase("user")) {
      logEntryBuilder.setAuthor(content);
    }
    if (localName.equalsIgnoreCase("move")) {
      isInMoves=false;
      logsEntries.add(logEntryBuilder.build());
    }
    if (localName.equalsIgnoreCase("comments")) {
      isInComments=false;
    }
    if (localName.equalsIgnoreCase("comment") && !isInComments) {
      isMultiline=false;
      logEntryBuilder.setLog(content);
    }
    if (StringUtils.isNotBlank(content) && localName.equalsIgnoreCase("wpt")) {
      logEntryBuilder.setCacheGeocode(content);
      logEntryBuilder.setCacheName(content);
    }
    if (localName.equalsIgnoreCase("id")) {
      logEntryBuilder.setId(Integer.parseInt(content));
    }
  }
 catch (  final ParseException|NumberFormatException e) {
    Log.e("Parsing GeoKret",e);
  }
}
