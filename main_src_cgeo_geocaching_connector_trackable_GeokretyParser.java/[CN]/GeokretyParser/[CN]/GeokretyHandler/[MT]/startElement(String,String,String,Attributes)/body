{
  content="";
  if (localName.equalsIgnoreCase("geokret")) {
    trackable=new Trackable();
    trackable.forceSetBrand(TrackableBrand.GEOKRETY);
    trackables.add(trackable);
    trackable.setSpottedType(Trackable.SPOTTED_OWNER);
  }
  try {
    if (localName.equalsIgnoreCase("geokret")) {
      final String kretyId=attributes.getValue("id");
      if (StringUtils.isNumeric(kretyId)) {
        trackable.setGeocode(GeokretyConnector.geocode(Integer.parseInt(kretyId)));
      }
      final String distance=attributes.getValue("dist");
      if (StringUtils.isNotBlank(distance)) {
        trackable.setDistance(Float.parseFloat(distance));
      }
      final String trackingcode=attributes.getValue("nr");
      if (StringUtils.isNotBlank(trackingcode)) {
        trackable.setTrackingcode(trackingcode);
      }
      final String kretyType=attributes.getValue("type");
      if (StringUtils.isNotBlank(kretyType)) {
        trackable.setType(getType(Integer.parseInt(kretyType)));
      }
      final String kretyState=attributes.getValue("state");
      if (StringUtils.isNotBlank(kretyState)) {
        trackable.setSpottedType(getSpottedType(Integer.parseInt(kretyState)));
      }
      final String waypointCode=attributes.getValue("waypoint");
      if (StringUtils.isNotBlank(waypointCode)) {
        trackable.setSpottedName(waypointCode);
      }
      final String imageName=attributes.getValue("image");
      if (StringUtils.isNotBlank(imageName)) {
        trackable.setImage("http://geokrety.org/obrazki/" + imageName);
      }
      final String ownerId=attributes.getValue("owner_id");
      if (StringUtils.isNotBlank(ownerId)) {
        trackable.setOwner(CgeoApplication.getInstance().getString(R.string.init_geokrety_userid,ownerId));
      }
      final String missing=attributes.getValue("missing");
      if (StringUtils.isNotBlank(missing)) {
        trackable.setMissing("1".equalsIgnoreCase(missing));
      }
    }
    if (localName.equalsIgnoreCase("owner")) {
      final String ownerId=attributes.getValue("id");
      if (StringUtils.isNotBlank(ownerId)) {
        trackable.setOwner(CgeoApplication.getInstance().getString(R.string.init_geokrety_userid,ownerId));
      }
    }
    if (localName.equalsIgnoreCase("type")) {
      final String kretyType=attributes.getValue("id");
      if (StringUtils.isNotBlank(kretyType)) {
        trackable.setType(getType(Integer.parseInt(kretyType)));
      }
    }
    if (localName.equalsIgnoreCase("description")) {
      isMessage=true;
    }
  }
 catch (  final NumberFormatException e) {
    Log.e("Parsing GeoKret",e);
  }
}
