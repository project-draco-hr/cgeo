{
  final Trackable trackable=new Trackable();
  final RootElement root=new RootElement("gkxml");
  final Element geokret=root.getChild("geokrety").getChild("geokret");
  geokret.setEndTextElementListener(new EndTextElementListener(){
    @Override public void end(    String name){
      trackable.setName(name);
    }
  }
);
  geokret.setStartElementListener(new StartElementListener(){
    @Override public void start(    Attributes attributes){
      try {
        final String kretyId=attributes.getValue("id");
        if (StringUtils.isNotBlank(kretyId)) {
          trackable.setGeocode(geocode(Integer.parseInt(kretyId)));
        }
        final String distance=attributes.getValue("dist");
        if (StringUtils.isNotBlank(distance)) {
          trackable.setDistance(Float.parseFloat(distance));
        }
        final String kretyType=attributes.getValue("type");
        if (StringUtils.isNotBlank(kretyType)) {
          trackable.setType(getType(Integer.parseInt(kretyType)));
        }
        final String waypointCode=attributes.getValue("waypoint");
        if (StringUtils.isNotBlank(waypointCode)) {
          trackable.setSpottedName(waypointCode);
          trackable.setSpottedType(Trackable.SPOTTED_CACHE);
        }
        final String imageName=attributes.getValue("image");
        if (StringUtils.isNotBlank(imageName)) {
          trackable.setImage("http://geokrety.org/obrazki/" + imageName);
        }
      }
 catch (      final NumberFormatException e) {
        Log.e("Parsing geokret",e);
      }
    }
  }
);
  try {
    Xml.parse(page,root.getContentHandler());
    return trackable;
  }
 catch (  final SAXException e) {
    Log.w("Cannot parse geokrety",e);
  }
  return null;
}
