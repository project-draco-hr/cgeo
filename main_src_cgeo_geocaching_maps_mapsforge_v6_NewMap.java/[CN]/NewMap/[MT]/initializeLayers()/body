{
  final File mapFile=NewMap.getMapFile();
  if (mapFile != null && mapFile.exists()) {
    this.tileRendererLayer=new TileRendererLayer(tileCache,new MapFile(mapFile),this.mapView.getModel().mapViewPosition,false,true,false,AndroidGraphicFactory.INSTANCE);
    this.setMapTheme();
    this.mapView.getLayerManager().getLayers().add(this.tileRendererLayer);
  }
  this.historyLayer=new HistoryLayer(trailHistory);
  this.mapView.getLayerManager().getLayers().add(this.historyLayer);
  Geopoint navTarget=lastNavTarget;
  if (navTarget == null) {
    navTarget=mapOptions.coords;
    if (navTarget == null && StringUtils.isNotEmpty(mapOptions.geocode)) {
      final Viewport bounds=DataStore.getBounds(mapOptions.geocode);
      if (bounds != null) {
        navTarget=bounds.center;
      }
    }
  }
  this.navigationLayer=new NavigationLayer(navTarget);
  this.mapView.getLayerManager().getLayers().add(this.navigationLayer);
  final TapHandlerLayer tapHandlerLayer=new TapHandlerLayer(this.mapHandlers.getTapHandler());
  this.mapView.getLayerManager().getLayers().add(tapHandlerLayer);
  if (mapOptions.searchResult != null) {
    this.caches=new CachesBundle(mapOptions.searchResult,this.mapView,this.mapHandlers);
  }
 else   if (StringUtils.isNotEmpty(mapOptions.geocode)) {
    this.caches=new CachesBundle(mapOptions.geocode,this.mapView,this.mapHandlers);
  }
 else   if (mapOptions.coords != null) {
    this.caches=new CachesBundle(mapOptions.coords,mapOptions.waypointType,this.mapView,this.mapHandlers);
  }
 else {
    caches=new CachesBundle(this.mapView,this.mapHandlers);
  }
  caches.handleLiveLayers(mapOptions.isLiveEnabled);
  this.positionLayer=new PositionLayer();
  this.mapView.getLayerManager().getLayers().add(positionLayer);
  this.distanceView=new DistanceView(navTarget,(TextView)findViewById(R.id.distance));
  this.targetView=new TargetView((TextView)findViewById(R.id.target),StringUtils.EMPTY,StringUtils.EMPTY);
  final Geocache target=getCurrentTargetCache();
  if (target != null) {
    targetView.setTarget(target.getGeocode(),target.getName());
  }
  this.resumeSubscription=Subscriptions.from(this.geoDirUpdate.start(GeoDirHandler.UPDATE_GEODIR));
}
