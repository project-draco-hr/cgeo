{
  final int count=geocodes.size();
  final LoadDetailsHandler loadDetailsHandler=new LoadDetailsHandler(count,this);
  waitDialog=new ProgressDialog(this);
  waitDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
  waitDialog.setCancelable(true);
  waitDialog.setCancelMessage(loadDetailsHandler.cancelMessage());
  waitDialog.setMax(count);
  waitDialog.setOnCancelListener(new DialogInterface.OnCancelListener(){
    @Override public void onCancel(    final DialogInterface arg0){
      try {
        if (loadDetailsThread != null) {
          loadDetailsThread.stopIt();
        }
      }
 catch (      final Exception e) {
        Log.e("CGeoMap.storeCaches.onCancel",e);
      }
    }
  }
);
  final float etaTime=count * 7.0f / 60.0f;
  final int roundedEta=Math.round(etaTime);
  if (etaTime < 0.4) {
    waitDialog.setMessage(res.getString(R.string.caches_downloading) + " " + res.getString(R.string.caches_eta_ltm));
  }
 else {
    waitDialog.setMessage(res.getString(R.string.caches_downloading) + " " + res.getQuantityString(R.plurals.caches_eta_mins,roundedEta,roundedEta));
  }
  loadDetailsHandler.setStart();
  waitDialog.show();
  loadDetailsThread=new LoadDetails(loadDetailsHandler,geocodes,listIds);
  loadDetailsThread.start();
}
