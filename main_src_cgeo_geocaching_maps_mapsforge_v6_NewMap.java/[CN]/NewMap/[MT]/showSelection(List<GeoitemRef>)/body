{
  if (items.isEmpty()) {
    return;
  }
  if (items.size() == 1) {
    showPopup(items.get(0));
    return;
  }
  try {
    final ArrayList<GeoitemRef> sorted=new ArrayList<>(items);
    Collections.sort(sorted,GeoitemRef.NAME_COMPARATOR);
    final LayoutInflater inflater=LayoutInflater.from(this);
    final ListAdapter adapter=new ArrayAdapter<GeoitemRef>(this,R.layout.cacheslist_item_select,sorted){
      @Override public View getView(      final int position,      final View convertView,      final ViewGroup parent){
        final View view=convertView == null ? inflater.inflate(R.layout.cacheslist_item_select,parent,false) : convertView;
        final TextView tv=(TextView)view.findViewById(R.id.text);
        final GeoitemRef item=getItem(position);
        tv.setText(item.getName());
        tv.setCompoundDrawablesWithIntrinsicBounds(item.getMarkerId(),0,0,0);
        final TextView infoView=(TextView)view.findViewById(R.id.info);
        infoView.setText(item.getItemCode());
        return view;
      }
    }
;
    final AlertDialog dialog=new AlertDialog.Builder(this).setTitle(res.getString(R.string.map_select_multiple_items)).setAdapter(adapter,new SelectionClickListener(sorted)).create();
    dialog.setCanceledOnTouchOutside(true);
    dialog.show();
  }
 catch (  final NotFoundException e) {
    Log.e("NewMap.showSelection",e);
  }
}
