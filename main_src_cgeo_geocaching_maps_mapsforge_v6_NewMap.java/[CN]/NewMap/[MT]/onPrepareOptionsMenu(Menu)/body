{
  super.onPrepareOptionsMenu(menu);
  for (  final MapSource mapSource : MapProviderFactory.getMapSources()) {
    final MenuItem menuItem=menu.findItem(mapSource.getNumericalId());
    if (menuItem != null) {
      if (mapSource instanceof MapsforgeMapProvider.OfflineMapSource) {
        menuItem.setVisible(mapSource.isAvailable());
      }
 else {
        menuItem.setVisible(false);
      }
    }
  }
  try {
    final MenuItem itemMapLive=menu.findItem(R.id.menu_map_live);
    if (isLiveEnabled) {
      itemMapLive.setTitle(res.getString(R.string.map_live_disable));
    }
 else {
      itemMapLive.setTitle(res.getString(R.string.map_live_enable));
    }
    itemMapLive.setVisible(coordsIntent == null);
    menu.findItem(R.id.menu_mycaches_mode).setChecked(Settings.isExcludeMyCaches());
    menu.findItem(R.id.menu_direction_line).setChecked(Settings.isMapDirection());
    menu.findItem(R.id.menu_trail_mode).setChecked(Settings.isMapTrail());
    menu.findItem(R.id.menu_theme_mode).setVisible(true);
    menu.findItem(R.id.menu_hint).setVisible(mapMode == MapMode.SINGLE);
    menu.findItem(R.id.menu_compass).setVisible(mapMode == MapMode.SINGLE);
  }
 catch (  final RuntimeException e) {
    Log.e("CGeoMap.onPrepareOptionsMenu",e);
  }
  return true;
}
