{
  super.onActivityResult(requestCode,resultCode,data);
  if (requestCode == AbstractDialogFragment.REQUEST_CODE_TARGET_INFO) {
    if (resultCode == AbstractDialogFragment.RESULT_CODE_SET_TARGET) {
      final TargetInfo targetInfo=data.getExtras().getParcelable(Intents.EXTRA_TARGET_INFO);
      if (targetInfo != null) {
        lastNavTarget=targetInfo.coords;
        if (navigationLayer != null) {
          navigationLayer.setDestination(targetInfo.coords);
          navigationLayer.requestRedraw();
        }
        if (distanceView != null) {
          distanceView.setDestination(targetInfo.coords);
          distanceView.setCoordinates(geoDirUpdate.getCurrenLocation());
        }
        if (StringUtils.isNotBlank(targetInfo.geocode)) {
          targetGeocode=targetInfo.geocode;
          final Geocache target=getCurrentTargetCache();
          targetView.setTarget(targetGeocode,target != null ? target.getName() : StringUtils.EMPTY);
        }
      }
    }
    List<String> changedGeocodes=new ArrayList<>();
    String geocode=popupGeocodes.poll();
    while (geocode != null) {
      changedGeocodes.add(geocode);
      geocode=popupGeocodes.poll();
    }
    caches.invalidate(changedGeocodes);
  }
}
