{
  if (inflater == null) {
    inflater=((Activity)getContext()).getLayoutInflater();
  }
  if (position > getCount()) {
    Log.w(Settings.tag,"cgCacheListAdapter.getView: Attempt to access missing item #" + position);
    return null;
  }
  cgCache cache=getItem(position);
  View v=rowView;
  if (v == null) {
    v=inflater.inflate(R.layout.cache,null);
    holder=new cgCacheView();
    holder.oneCache=(RelativeLayout)v.findViewById(R.id.one_cache);
    holder.checkbox=(CheckBox)v.findViewById(R.id.checkbox);
    holder.oneInfo=(RelativeLayout)v.findViewById(R.id.one_info);
    holder.oneCheckbox=(RelativeLayout)v.findViewById(R.id.one_checkbox);
    holder.logStatusMark=(ImageView)v.findViewById(R.id.log_status_mark);
    holder.oneCache=(RelativeLayout)v.findViewById(R.id.one_cache);
    holder.text=(TextView)v.findViewById(R.id.text);
    holder.directionLayout=(RelativeLayout)v.findViewById(R.id.direction_layout);
    holder.distance=(cgDistanceView)v.findViewById(R.id.distance);
    holder.direction=(cgCompassMini)v.findViewById(R.id.direction);
    holder.dirImgLayout=(RelativeLayout)v.findViewById(R.id.dirimg_layout);
    holder.dirImg=(ImageView)v.findViewById(R.id.dirimg);
    holder.inventory=(RelativeLayout)v.findViewById(R.id.inventory);
    holder.favourite=(TextView)v.findViewById(R.id.favourite);
    holder.info=(TextView)v.findViewById(R.id.info);
    v.setTag(holder);
  }
 else {
    holder=(cgCacheView)v.getTag();
  }
  if (cache.own) {
    if (Settings.isLightSkin()) {
      holder.oneInfo.setBackgroundResource(R.color.owncache_background_light);
      holder.oneCheckbox.setBackgroundResource(R.color.owncache_background_light);
    }
 else {
      holder.oneInfo.setBackgroundResource(R.color.owncache_background_dark);
      holder.oneCheckbox.setBackgroundResource(R.color.owncache_background_dark);
    }
  }
 else {
    if (Settings.isLightSkin()) {
      holder.oneInfo.setBackgroundResource(R.color.background_light);
      holder.oneCheckbox.setBackgroundResource(R.color.background_light);
    }
 else {
      holder.oneInfo.setBackgroundResource(R.color.background_dark);
      holder.oneCheckbox.setBackgroundResource(R.color.background_dark);
    }
  }
  final touchListener touchLst=new touchListener(cache.geocode,cache.name,cache);
  v.setOnClickListener(touchLst);
  v.setOnLongClickListener(touchLst);
  v.setOnTouchListener(touchLst);
  v.setLongClickable(true);
  if (selectMode) {
    if (cache.statusCheckedView) {
      moveRight(holder,cache,true);
    }
 else {
      moveRight(holder,cache,false);
    }
  }
 else   if (cache.statusChecked) {
    holder.checkbox.setChecked(true);
    if (cache.statusCheckedView) {
      moveRight(holder,cache,true);
    }
 else {
      moveRight(holder,cache,false);
    }
  }
 else {
    holder.checkbox.setChecked(false);
    if (cache.statusCheckedView) {
      moveLeft(holder,cache,false);
    }
 else {
      holder.oneInfo.clearAnimation();
    }
  }
  holder.checkbox.setOnClickListener(new checkBoxListener(cache));
  if (!distances.contains(holder.distance)) {
    distances.add(holder.distance);
  }
  holder.distance.setContent(base,cache.coords);
  if (!compasses.contains(holder.direction)) {
    compasses.add(holder.direction);
  }
  holder.direction.setContent(cache.coords);
  if (cache.found && cache.logOffline) {
    holder.logStatusMark.setImageResource(R.drawable.mark_green_orange);
    holder.logStatusMark.setVisibility(View.VISIBLE);
  }
 else   if (cache.found) {
    holder.logStatusMark.setImageResource(R.drawable.mark_green_more);
    holder.logStatusMark.setVisibility(View.VISIBLE);
  }
 else   if (cache.logOffline) {
    holder.logStatusMark.setImageResource(R.drawable.mark_orange);
    holder.logStatusMark.setVisibility(View.VISIBLE);
  }
 else {
    holder.logStatusMark.setVisibility(View.GONE);
  }
  if (cache.nameSp == null) {
    cache.nameSp=(new Spannable.Factory()).newSpannable(cache.name);
    if (cache.disabled || cache.archived) {
      cache.nameSp.setSpan(new StrikethroughSpan(),0,cache.nameSp.toString().length(),Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
    }
  }
  holder.text.setText(cache.nameSp,TextView.BufferType.SPANNABLE);
  if (gcIconDrawables.containsKey(cache.type)) {
    holder.text.setCompoundDrawablesWithIntrinsicBounds(gcIconDrawables.get(cache.type),null,null,null);
  }
 else {
    holder.text.setCompoundDrawablesWithIntrinsicBounds(gcIconDrawables.get("mystery"),null,null,null);
  }
  if (holder.inventory.getChildCount() > 0) {
    holder.inventory.removeAllViews();
  }
  ImageView tbIcon=null;
  if (cache.inventoryItems > 0) {
    tbIcon=(ImageView)inflater.inflate(R.layout.trackable_icon,null);
    tbIcon.setImageResource(R.drawable.trackable_all);
    holder.inventory.addView(tbIcon);
    holder.inventory.setVisibility(View.VISIBLE);
  }
 else {
    holder.inventory.setVisibility(View.GONE);
  }
  boolean setDiDi=false;
  if (cache.coords != null) {
    holder.direction.setVisibility(View.VISIBLE);
    holder.direction.updateAzimuth(azimuth);
    if (coords != null) {
      holder.distance.update(coords);
      holder.direction.updateCoords(coords);
    }
    setDiDi=true;
  }
 else {
    if (cache.distance != null) {
      holder.distance.setDistance(cache.distance);
      setDiDi=true;
    }
    if (cache.direction != null) {
      holder.direction.setVisibility(View.VISIBLE);
      holder.direction.updateAzimuth(azimuth);
      holder.direction.updateHeading(cache.direction);
      setDiDi=true;
    }
  }
  if (setDiDi) {
    holder.directionLayout.setVisibility(View.VISIBLE);
    holder.dirImgLayout.setVisibility(View.GONE);
  }
 else {
    holder.directionLayout.setVisibility(View.GONE);
    holder.distance.clear();
    Bitmap dirImgPre=null;
    Bitmap dirImg=null;
    try {
      dirImgPre=BitmapFactory.decodeFile(cgDirectionImg.getDirectionFile(cache.geocode).getPath());
      dirImg=dirImgPre.copy(Bitmap.Config.ARGB_8888,true);
      dirImgPre.recycle();
      dirImgPre=null;
    }
 catch (    Exception e) {
    }
    if (dirImg != null) {
      if (!Settings.isLightSkin()) {
        int length=dirImg.getWidth() * dirImg.getHeight();
        int[] pixels=new int[length];
        dirImg.getPixels(pixels,0,dirImg.getWidth(),0,0,dirImg.getWidth(),dirImg.getHeight());
        for (int i=0; i < length; i++) {
          if (pixels[i] == 0xff000000) {
            pixels[i]=0xffffffff;
          }
        }
        dirImg.setPixels(pixels,0,dirImg.getWidth(),0,0,dirImg.getWidth(),dirImg.getHeight());
      }
      holder.dirImg.setImageBitmap(dirImg);
      holder.dirImgLayout.setVisibility(View.VISIBLE);
    }
 else {
      holder.dirImg.setImageBitmap(null);
      holder.dirImgLayout.setVisibility(View.GONE);
    }
  }
  if (cache.favouriteCnt != null) {
    holder.favourite.setText(String.format("%d",cache.favouriteCnt));
  }
 else {
    holder.favourite.setText("---");
  }
  int favoriteBack;
  if (Settings.isLightSkin()) {
    favoriteBack=R.drawable.favourite_background_light;
  }
 else {
    favoriteBack=R.drawable.favourite_background_dark;
  }
  if (cache.myVote != null && cache.myVote > 0) {
    if (cache.myVote >= 4) {
      favoriteBack=ratingBcgs[2];
    }
 else     if (cache.myVote >= 3) {
      favoriteBack=ratingBcgs[1];
    }
 else     if (cache.myVote > 0) {
      favoriteBack=ratingBcgs[0];
    }
  }
 else   if (cache.rating != null && cache.rating > 0) {
    if (cache.rating >= 3.5) {
      favoriteBack=ratingBcgs[2];
    }
 else     if (cache.rating >= 2.1) {
      favoriteBack=ratingBcgs[1];
    }
 else     if (cache.rating > 0.0) {
      favoriteBack=ratingBcgs[0];
    }
  }
  holder.favourite.setBackgroundResource(favoriteBack);
  StringBuilder cacheInfo=new StringBuilder();
  if (historic && cache.visitedDate != null) {
    cacheInfo.append(base.formatTime(cache.visitedDate));
    cacheInfo.append("; ");
    cacheInfo.append(base.formatDate(cache.visitedDate));
  }
 else {
    if (StringUtils.isNotBlank(cache.geocode)) {
      cacheInfo.append(cache.geocode);
    }
    if (cache.size != null) {
      if (cacheInfo.length() > 0) {
        cacheInfo.append(" | ");
      }
      cacheInfo.append(res.getString(cache.size.stringId));
    }
    if ((cache.difficulty != null && cache.difficulty > 0f) || (cache.terrain != null && cache.terrain > 0f) || (cache.rating != null && cache.rating > 0f)) {
      if (cacheInfo.length() > 0 && ((cache.difficulty != null && cache.difficulty > 0f) || (cache.terrain != null && cache.terrain > 0f))) {
        cacheInfo.append(" |");
      }
      if (cache.difficulty != null && cache.difficulty > 0f) {
        cacheInfo.append(" D:");
        cacheInfo.append(String.format(Locale.getDefault(),"%.1f",cache.difficulty));
      }
      if (cache.terrain != null && cache.terrain > 0f) {
        cacheInfo.append(" T:");
        cacheInfo.append(String.format(Locale.getDefault(),"%.1f",cache.terrain));
      }
    }
    if (cache.members) {
      if (cacheInfo.length() > 0) {
        cacheInfo.append(" | ");
      }
      cacheInfo.append(res.getString(R.string.cache_premium));
    }
    if (cache.reason != null && cache.reason == 1) {
      if (cacheInfo.length() > 0) {
        cacheInfo.append(" | ");
      }
      cacheInfo.append(res.getString(R.string.cache_offline));
    }
  }
  holder.info.setText(cacheInfo.toString());
  return v;
}
