{
  if (object == null) {
    throw new IllegalArgumentException("The object to build a hash code for must not be null");
  }
  HashCodeBuilder builder=new HashCodeBuilder(initialNonZeroOddNumber,multiplierNonZeroOddNumber);
  Class<?> clazz=object.getClass();
  reflectionAppend(object,clazz,builder,testTransients,excludeFields);
  while (clazz.getSuperclass() != null && clazz != reflectUpToClass) {
    clazz=clazz.getSuperclass();
    reflectionAppend(object,clazz,builder,testTransients,excludeFields);
  }
  return builder.toHashCode();
}
