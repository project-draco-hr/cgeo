{
  final Worker worker=AndroidRxUtils.networkScheduler.createWorker();
  handler.unsubscribeIfCancelled(worker);
  worker.schedule(new Action0(){
    private final Parameters params=new Parameters("code",StringUtils.defaultString(Settings.getWebDeviceCode()));
    private long baseTime=System.currentTimeMillis();
    @Override public void call(){
      if (System.currentTimeMillis() - baseTime >= 3 * 60000) {
        handler.sendEmptyMessage(DownloadProgress.MSG_DONE);
        return;
      }
      try {
        final Response responseFromWeb=Network.getRequest("http://send2.cgeo.org/read.html",params).flatMap(Network.withSuccess).toBlocking().value();
        final String response=Network.getResponseData(responseFromWeb);
        if (response != null && response.length() > 2) {
          handler.sendMessage(handler.obtainMessage(DownloadProgress.MSG_LOADING,response));
          Geocache.storeCache(null,response,Collections.singleton(listId),false,null);
          handler.sendMessage(handler.obtainMessage(DownloadProgress.MSG_LOADED,response));
          baseTime=System.currentTimeMillis();
          worker.schedule(this);
        }
 else         if ("RG".equals(response)) {
          Settings.setWebNameCode(null,null);
          handler.sendEmptyMessage(DownloadProgress.MSG_NO_REGISTRATION);
          handler.cancel();
        }
 else {
          worker.schedule(this,5,TimeUnit.SECONDS);
          handler.sendEmptyMessage(DownloadProgress.MSG_WAITING);
        }
      }
 catch (      final Exception e) {
        Log.e("loadFromWeb",e);
        handler.sendEmptyMessage(DownloadProgress.MSG_SERVER_FAIL);
        handler.cancel();
      }
    }
  }
);
}
