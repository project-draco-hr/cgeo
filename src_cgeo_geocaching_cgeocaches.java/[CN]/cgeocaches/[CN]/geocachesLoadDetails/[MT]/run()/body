{
  if (dir != null) {
    dir=app.removeDir();
  }
  if (geo != null) {
    geo=app.removeGeo();
  }
  final ArrayList<cgCache> cacheListTemp=new ArrayList<cgCache>(cacheList);
  for (  cgCache cache : cacheListTemp) {
    if (checked > 0 && cache.statusChecked == false) {
      handler.sendEmptyMessage(0);
      yield();
      continue;
    }
    try {
      if (needToStop == true) {
        Log.i(cgSettings.tag,"Stopped storing process.");
        break;
      }
      if ((System.currentTimeMillis() - last) < 1500) {
        try {
          int delay=1000 + ((Double)(Math.random() * 1000)).intValue() - (int)(System.currentTimeMillis() - last);
          if (delay < 0) {
            delay=500;
          }
          Log.i(cgSettings.tag,"Waiting for next cache " + delay + " ms");
          sleep(delay);
        }
 catch (        Exception e) {
          Log.e(cgSettings.tag,"cgeocaches.geocachesLoadDetails.sleep: " + e.toString());
        }
      }
      if (needToStop == true) {
        Log.i(cgSettings.tag,"Stopped storing process.");
        break;
      }
      detailProgress++;
      base.storeCache(app,activity,cache,null,reason,handler);
      handler.sendEmptyMessage(cacheList.indexOf(cache));
      yield();
    }
 catch (    Exception e) {
      Log.e(cgSettings.tag,"cgeocaches.geocachesLoadDetails: " + e.toString());
    }
    last=System.currentTimeMillis();
  }
  cacheListTemp.clear();
  handler.sendEmptyMessage(-1);
}
