{
  if (adapter != null && adapter.getChecked() > 0) {
    detailTotal=adapter.getChecked();
  }
 else {
    detailTotal=cacheList.size();
  }
  detailProgress=0;
  base.showProgress(activity,false);
  waitDialog=new ProgressDialog(this);
  waitDialog.setOnCancelListener(new DialogInterface.OnCancelListener(){
    public void onCancel(    DialogInterface arg0){
      try {
        if (threadD != null) {
          threadD.kill();
        }
      }
 catch (      Exception e) {
        Log.e(cgSettings.tag,"cgeocaches.exportFieldNotes.onCancel: " + e.toString());
      }
    }
  }
);
  waitDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
  waitDialog.setMessage(res.getString(R.string.caches_exporting_fieldnote));
  waitDialog.setCancelable(true);
  waitDialog.setMax(detailTotal);
  waitDialog.show();
  threadF=new geocachesExportFieldNotes(exportFieldNotesHandler);
  threadF.start();
}
