{
  super.onCreateContextMenu(menu,view,info);
  if (adapter == null) {
    return;
  }
  if (contextMenuMoveToList) {
    createFakeContextMenuMoveToList(menu);
    return;
  }
  AdapterContextMenuInfo adapterInfo=null;
  try {
    adapterInfo=(AdapterContextMenuInfo)info;
  }
 catch (  Exception e) {
    Log.w(cgSettings.tag,"cgeocaches.onCreateContextMenu: " + e.toString());
  }
  if ((adapterInfo == null || adapterInfo.position < 0) && selectedFilter != null) {
    if (selectedFilter.equals(res.getString(R.string.caches_filter_size))) {
      menu.setHeaderTitle(res.getString(R.string.caches_filter_size_title));
      menu.add(0,MENU_FILTER_SIZE_MICRO,0,res.getString(R.string.caches_filter_size_micro));
      menu.add(0,MENU_FILTER_SIZE_SMALL,0,res.getString(R.string.caches_filter_size_small));
      menu.add(0,MENU_FILTER_SIZE_REGULAR,0,res.getString(R.string.caches_filter_size_regular));
      menu.add(0,MENU_FILTER_SIZE_LARGE,0,res.getString(R.string.caches_filter_size_large));
      menu.add(0,MENU_FILTER_SIZE_OTHER,0,res.getString(R.string.caches_filter_size_other));
      menu.add(0,MENU_FILTER_SIZE_VIRTUAL,0,res.getString(R.string.caches_filter_size_virtual));
      menu.add(0,MENU_FILTER_SIZE_NOT_CHOSEN,0,res.getString(R.string.caches_filter_size_notchosen));
    }
 else     if (selectedFilter.equals(res.getString(R.string.caches_filter_type))) {
      menu.setHeaderTitle(res.getString(R.string.caches_filter_type_title));
      menu.add(0,MENU_FILTER_TYPE_TRADITIONAL,0,res.getString(R.string.caches_filter_type_traditional));
      menu.add(0,MENU_FILTER_TYPE_MULTI,0,res.getString(R.string.caches_filter_type_multi));
      menu.add(0,MENU_FILTER_TYPE_MYSTERY,0,res.getString(R.string.caches_filter_type_mystery));
      menu.add(0,MENU_FILTER_TYPE_LETTERBOX,0,res.getString(R.string.caches_filter_type_letterbox));
      menu.add(0,MENU_FILTER_TYPE_EVENT,0,res.getString(R.string.caches_filter_type_event));
      menu.add(0,MENU_FILTER_TYPE_MEGA,0,res.getString(R.string.caches_filter_type_mega));
      menu.add(0,MENU_FILTER_TYPE_EARTH,0,res.getString(R.string.caches_filter_type_earth));
      menu.add(0,MENU_FILTER_TYPE_CITO,0,res.getString(R.string.caches_filter_type_cito));
      menu.add(0,MENU_FILTER_TYPE_WEBCAM,0,res.getString(R.string.caches_filter_type_webcam));
      menu.add(0,MENU_FILTER_TYPE_VIRTUAL,0,res.getString(R.string.caches_filter_type_virtual));
      menu.add(0,MENU_FILTER_TYPE_WHERIGO,0,res.getString(R.string.caches_filter_type_wherigo));
      menu.add(0,MENU_FILTER_TYPE_LOSTFOUND,0,res.getString(R.string.caches_filter_type_lostfound));
      menu.add(0,MENU_FILTER_TYPE_APE,0,res.getString(R.string.caches_filter_type_ape));
      menu.add(0,MENU_FILTER_TYPE_GCHQ,0,res.getString(R.string.caches_filter_type_gchq));
      menu.add(0,MENU_FILTER_TYPE_GPS,0,res.getString(R.string.caches_filter_type_gps));
    }
  }
 else {
    if (adapterInfo.position >= adapter.getCount()) {
      return;
    }
    final cgCache cache=adapter.getItem(adapterInfo.position);
    if (StringUtils.isNotBlank(cache.name)) {
      menu.setHeaderTitle(cache.name);
    }
 else {
      menu.setHeaderTitle(cache.geocode);
    }
    if (cache.latitude != null && cache.longitude != null) {
      menu.add(0,MENU_COMPASS,0,res.getString(R.string.cache_menu_compass));
      SubMenu subMenu=menu.addSubMenu(1,0,0,res.getString(R.string.cache_menu_navigate)).setIcon(android.R.drawable.ic_menu_more);
      NavigationAppFactory.addMenuItems(subMenu,this,res);
      addVisitMenu(menu,cache);
      menu.add(0,MENU_CACHE_DETAILS,0,res.getString(R.string.cache_menu_details));
    }
    if (cache.reason >= 1) {
      menu.add(0,MENU_DROP_CACHE,0,res.getString(R.string.cache_offline_drop));
      List<cgList> cacheLists=app.getLists();
      int listCount=cacheLists.size();
      if (listCount > 1) {
        SubMenu submenu=menu.addSubMenu(0,MENU_MOVE_TO_LIST,0,res.getString(R.string.cache_menu_move_list));
        for (int i=0; i < listCount; i++) {
          cgList list=cacheLists.get(i);
          submenu.add(Menu.NONE,CONTEXT_MENU_MOVE_TO_LIST + list.id,Menu.NONE,list.title);
        }
      }
    }
  }
}
