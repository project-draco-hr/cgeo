{
  super.onCreate(savedInstanceState);
  app.setAction(action);
  setTheme();
  setContentView(R.layout.caches);
  setTitle("caches");
  Bundle extras=getIntent().getExtras();
  if (extras != null) {
    type=extras.getString("type");
    latitude=extras.getDouble("latitude");
    longitude=extras.getDouble("longitude");
    cachetype=extras.getString("cachetype");
    keyword=extras.getString("keyword");
    address=extras.getString("address");
    username=extras.getString("username");
  }
  init();
  Thread threadPure;
  cgSearchThread thread;
  if (type.equals("offline")) {
    listId=settings.getLastList();
    if (listId <= 0) {
      listId=1;
      title=res.getString(R.string.caches_stored);
    }
 else {
      final cgList list=app.getList(listId);
      title=list.title;
    }
    setTitle(title);
    showProgress(true);
    setLoadingCaches();
    threadPure=new geocachesLoadByOffline(loadCachesHandler,latitude,longitude,listId);
    threadPure.start();
  }
 else   if (type.equals("history")) {
    if (adapter != null) {
      adapter.setHistoric(true);
    }
    title=res.getString(R.string.caches_history);
    setTitle(title);
    showProgress(true);
    setLoadingCaches();
    threadPure=new geocachesLoadByHistory(loadCachesHandler);
    threadPure.start();
  }
 else   if (type.equals("nearest")) {
    action="pending";
    title=res.getString(R.string.caches_nearby);
    setTitle(title);
    showProgress(true);
    setLoadingCaches();
    thread=new geocachesLoadByCoords(loadCachesHandler,latitude,longitude,cachetype);
    thread.setRecaptchaHandler(new cgSearchHandler(this,res,thread));
    thread.start();
  }
 else   if (type.equals("coordinate")) {
    action="planning";
    title=cgBase.formatCoordinate(latitude,res.getString(R.string.search_lat),true) + " | " + cgBase.formatCoordinate(longitude,res.getString(R.string.search_lon),true);
    setTitle(title);
    showProgress(true);
    setLoadingCaches();
    thread=new geocachesLoadByCoords(loadCachesHandler,latitude,longitude,cachetype);
    thread.setRecaptchaHandler(new cgSearchHandler(this,res,thread));
    thread.start();
  }
 else   if (type.equals("keyword")) {
    title=keyword;
    setTitle(title);
    showProgress(true);
    setLoadingCaches();
    thread=new geocachesLoadByKeyword(loadCachesHandler,keyword,cachetype);
    thread.setRecaptchaHandler(new cgSearchHandler(this,res,thread));
    thread.start();
  }
 else   if (type.equals("address")) {
    action="planning";
    if (address != null && address.length() > 0) {
      title=address;
      setTitle(title);
      showProgress(true);
      setLoadingCaches();
    }
 else {
      title=cgBase.formatCoordinate(latitude,res.getString(R.string.search_lat),true) + " | " + cgBase.formatCoordinate(longitude,res.getString(R.string.search_lon),true);
      setTitle(title);
      showProgress(true);
      setLoadingCaches();
    }
    thread=new geocachesLoadByCoords(loadCachesHandler,latitude,longitude,cachetype);
    thread.setRecaptchaHandler(new cgSearchHandler(this,res,thread));
    thread.start();
  }
 else   if (type.equals("username")) {
    title=username;
    setTitle(title);
    showProgress(true);
    setLoadingCaches();
    thread=new geocachesLoadByUserName(loadCachesHandler,username,cachetype);
    thread.setRecaptchaHandler(new cgSearchHandler(this,res,thread));
    thread.start();
  }
 else   if (type.equals("owner")) {
    title=username;
    setTitle(title);
    showProgress(true);
    setLoadingCaches();
    thread=new geocachesLoadByOwner(loadCachesHandler,username,cachetype);
    thread.setRecaptchaHandler(new cgSearchHandler(this,res,thread));
    thread.start();
  }
 else {
    title="caches";
    setTitle(title);
    Log.e(cgSettings.tag,"cgeocaches.onCreate: No action or unknown action specified");
  }
}
