{
  SubMenu subMenuFilter=menu.addSubMenu(0,SUBMENU_FILTER,0,res.getString(R.string.caches_filter)).setIcon(android.R.drawable.ic_menu_search);
  subMenuFilter.setHeaderTitle(res.getString(R.string.caches_filter_title));
  subMenuFilter.add(0,SUBMENU_FILTER_TYPE,0,res.getString(R.string.caches_filter_type));
  subMenuFilter.add(0,SUBMENU_FILTER_SIZE,0,res.getString(R.string.caches_filter_size));
  subMenuFilter.add(0,MENU_FILTER_TRACKABLES,0,res.getString(R.string.caches_filter_track));
  subMenuFilter.add(0,MENU_FILTER_CLEAR,0,res.getString(R.string.caches_filter_clear));
  SubMenu subMenuSort=menu.addSubMenu(0,SUBMENU_SORT,0,res.getString(R.string.caches_sort)).setIcon(android.R.drawable.ic_menu_sort_alphabetically);
  subMenuSort.setHeaderTitle(res.getString(R.string.caches_sort_title));
  HashMap<String,Integer> comparators=new HashMap<String,Integer>();
  comparators.put(res.getString(R.string.caches_sort_distance),MENU_SORT_DISTANCE);
  comparators.put(res.getString(R.string.caches_sort_difficulty),MENU_SORT_DIFFICULTY);
  comparators.put(res.getString(R.string.caches_sort_terrain),MENU_SORT_TERRAIN);
  comparators.put(res.getString(R.string.caches_sort_size),MENU_SORT_SIZE);
  comparators.put(res.getString(R.string.caches_sort_favorites),MENU_SORT_FAVORITES);
  comparators.put(res.getString(R.string.caches_sort_name),MENU_SORT_NAME);
  comparators.put(res.getString(R.string.caches_sort_gccode),MENU_SORT_GEOCODE);
  comparators.put(res.getString(R.string.caches_sort_rating),MENU_SORT_RATING);
  comparators.put(res.getString(R.string.caches_sort_vote),MENU_SORT_VOTE);
  comparators.put(res.getString(R.string.caches_sort_inventory),MENU_SORT_INVENTORY);
  comparators.put(res.getString(R.string.caches_sort_date),MENU_SORT_DATE);
  ArrayList<String> sortedLabels=new ArrayList<String>(comparators.keySet());
  Collections.sort(sortedLabels);
  for (  String label : sortedLabels) {
    Integer id=comparators.get(label);
    subMenuSort.add(1,id,0,label).setCheckable(true).setChecked(id == MENU_SORT_DISTANCE);
  }
  subMenuSort.setGroupCheckable(1,true,true);
  menu.add(0,MENU_SWITCH_SELECT_MODE,0,res.getString(R.string.caches_select_mode)).setIcon(android.R.drawable.ic_menu_agenda);
  menu.add(0,MENU_INVERT_SELECTION,0,res.getString(R.string.caches_select_invert)).setIcon(android.R.drawable.ic_menu_agenda);
  if (type.equals("offline")) {
    SubMenu subMenu=menu.addSubMenu(0,SUBMENU_MANAGE_OFFLINE,0,res.getString(R.string.caches_manage)).setIcon(android.R.drawable.ic_menu_save);
    subMenu.add(0,MENU_DROP_CACHES,0,res.getString(R.string.caches_drop_all));
    subMenu.add(0,MENU_REFRESH_STORED,0,res.getString(R.string.cache_offline_refresh));
    subMenu.add(0,MENU_EXPORT_NOTES,0,res.getString(R.string.cache_export_fieldnote));
    if (settings.webDeviceCode == null) {
      menu.add(0,MENU_IMPORT_GPX,0,res.getString(R.string.gpx_import_title)).setIcon(android.R.drawable.ic_menu_upload);
    }
 else {
      SubMenu subMenuImport=menu.addSubMenu(0,SUBMENU_IMPORT,0,res.getString(R.string.import_title)).setIcon(android.R.drawable.ic_menu_upload);
      subMenuImport.add(1,MENU_IMPORT_GPX,0,res.getString(R.string.gpx_import_title)).setCheckable(false).setChecked(false);
      subMenuImport.add(1,MENU_IMPORT_WEB,0,res.getString(R.string.web_import_title)).setCheckable(false).setChecked(false);
    }
  }
 else {
    if (type.equals("history")) {
      SubMenu subMenu=menu.addSubMenu(0,SUBMENU_MANAGE_HISTORY,0,res.getString(R.string.caches_manage)).setIcon(android.R.drawable.ic_menu_save);
      subMenu.add(0,MENU_REMOVE_FROM_HISTORY,0,res.getString(R.string.cache_clear_history));
      subMenu.add(0,MENU_EXPORT_NOTES,0,res.getString(R.string.cache_export_fieldnote));
    }
    menu.add(0,MENU_REFRESH_STORED,0,res.getString(R.string.caches_store_offline)).setIcon(android.R.drawable.ic_menu_set_as);
  }
  navigationMenu=CacheListAppFactory.addMenuItems(menu,this,res);
  if (type.equals("offline")) {
    SubMenu subMenu=menu.addSubMenu(0,SUBMENU_MANAGE_LISTS,0,res.getString(R.string.list_menu)).setIcon(android.R.drawable.ic_menu_more);
    subMenu.add(0,MENU_CREATE_LIST,0,res.getString(R.string.list_menu_create));
    subMenu.add(0,MENU_DROP_LIST,0,res.getString(R.string.list_menu_drop));
    subMenu.add(0,MENU_SWITCH_LIST,0,res.getString(R.string.list_menu_change));
  }
  return true;
}
