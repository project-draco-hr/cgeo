{
  if (other == null) {
    return false;
  }
  updated=System.currentTimeMillis();
  if (!detailed && (other.detailed || zoomlevel < other.zoomlevel)) {
    detailed=other.detailed;
    detailedUpdate=other.detailedUpdate;
    coords=other.coords;
    cacheType=other.cacheType;
    zoomlevel=other.zoomlevel;
    premiumMembersOnly=other.premiumMembersOnly;
    reliableLatLon=other.reliableLatLon;
    archived=other.archived;
    found=other.found;
    disabled=other.disabled;
    favorite=other.favorite;
    onWatchlist=other.onWatchlist;
    logOffline=other.logOffline;
    finalDefined=other.finalDefined;
  }
  if (visitedDate == 0) {
    visitedDate=other.visitedDate;
  }
  if (listId == StoredList.TEMPORARY_LIST_ID) {
    listId=other.listId;
  }
  if (StringUtils.isBlank(geocode)) {
    geocode=other.geocode;
  }
  if (StringUtils.isBlank(cacheId)) {
    cacheId=other.cacheId;
  }
  if (StringUtils.isBlank(guid)) {
    guid=other.guid;
  }
  if (null == cacheType || CacheType.UNKNOWN == cacheType) {
    cacheType=other.cacheType;
  }
  if (StringUtils.isBlank(name)) {
    name=other.name;
  }
  if (StringUtils.isBlank(ownerDisplayName)) {
    ownerDisplayName=other.ownerDisplayName;
  }
  if (StringUtils.isBlank(ownerUserId)) {
    ownerUserId=other.ownerUserId;
  }
  if (hidden == null) {
    hidden=other.hidden;
  }
  if (StringUtils.isBlank(hint)) {
    hint=other.hint;
  }
  if (size == null || CacheSize.UNKNOWN == size) {
    size=other.size;
  }
  if (difficulty == 0) {
    difficulty=other.difficulty;
  }
  if (terrain == 0) {
    terrain=other.terrain;
  }
  if (direction == null) {
    direction=other.direction;
  }
  if (distance == null) {
    distance=other.distance;
  }
  if (StringUtils.isBlank(latlon)) {
    latlon=other.latlon;
  }
  if (StringUtils.isBlank(location)) {
    location=other.location;
  }
  if (coords == null) {
    coords=other.coords;
  }
  if (elevation == null) {
    elevation=other.elevation;
  }
  if (personalNote == null) {
    personalNote=other.personalNote;
  }
  if (StringUtils.isBlank(shortdesc)) {
    shortdesc=other.shortdesc;
  }
  if (StringUtils.isBlank(description)) {
    description=other.description;
  }
  if (favoritePoints == 0) {
    favoritePoints=other.favoritePoints;
  }
  if (rating == 0) {
    rating=other.rating;
  }
  if (votes == 0) {
    votes=other.votes;
  }
  if (myVote == 0) {
    myVote=other.myVote;
  }
  if (attributes.isEmpty()) {
    attributes.clear();
    if (other.attributes != null) {
      attributes.addAll(other.attributes);
    }
  }
  if (waypoints.isEmpty()) {
    this.setWaypoints(other.waypoints,false);
  }
 else {
    ArrayList<Waypoint> newPoints=new ArrayList<Waypoint>(waypoints);
    Waypoint.mergeWayPoints(newPoints,other.waypoints,false);
    this.setWaypoints(newPoints,false);
  }
  if (spoilers == null) {
    spoilers=other.spoilers;
  }
  if (inventory == null) {
    inventory=other.inventory;
    inventoryItems=other.inventoryItems;
  }
  if (logs.isEmpty()) {
    logs.clear();
    if (other.logs != null) {
      logs.addAll(other.logs);
    }
  }
  if (logCounts.isEmpty()) {
    logCounts=other.logCounts;
  }
  userModifiedCoords=false;
  if (waypoints != null) {
    for (    Waypoint wpt : waypoints) {
      if (wpt.getWaypointType() == WaypointType.ORIGINAL) {
        userModifiedCoords=true;
        break;
      }
    }
  }
  if (!reliableLatLon) {
    reliableLatLon=other.reliableLatLon;
  }
  if (zoomlevel == -1) {
    zoomlevel=other.zoomlevel;
  }
  return isEqualTo(other);
}
