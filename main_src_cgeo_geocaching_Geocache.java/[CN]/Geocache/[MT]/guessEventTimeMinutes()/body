{
  if (!isEventCache()) {
    return -1;
  }
  final String hourLocalized=CgeoApplication.getInstance().getString(R.string.cache_time_full_hours);
  final List<Pattern> patterns=new ArrayList<>();
  patterns.add(Pattern.compile("\\b(\\d{1,2})\\:(\\d\\d)\\b"));
  if (StringUtils.isNotBlank(hourLocalized)) {
    patterns.add(Pattern.compile("\\b(\\d{1,2})(?:\\.00)?" + "\\s*(?:-|[a-z]+)\\s*" + "(?:\\d{1,2})(?:\\.00)?"+ "\\s+"+ Pattern.quote(hourLocalized),Pattern.CASE_INSENSITIVE));
    patterns.add(Pattern.compile("\\b(\\d{1,2})(?:\\.(00|15|30|45))?\\s+" + Pattern.quote(hourLocalized),Pattern.CASE_INSENSITIVE));
  }
  final String searchText=getShortDescription() + ' ' + getDescription();
  for (  final Pattern pattern : patterns) {
    final MatcherWrapper matcher=new MatcherWrapper(pattern,searchText);
    while (matcher.find()) {
      try {
        final int hours=Integer.parseInt(matcher.group(1));
        int minutes=0;
        if (matcher.groupCount() >= 2 && !StringUtils.isEmpty(matcher.group(2))) {
          minutes=Integer.parseInt(matcher.group(2));
        }
        if (hours >= 0 && hours < 24 && minutes >= 0 && minutes < 60) {
          return hours * 60 + minutes;
        }
      }
 catch (      final NumberFormatException ignored) {
      }
    }
  }
  return -1;
}
