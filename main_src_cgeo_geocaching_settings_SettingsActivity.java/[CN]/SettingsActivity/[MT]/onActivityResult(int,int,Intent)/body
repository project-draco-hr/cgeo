{
  super.onActivityResult(requestCode,resultCode,data);
  if (resultCode != RESULT_OK) {
    return;
  }
  for (  DirChooserType dct : DirChooserType.values()) {
    if (requestCode == dct.requestCode) {
      setChosenDirectory(dct,data);
      return;
    }
  }
switch (requestCode) {
case R.string.pref_mapDirectory:
    if (data.hasExtra(Intents.EXTRA_MAP_FILE)) {
      final String mapFile=data.getStringExtra(Intents.EXTRA_MAP_FILE);
      Settings.setMapFile(mapFile);
      if (!Settings.isValidMapFile(Settings.getMapFile())) {
        ActivityMixin.showToast(this,R.string.warn_invalid_mapfile);
      }
    }
  initMapSourcePreference();
getPreference(R.string.pref_mapDirectory).setSummary(Settings.getMapFileDirectory());
break;
case R.string.pref_fakekey_ocde_authorization:
setOCDEAuthTitle();
redrawScreen(R.string.pref_fakekey_services_screen);
break;
case R.string.pref_fakekey_ocpl_authorization:
setOCPLAuthTitle();
redrawScreen(R.string.pref_fakekey_services_screen);
break;
case R.string.pref_fakekey_twitter_authorization:
setTwitterAuthTitle();
redrawScreen(R.string.pref_fakekey_services_screen);
break;
default :
throw new IllegalArgumentException();
}
}
