{
  super.onActivityResult(requestCode,resultCode,data);
  if (resultCode != RESULT_OK) {
    return;
  }
  for (  final DirChooserType dct : DirChooserType.values()) {
    if (requestCode == dct.requestCode) {
      setChosenDirectory(dct,data);
      return;
    }
  }
switch (requestCode) {
case R.string.pref_mapDirectory:
    if (data.hasExtra(Intents.EXTRA_MAP_FILE)) {
      final String mapFile=data.getStringExtra(Intents.EXTRA_MAP_FILE);
      final File file=new File(mapFile);
      if (!file.isDirectory()) {
        Settings.setMapFile(mapFile);
        if (!Settings.isValidMapFile(Settings.getMapFile())) {
          ActivityMixin.showToast(this,R.string.warn_invalid_mapfile);
        }
 else {
          final Integer mapSourceId=mapFile.hashCode();
          final ListPreference mapSource=(ListPreference)getPreference(R.string.pref_mapsource);
          mapSource.setValue(mapSourceId.toString());
          VALUE_CHANGE_LISTENER.onPreferenceChange(mapSource,mapSourceId);
        }
      }
 else {
        Settings.setMapFileDirectory(mapFile);
      }
    }
  initMapSourcePreference();
getPreference(R.string.pref_mapDirectory).setSummary(StringUtils.defaultString(Settings.getMapFileDirectory()));
break;
case R.string.pref_fakekey_ocde_authorization:
case R.string.pref_fakekey_ocpl_authorization:
case R.string.pref_fakekey_ocnl_authorization:
case R.string.pref_fakekey_ocus_authorization:
case R.string.pref_fakekey_ocro_authorization:
case R.string.pref_fakekey_ocuk_authorization:
final OCPreferenceKeys key=OCPreferenceKeys.getByAuthId(requestCode);
if (key != null) {
setOCAuthTitle(key);
redrawScreen(key.prefScreenId);
}
break;
case R.string.pref_fakekey_gc_authorization:
setAuthTitle(requestCode,GCConnector.getInstance());
setConnectedUsernameTitle(requestCode,GCConnector.getInstance());
redrawScreen(R.string.preference_screen_gc);
initBasicMemberPreferences();
break;
case R.string.pref_fakekey_ec_authorization:
setAuthTitle(requestCode,ECConnector.getInstance());
setConnectedUsernameTitle(requestCode,ECConnector.getInstance());
redrawScreen(R.string.preference_screen_ec);
break;
case R.string.pref_fakekey_gcvote_authorization:
setAuthTitle(requestCode,GCVote.getInstance());
setConnectedUsernameTitle(requestCode,GCVote.getInstance());
redrawScreen(R.string.init_gcvote);
break;
case R.string.pref_fakekey_twitter_authorization:
setTwitterAuthTitle();
redrawScreen(R.string.preference_screen_twitter);
break;
case R.string.pref_fakekey_geokrety_authorization:
setGeokretyAuthTitle();
redrawScreen(R.string.preference_screen_geokrety);
break;
default :
throw new IllegalArgumentException();
}
}
