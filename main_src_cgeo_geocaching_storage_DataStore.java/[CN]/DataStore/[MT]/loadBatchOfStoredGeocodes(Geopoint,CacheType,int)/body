{
  if (cacheType == null) {
    throw new IllegalArgumentException("cacheType must not be null");
  }
  final StringBuilder selection=new StringBuilder();
  selection.append(" detailed = 1 ");
  String[] selectionArgs=null;
  if (cacheType != CacheType.ALL) {
    selection.append(" AND type = ?");
    selectionArgs=new String[]{String.valueOf(cacheType.id)};
  }
  selection.append(" AND geocode IN (SELECT geocode FROM ");
  selection.append(dbTableCachesLists);
  selection.append(" WHERE list_id ");
  selection.append(listId != PseudoList.ALL_LIST.id ? "=" + Math.max(listId,1) : ">= " + StoredList.STANDARD_LIST_ID);
  selection.append(')');
  try {
    if (coords != null) {
      return queryToColl(dbTableCaches,new String[]{"geocode","(ABS(latitude-" + String.format((Locale)null,"%.6f",coords.getLatitude()) + ") + ABS(longitude-"+ String.format((Locale)null,"%.6f",coords.getLongitude())+ ")) AS dif"},selection.toString(),selectionArgs,"dif",null,new HashSet<String>(),GET_STRING_0);
    }
    return queryToColl(dbTableCaches,new String[]{"geocode"},selection.toString(),selectionArgs,"geocode",null,new HashSet<String>(),GET_STRING_0);
  }
 catch (  final Exception e) {
    Log.e("DataStore.loadBatchOfStoredGeocodes",e);
    return Collections.emptySet();
  }
}
