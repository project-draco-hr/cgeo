{
  if (!Settings.isRatingWanted()) {
    return;
  }
  final List<String> geocodes=getVotableGeocodes(caches);
  if (geocodes.isEmpty()) {
    return;
  }
  try {
    final Map<String,GCVoteRating> ratings=getRating(null,geocodes);
    for (    final Geocache cache : caches) {
      if (ratings.containsKey(cache.getGeocode())) {
        final GCVoteRating rating=ratings.get(cache.getGeocode());
        cache.setRating(rating.getRating());
        cache.setVotes(rating.getVotes());
        cache.setMyVote(rating.getMyVote());
      }
    }
  }
 catch (  final Exception e) {
    Log.e("GCVote.loadRatings",e);
  }
}
