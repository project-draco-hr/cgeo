{
  if (!Settings.isRatingWanted()) {
    return;
  }
  final ArrayList<String> geocodes=new ArrayList<String>(caches.size());
  for (  final Geocache cache : caches) {
    String geocode=cache.getGeocode();
    if (StringUtils.isNotBlank(geocode)) {
      geocodes.add(geocode);
    }
  }
  if (geocodes.isEmpty()) {
    return;
  }
  try {
    final Map<String,GCVoteRating> ratings=GCVote.getRating(null,geocodes);
    if (MapUtils.isNotEmpty(ratings)) {
      for (      Geocache cache : caches) {
        if (ratings.containsKey(cache.getGeocode())) {
          GCVoteRating rating=ratings.get(cache.getGeocode());
          cache.setRating(rating.getRating());
          cache.setVotes(rating.getVotes());
          cache.setMyVote(rating.getMyVote());
        }
      }
    }
  }
 catch (  Exception e) {
    Log.e("GCvote.loadRatings",e);
  }
}
