{
  if (log.date > 0) {
    holder.date.setText(Formatter.formatShortDateVerbally(log.date));
    holder.date.setVisibility(View.VISIBLE);
  }
 else {
    holder.date.setVisibility(View.GONE);
  }
  holder.type.setText(log.getType().getL10n());
  holder.author.setText(StringEscapeUtils.unescapeHtml4(log.author));
  fillCountOrLocation(holder,log);
  if (TextUtils.containsHtml(log.log)) {
    final UnknownTagsHandler unknownTagsHandler=new UnknownTagsHandler();
    holder.text.setText(TextUtils.trimSpanned(Html.fromHtml(log.getDisplayText(),new SmileyImage(getGeocode(),holder.text),unknownTagsHandler)),TextView.BufferType.SPANNABLE);
  }
 else {
    holder.text.setText(log.log,TextView.BufferType.SPANNABLE);
  }
  if (log.hasLogImages()) {
    holder.images.setText(log.getImageTitles());
    holder.images.setVisibility(View.VISIBLE);
    holder.images.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      final View v){
        ImagesActivity.startActivityLogImages(activity,getGeocode(),new ArrayList<>(log.getLogImages()));
      }
    }
);
  }
 else {
    holder.images.setVisibility(View.GONE);
  }
  final int marker=log.getType().markerId;
  if (marker != 0) {
    holder.marker.setVisibility(View.VISIBLE);
    holder.marker.setImageResource(marker);
  }
 else {
    holder.marker.setVisibility(View.GONE);
  }
  holder.author.setOnClickListener(createUserActionsListener());
  holder.text.setMovementMethod(AnchorAwareLinkMovementMethod.getInstance());
  holder.text.setOnClickListener(new DecryptTextClickListener(holder.text));
  activity.registerForContextMenu(holder.text);
}
