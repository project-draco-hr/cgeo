{
  if (!Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {
    return null;
  }
  final SimpleDateFormat fileNameDateFormat=new SimpleDateFormat("yyyyMMddHHmmss",Locale.US);
  final File exportFile=new File(Settings.getGpxExportDir() + File.separatorChar + "export_"+ fileNameDateFormat.format(new Date())+ ".gpx");
  FileWriter writer=null;
  try {
    final File exportLocation=new File(Settings.getGpxExportDir());
    exportLocation.mkdirs();
    final XmlSerializer gpx=Xml.newSerializer();
    writer=new FileWriter(exportFile);
    gpx.setOutput(writer);
    gpx.startDocument("UTF-8",true);
    gpx.setPrefix("",PREFIX_GPX);
    gpx.setPrefix("xsi",PREFIX_XSI);
    gpx.setPrefix("groundspeak",PREFIX_GROUNDSPEAK);
    gpx.startTag(PREFIX_GPX,"gpx");
    gpx.attribute("","version","1.0");
    gpx.attribute("","creator","c:geo - http://www.cgeo.org/");
    gpx.attribute(PREFIX_XSI,"schemaLocation",PREFIX_GPX + " http://www.topografix.com/GPX/1/0/gpx.xsd " + PREFIX_GROUNDSPEAK+ " http://www.groundspeak.com/cache/1/0/1/cache.xsd");
    for (int i=0; i < caches.size(); i++) {
      final cgCache cache=cgData.loadCache(caches.get(i).getGeocode(),LoadFlags.LOAD_ALL_DB_ONLY);
      gpx.startTag(PREFIX_GPX,"wpt");
      gpx.attribute("","lat",Double.toString(cache.getCoords().getLatitude()));
      gpx.attribute("","lon",Double.toString(cache.getCoords().getLongitude()));
      final Date hiddenDate=cache.getHiddenDate();
      if (hiddenDate != null) {
        XmlUtils.simpleText(gpx,PREFIX_GPX,"time",dateFormatZ.format(hiddenDate));
      }
      XmlUtils.multipleTexts(gpx,PREFIX_GPX,"name",cache.getGeocode(),"desc",cache.getName(),"url",cache.getUrl(),"urlname",cache.getName(),"sym",cache.isFound() ? "Geocache Found" : "Geocache","type","Geocache|" + cache.getType().pattern);
      gpx.startTag(PREFIX_GROUNDSPEAK,"cache");
      gpx.attribute("","id",cache.getCacheId());
      gpx.attribute("","available",!cache.isDisabled() ? "True" : "False");
      gpx.attribute("","archives",cache.isArchived() ? "True" : "False");
      XmlUtils.multipleTexts(gpx,PREFIX_GROUNDSPEAK,"name",cache.getName(),"placed_by",cache.getOwnerDisplayName(),"owner",cache.getOwnerUserId(),"type",cache.getType().pattern,"container",cache.getSize().id,"difficulty",Float.toString(cache.getDifficulty()),"terrain",Float.toString(cache.getTerrain()),"country",cache.getLocation(),"state","","encoded_hints",cache.getHint());
      writeAttributes(gpx,cache);
      gpx.startTag(PREFIX_GROUNDSPEAK,"short_description");
      gpx.attribute("","html",BaseUtils.containsHtml(cache.getShortDescription()) ? "True" : "False");
      gpx.text(cache.getShortDescription());
      gpx.endTag(PREFIX_GROUNDSPEAK,"short_description");
      gpx.startTag(PREFIX_GROUNDSPEAK,"long_description");
      gpx.attribute("","html",BaseUtils.containsHtml(cache.getDescription()) ? "True" : "False");
      gpx.text(cache.getDescription());
      gpx.endTag(PREFIX_GROUNDSPEAK,"long_description");
      writeLogs(gpx,cache);
      gpx.endTag(PREFIX_GROUNDSPEAK,"cache");
      gpx.endTag(PREFIX_GPX,"wpt");
      writeWaypoints(gpx,cache);
      publishProgress(i + 1);
    }
    gpx.endTag(PREFIX_GPX,"gpx");
    gpx.endDocument();
  }
 catch (  final IOException e) {
    Log.e("GpxExport.ExportTask export",e);
    if (writer != null) {
      try {
        writer.close();
      }
 catch (      IOException e1) {
      }
    }
    if (exportFile.exists()) {
      exportFile.delete();
    }
    return null;
  }
  return exportFile;
}
