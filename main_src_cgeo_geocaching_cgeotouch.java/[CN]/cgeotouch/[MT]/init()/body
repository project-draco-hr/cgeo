{
  if (geocode != null) {
    app.setAction("logging trackable");
  }
  logTypes.clear();
  logTypes.add(LogType.RETRIEVED_IT);
  logTypes.add(LogType.GRABBED_IT);
  logTypes.add(LogType.NOTE);
  logTypes.add(LogType.DISCOVERED_IT);
  if (LogType.UNKNOWN == typeSelected) {
    typeSelected=LogType.RETRIEVED_IT;
  }
  setType(typeSelected);
  Button typeButton=(Button)findViewById(R.id.type);
  registerForContextMenu(typeButton);
  typeButton.setText(typeSelected.getL10n());
  typeButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View view){
      openContextMenu(view);
    }
  }
);
  Button dateButton=(Button)findViewById(R.id.date);
  dateButton.setText(Formatter.formatShortDate(date.getTime().getTime()));
  dateButton.setOnClickListener(new cgeotouchDateListener());
  if (tweetBox == null) {
    tweetBox=(LinearLayout)findViewById(R.id.tweet_box);
  }
  if (tweetCheck == null) {
    tweetCheck=(CheckBox)findViewById(R.id.tweet);
  }
  tweetCheck.setChecked(true);
  Button buttonPost=(Button)findViewById(R.id.post);
  if (Login.isEmpty(viewstates)) {
    buttonPost.setEnabled(false);
    buttonPost.setOnTouchListener(null);
    buttonPost.setOnClickListener(null);
    loadData thread;
    thread=new loadData(guid);
    thread.start();
  }
 else {
    buttonPost.setEnabled(true);
    buttonPost.setOnClickListener(new postListener());
  }
  disableSuggestions((EditText)findViewById(R.id.tracking));
}
