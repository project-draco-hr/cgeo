{
  final StringBuilder where=buildCoordinateWhere(dbTableWaypoints,viewport);
  if (excludeMine) {
    where.append(" and ").append(dbTableCaches).append(".found == 0");
  }
  if (excludeDisabled) {
    where.append(" and ").append(dbTableCaches).append(".disabled == 0");
  }
  if (type != CacheType.ALL) {
    where.append(" and ").append(dbTableCaches).append(".type == '").append(type.id).append('\'');
  }
  init();
  final StringBuilder query=new StringBuilder("SELECT ");
  for (int i=0; i < WAYPOINT_COLUMNS.length; i++) {
    query.append(i > 0 ? ", " : "").append(dbTableWaypoints).append('.').append(WAYPOINT_COLUMNS[i]).append(' ');
  }
  query.append(" FROM ").append(dbTableWaypoints).append(", ").append(dbTableCaches).append(" WHERE ").append(dbTableWaypoints).append(".geocode == ").append(dbTableCaches).append(".geocode and ").append(where);
  final Set<Waypoint> waypoints=new HashSet<Waypoint>();
  final Cursor cursor=database.rawQuery(query.toString(),null);
  while (cursor.moveToNext()) {
    waypoints.add(createWaypointFromDatabaseContent(cursor));
  }
  cursor.close();
  return waypoints;
}
