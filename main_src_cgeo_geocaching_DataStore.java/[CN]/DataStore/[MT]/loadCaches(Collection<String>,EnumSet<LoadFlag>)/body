{
  if (CollectionUtils.isEmpty(geocodes)) {
    return new HashSet<Geocache>();
  }
  final Set<Geocache> result=new HashSet<Geocache>();
  final List<String> remaining=new LinkedList<String>(geocodes);
  if (loadFlags.contains(LoadFlag.LOAD_CACHE_BEFORE)) {
    for (    String geocode : new HashSet<String>(remaining)) {
      Geocache cache=cacheCache.getCacheFromCache(geocode);
      if (cache != null) {
        result.add(cache);
        remaining.remove(cache.getGeocode());
      }
    }
  }
  if (loadFlags.contains(LoadFlag.LOAD_DB_MINIMAL) || loadFlags.contains(LoadFlag.LOAD_ATTRIBUTES) || loadFlags.contains(LoadFlag.LOAD_WAYPOINTS)|| loadFlags.contains(LoadFlag.LOAD_SPOILERS)|| loadFlags.contains(LoadFlag.LOAD_LOGS)|| loadFlags.contains(LoadFlag.LOAD_INVENTORY)|| loadFlags.contains(LoadFlag.LOAD_OFFLINE_LOG)) {
    final Collection<Geocache> cachesFromDB=loadCachesFromGeocodes(remaining,loadFlags);
    result.addAll(cachesFromDB);
    for (    final Geocache cache : cachesFromDB) {
      remaining.remove(cache.getGeocode());
    }
  }
  if (loadFlags.contains(LoadFlag.LOAD_CACHE_AFTER)) {
    for (    String geocode : new HashSet<String>(remaining)) {
      Geocache cache=cacheCache.getCacheFromCache(geocode);
      if (cache != null) {
        result.add(cache);
        remaining.remove(cache.getGeocode());
      }
    }
  }
  if (remaining.size() >= 1) {
    Log.d("DataStore.loadCaches(" + remaining.toString() + ") returned no results");
  }
  return result;
}
