{
  if (initialized) {
    return;
  }
  initialized=true;
  Settings.setLanguage(Settings.isUseEnglish());
  Settings.getLogin();
  if (app.firstRun) {
    (new FirstLoginThread()).start();
  }
  findOnMap.setClickable(true);
  findOnMap.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      cgeoFindOnMap(v);
    }
  }
);
  findByOffline.setClickable(true);
  findByOffline.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      cgeoFindByOffline(v);
    }
  }
);
  findByOffline.setOnLongClickListener(new View.OnLongClickListener(){
    @Override public boolean onLongClick(    View v){
      new StoredList.UserInterface(MainActivity.this).promptForListSelection(R.string.list_title,new RunnableWithArgument<Integer>(){
        @Override public void run(        Integer selectedListId){
          Settings.saveLastList(selectedListId);
          cgeocaches.startActivityOffline(MainActivity.this);
        }
      }
);
      return true;
    }
  }
);
  findByOffline.setLongClickable(true);
  advanced.setClickable(true);
  advanced.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      cgeoSearch(v);
    }
  }
);
  any.setClickable(true);
  any.setOnClickListener(new OnClickListener(){
    @Override public void onClick(    View v){
      cgeoPoint(v);
    }
  }
);
  filter.setClickable(true);
  filter.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      selectGlobalTypeFilter();
    }
  }
);
  filter.setOnLongClickListener(new View.OnLongClickListener(){
    @Override public boolean onLongClick(    View v){
      selectGlobalTypeFilter();
      return true;
    }
  }
);
  updateCacheCounter();
  setFilterTitle();
  checkRestore();
  (new CleanDatabaseThread()).start();
}
