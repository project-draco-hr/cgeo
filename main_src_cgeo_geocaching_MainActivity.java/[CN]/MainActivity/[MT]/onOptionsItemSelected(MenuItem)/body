{
  final int id=item.getItemId();
switch (id) {
case R.id.menu_about:
    showAbout(null);
  return true;
case R.id.menu_helpers:
startActivity(new Intent(this,UsefulAppsActivity.class));
return true;
case R.id.menu_settings:
startActivity(new Intent(this,SettingsActivity.class));
return true;
case R.id.menu_history:
CacheListActivity.startActivityHistory(this);
return true;
case R.id.menu_scan:
startScannerApplication();
return true;
case R.id.menu_pocket_queries:
if (!Settings.isGCPremiumMember()) {
return true;
}
PocketQueryList.promptForListSelection(this,new Action1<PocketQueryList>(){
@Override public void call(final PocketQueryList pql){
CacheListActivity.startActivityPocket(MainActivity.this,pql);
}
}
);
return true;
case R.id.menu_gosearch:
onSearchRequested();
return true;
default :
return super.onOptionsItemSelected(item);
}
}
