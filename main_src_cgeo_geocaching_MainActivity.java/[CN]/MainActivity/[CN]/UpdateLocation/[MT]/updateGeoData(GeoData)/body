{
  if (!nearestView.isClickable()) {
    nearestView.setFocusable(true);
    nearestView.setClickable(true);
    nearestView.setOnClickListener(new OnClickListener(){
      @Override public void onClick(      final View v){
        cgeoFindNearest(v);
      }
    }
);
    nearestView.setBackgroundResource(R.drawable.main_nearby);
  }
  navType.setText(res.getString(geo.getLocationProvider().resourceId));
  if (geo.getAccuracy() >= 0) {
    final int speed=Math.round(geo.getSpeed()) * 60 * 60 / 1000;
    navAccuracy.setText("??" + Units.getDistanceFromMeters(geo.getAccuracy()) + Formatter.SEPARATOR+ Units.getSpeed(speed));
  }
 else {
    navAccuracy.setText(null);
  }
  final Geopoint currentCoords=geo.getCoords();
  if (Settings.isShowAddress()) {
    if (addCoords == null) {
      navLocation.setText(R.string.loc_no_addr);
    }
    if (addCoords == null || (currentCoords.distanceTo(addCoords) > 0.5)) {
      addCoords=currentCoords;
      final Observable<String> address=(new AndroidGeocoder(MainActivity.this).getFromLocation(currentCoords)).map(new Func1<Address,String>(){
        @Override public String call(        final Address address){
          return formatAddress(address);
        }
      }
).onErrorResumeNext(Observable.just(currentCoords.toString()));
      AppObservable.bindActivity(MainActivity.this,address).subscribeOn(AndroidRxUtils.networkScheduler).subscribe(new Action1<String>(){
        @Override public void call(        final String address){
          navLocation.setText(address);
        }
      }
);
    }
  }
 else {
    navLocation.setText(currentCoords.toString());
  }
}
