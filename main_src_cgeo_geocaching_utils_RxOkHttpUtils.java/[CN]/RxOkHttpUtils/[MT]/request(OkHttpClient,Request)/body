{
  return Single.create(new OnSubscribe<Response>(){
    @Override public void call(    final SingleSubscriber<? super Response> singleSubscriber){
      final Call call=client.newCall(request);
      final AtomicBoolean completed=new AtomicBoolean(false);
      singleSubscriber.add(Subscriptions.create(new Action0(){
        @Override public void call(){
          if (!completed.get()) {
            call.cancel();
          }
        }
      }
));
      call.enqueue(new Callback(){
        @Override public void onFailure(        final Call call,        final IOException e){
          completed.set(true);
          singleSubscriber.onError(e);
        }
        @Override public void onResponse(        final Call call,        final Response response) throws IOException {
          completed.set(true);
          singleSubscriber.onSuccess(response);
        }
      }
);
    }
  }
);
}
