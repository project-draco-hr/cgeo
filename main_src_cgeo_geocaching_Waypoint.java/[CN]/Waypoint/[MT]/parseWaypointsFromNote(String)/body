{
  final List<Waypoint> waypoints=new LinkedList<Waypoint>();
  final Pattern COORDPATTERN=Pattern.compile("\\b[nNsS]{1}\\s*\\d");
  String note=initialNote;
  MatcherWrapper matcher=new MatcherWrapper(COORDPATTERN,note);
  int count=1;
  while (matcher.find()) {
    try {
      final Geopoint point=new Geopoint(note.substring(matcher.start()));
      if (point.getLatitudeE6() != 0 && point.getLongitudeE6() != 0 && ((point.getLatitudeE6() % 1000) != 0 || (point.getLongitudeE6() % 1000) != 0)) {
        final String name=CgeoApplication.getInstance().getString(R.string.cache_personal_note) + " " + count;
        final String potentialWaypointType=note.substring(Math.max(0,matcher.start() - 15));
        final Waypoint waypoint=new Waypoint(name,parseWaypointType(potentialWaypointType),false);
        waypoint.setCoords(point);
        waypoints.add(waypoint);
        count++;
      }
    }
 catch (    final Geopoint.ParseException e) {
    }
    note=note.substring(matcher.start() + 1);
    matcher=new MatcherWrapper(COORDPATTERN,note);
  }
  return waypoints;
}
