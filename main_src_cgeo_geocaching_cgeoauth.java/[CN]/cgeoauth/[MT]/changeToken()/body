{
  final String host="twitter.com";
  final String path="/oauth/access_token";
  final String method="POST";
  int status=0;
  String lineOne=null;
  try {
    final Parameters paramsPre=new Parameters();
    paramsPre.put("oauth_verifier",pinEntry.getText().toString());
    int code=-1;
    int retries=0;
    final String params=cgOAuth.signOAuth(host,path,method,true,paramsPre,OAtoken,OAtokenSecret);
    final StringBuilder sb=new StringBuilder();
    do {
      final URL u=new URL("https://" + host + path);
      final URLConnection uc=u.openConnection();
      final HttpsURLConnection connection=(HttpsURLConnection)uc;
      connection.setReadTimeout(30000);
      connection.setRequestMethod(method);
      HttpURLConnection.setFollowRedirects(true);
      connection.setDoOutput(true);
      connection.setDoInput(true);
      final OutputStream out=connection.getOutputStream();
      final OutputStreamWriter wr=new OutputStreamWriter(out);
      wr.write(params);
      wr.flush();
      wr.close();
      out.close();
      final InputStream in=connection.getInputStream();
      final InputStreamReader ins=new InputStreamReader(in);
      final BufferedReader br=new BufferedReader(ins,16 * 1024);
      while ((lineOne=br.readLine()) != null) {
        sb.append(lineOne);
        sb.append('\n');
      }
      code=connection.getResponseCode();
      retries++;
      Log.i(cgSettings.tag,host + ": " + connection.getResponseCode()+ " "+ connection.getResponseMessage());
      br.close();
      ins.close();
      in.close();
      connection.disconnect();
    }
 while (code == -1 && retries < 5);
    final String line=sb.toString();
    OAtoken="";
    OAtokenSecret="";
    final Matcher paramsMatcher1=paramsPattern1.matcher(line);
    if (paramsMatcher1.find() && paramsMatcher1.groupCount() > 0) {
      OAtoken=paramsMatcher1.group(1);
    }
    final Matcher paramsMatcher2=paramsPattern2.matcher(line);
    if (paramsMatcher2.find() && paramsMatcher2.groupCount() > 0) {
      OAtokenSecret=paramsMatcher2.group(1);
    }
    if (StringUtils.isBlank(OAtoken) && StringUtils.isBlank(OAtokenSecret)) {
      OAtoken="";
      OAtokenSecret="";
      final SharedPreferences.Editor prefs=getSharedPreferences(cgSettings.preferences,0).edit();
      prefs.putString("tokenpublic",null);
      prefs.putString("tokensecret",null);
      prefs.putInt("twitter",0);
      prefs.commit();
    }
 else {
      final SharedPreferences.Editor prefs=getSharedPreferences(cgSettings.preferences,0).edit();
      prefs.remove("temp-token-public");
      prefs.remove("temp-token-secret");
      prefs.putString("tokenpublic",OAtoken);
      prefs.putString("tokensecret",OAtokenSecret);
      prefs.putInt("twitter",1);
      prefs.commit();
      status=1;
    }
  }
 catch (  Exception e) {
    Log.e(cgSettings.tag,"cgeoauth.changeToken: " + e.toString());
  }
  changeTokensHandler.sendEmptyMessage(status);
}
