{
  final int topX=xy.getX() * 4;
  final int topY=xy.getY() * 4;
  final int bitmapWidth=bitmap.getWidth();
  final int bitmapHeight=bitmap.getHeight();
  if ((topX < 0) || (topY < 0) || (topX + 4 > bitmapWidth)|| (topY + 4 > bitmapHeight)) {
    return false;
  }
  int[] pngType=new int[7];
  for (int x=topX; x < topX + 4; x++) {
    for (int y=topY; y < topY + 4; y++) {
      int color=bitmap.getPixel(x,y);
      if ((color & 0xFFFFFF) == 0x5f5f5f) {
        continue;
      }
      if ((color >>> 24) != 255) {
        continue;
      }
      int red=(color & 0xFF0000) >> 16;
      int green=(color & 0xFF00) >> 8;
      int blue=color & 0xFF;
      int type=getCacheTypeFromPixel13(red,green,blue);
      pngType[type]++;
    }
  }
  int type=-1;
  int count=0;
  for (int x=0; x < 7; x++) {
    if (pngType[x] > count) {
      count=pngType[x];
      type=x;
    }
  }
  if (count > 1) {
switch (type) {
case 0:
      cache.setType(CacheType.TRADITIONAL);
    return true;
case 1:
  cache.setType(CacheType.MULTI);
return true;
case 2:
cache.setType(CacheType.MYSTERY);
return true;
case 3:
cache.setType(CacheType.EVENT);
return true;
case 4:
cache.setType(CacheType.EARTH);
return true;
case 5:
cache.setFound(true);
return true;
case 6:
cache.setOwn(true);
return true;
}
}
return false;
}
