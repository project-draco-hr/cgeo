{
  super.onCreate(savedInstanceState,R.layout.logcache_activity);
  final Bundle extras=getIntent().getExtras();
  if (extras != null) {
    geocode=extras.getString(Intents.EXTRA_GEOCODE);
    if (StringUtils.isBlank(geocode)) {
      final String cacheid=extras.getString(Intents.EXTRA_ID);
      if (StringUtils.isNotBlank(cacheid)) {
        geocode=DataStore.getGeocodeForGuid(cacheid);
      }
    }
  }
  cache=DataStore.loadCache(geocode,LoadFlags.LOAD_CACHE_OR_DB);
  invalidateOptionsMenuCompatible();
  possibleLogTypes=cache.getPossibleLogTypes();
  if (StringUtils.isNotBlank(cache.getName())) {
    setTitle(res.getString(R.string.log_new_log) + ": " + cache.getName());
  }
 else {
    setTitle(res.getString(R.string.log_new_log) + ": " + cache.getGeocode());
  }
  initializeRatingBar();
  setDefaultValues();
  if (savedInstanceState != null) {
    rating=savedInstanceState.getFloat(SAVED_STATE_RATING);
    typeSelected=LogType.getById(savedInstanceState.getInt(SAVED_STATE_TYPE));
    date.setTimeInMillis(savedInstanceState.getLong(SAVED_STATE_DATE));
    imageCaption=savedInstanceState.getString(SAVED_STATE_IMAGE_CAPTION);
    imageDescription=savedInstanceState.getString(SAVED_STATE_IMAGE_DESCRIPTION);
    imageUri=Uri.parse(savedInstanceState.getString(SAVED_STATE_IMAGE_URI));
  }
 else {
    final LogEntry log=DataStore.loadLogOffline(geocode);
    if (log != null) {
      typeSelected=log.type;
      date.setTime(new Date(log.date));
      text=log.log;
    }
 else     if (StringUtils.isNotBlank(Settings.getSignature()) && Settings.isAutoInsertSignature() && StringUtils.isBlank(currentLogText())) {
      insertIntoLog(LogTemplateProvider.applyTemplates(Settings.getSignature(),new LogContext(cache,null)),false);
    }
  }
  enablePostButton(false);
  final Button typeButton=ButterKnife.findById(this,R.id.type);
  typeButton.setText(typeSelected.getL10n());
  typeButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    final View view){
      selectLogType();
    }
  }
);
  final Button dateButton=ButterKnife.findById(this,R.id.date);
  setDate(date);
  dateButton.setOnClickListener(new DateListener());
  final EditText logView=ButterKnife.findById(this,R.id.log);
  if (StringUtils.isBlank(currentLogText()) && StringUtils.isNotBlank(text)) {
    logView.setText(text);
    Dialogs.moveCursorToEnd(logView);
  }
  tweetCheck.setChecked(true);
  updateTweetBox(typeSelected);
  updateLogPasswordBox(typeSelected);
  loggingManager=cache.getLoggingManager(this);
  loggingManager.init();
  trackablesConnectors=ConnectorFactory.getGenericTrackablesConnectors();
  for (  final TrackableConnector connector : trackablesConnectors) {
    if (connector.isRegistered()) {
      getSupportLoaderManager().initLoader(connector.getInventoryLoaderId(),null,this).forceLoad();
    }
  }
  requestKeyboardForLogging();
}
