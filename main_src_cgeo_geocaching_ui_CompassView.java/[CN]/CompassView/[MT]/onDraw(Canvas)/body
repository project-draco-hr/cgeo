{
  double azimuthDrawn;
  double headingDrawn;
synchronized (this) {
    azimuthDrawn=azimuthShown;
    headingDrawn=cacheHeadingShown;
  }
  double azimuthTemp=azimuthDrawn;
  double azimuthRelative=(azimuthTemp - headingDrawn) % 360;
  if (azimuthRelative < 0) {
    azimuthRelative+=360;
  }
  int canvasCenterX=(compassRoseWidth / 2) + ((getWidth() - compassRoseWidth) / 2);
  int canvasCenterY=(compassRoseHeight / 2) + ((getHeight() - compassRoseHeight) / 2);
  int marginLeftTemp;
  int marginTopTemp;
  super.onDraw(canvas);
  canvas.save();
  canvas.setDrawFilter(setfil);
  marginLeftTemp=(getWidth() - compassUnderlayWidth) / 2;
  marginTopTemp=(getHeight() - compassUnderlayHeight) / 2;
  canvas.drawBitmap(compassUnderlay,marginLeftTemp,marginTopTemp,null);
  marginLeftTemp=(getWidth() - compassRoseWidth) / 2;
  marginTopTemp=(getHeight() - compassRoseHeight) / 2;
  canvas.rotate((float)-azimuthTemp,canvasCenterX,canvasCenterY);
  canvas.drawBitmap(compassRose,marginLeftTemp,marginTopTemp,null);
  canvas.rotate((float)azimuthTemp,canvasCenterX,canvasCenterY);
  marginLeftTemp=(getWidth() - compassArrowWidth) / 2;
  marginTopTemp=(getHeight() - compassArrowHeight) / 2;
  canvas.rotate((float)-azimuthRelative,canvasCenterX,canvasCenterY);
  canvas.drawBitmap(compassArrow,marginLeftTemp,marginTopTemp,null);
  canvas.rotate((float)azimuthRelative,canvasCenterX,canvasCenterY);
  marginLeftTemp=(getWidth() - compassOverlayWidth) / 2;
  marginTopTemp=(getHeight() - compassOverlayHeight) / 2;
  canvas.drawBitmap(compassOverlay,marginLeftTemp,marginTopTemp,null);
  canvas.setDrawFilter(remfil);
  canvas.restore();
}
