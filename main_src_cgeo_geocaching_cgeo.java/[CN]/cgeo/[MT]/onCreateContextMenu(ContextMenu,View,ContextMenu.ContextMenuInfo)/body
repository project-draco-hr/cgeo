{
  super.onCreateContextMenu(menu,v,menuInfo);
  if (v.getId() == R.id.search_offline) {
    List<StoredList> cacheLists=app.getLists();
    int listCount=cacheLists.size();
    menu.setHeaderTitle(res.getString(R.string.list_title));
    for (    final StoredList list : cacheLists) {
      menu.add(Menu.NONE,MENU_OPEN_LIST + list.id,Menu.NONE,list.getTitleAndCount());
    }
    return;
  }
  menu.setHeaderTitle(res.getString(R.string.menu_filter));
  menu.add(1,0,0,CacheType.ALL.getL10n());
  menu.add(1,1,0,CacheType.TRADITIONAL.getL10n());
  menu.add(1,2,0,CacheType.MULTI.getL10n());
  menu.add(1,3,0,CacheType.MYSTERY.getL10n());
  List<String> sorted=new ArrayList<String>();
  for (  CacheType ct : CacheType.values()) {
    if (ct == CacheType.ALL || ct == CacheType.TRADITIONAL || ct == CacheType.MULTI || ct == CacheType.MYSTERY) {
      continue;
    }
    sorted.add(ct.getL10n());
  }
  Collections.sort(sorted);
  for (  String choice : sorted) {
    menu.add(1,menu.size(),0,choice);
  }
  menu.setGroupCheckable(1,true,true);
  boolean foundItem=false;
  int itemCount=menu.size();
  String typeTitle=Settings.getCacheType().getL10n();
  for (int i=0; i < itemCount; i++) {
    if (menu.getItem(i).getTitle().equals(typeTitle)) {
      menu.getItem(i).setChecked(true);
      foundItem=true;
      break;
    }
  }
  if (!foundItem) {
    menu.getItem(0).setChecked(true);
  }
}
