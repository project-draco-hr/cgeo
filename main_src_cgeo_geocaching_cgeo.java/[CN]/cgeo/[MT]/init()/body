{
  if (initialized) {
    return;
  }
  if (Thread.currentThread().getContextClassLoader() == null) {
    Thread.currentThread().setContextClassLoader(new ClassLoader(){
    }
);
    StringUtils.isNotBlank("haha");
  }
  initialized=true;
  Settings.setLanguage(Settings.isUseEnglish());
  for (  CacheSize cacheSize : CacheSize.values()) {
    cacheSize.setL10n();
  }
  for (  CacheType cacheType : CacheType.values()) {
    cacheType.setL10n();
  }
  for (  LogType logType : LogType.values()) {
    logType.setL10n();
  }
  for (  WaypointType waypointType : WaypointType.values()) {
    waypointType.setL10n();
  }
  for (  Strategy strategy : Strategy.values()) {
    strategy.setL10n();
  }
  Settings.getLogin();
  if (app.firstRun) {
    (new firstLogin()).start();
  }
  if (geo == null) {
    geoUpdate=new UpdateLocation();
    geo=app.startGeo(geoUpdate);
  }
  final View findOnMap=findViewById(R.id.map);
  findOnMap.setClickable(true);
  findOnMap.setOnClickListener(new OnClickListener(){
    public void onClick(    View v){
      cgeoFindOnMap(v);
    }
  }
);
  final View findByOffline=findViewById(R.id.search_offline);
  findByOffline.setClickable(true);
  findByOffline.setOnClickListener(new OnClickListener(){
    public void onClick(    View v){
      cgeoFindByOffline(v);
    }
  }
);
  registerForContextMenu(findByOffline);
  final View advanced=findViewById(R.id.advanced_button);
  advanced.setClickable(true);
  advanced.setOnClickListener(new OnClickListener(){
    public void onClick(    View v){
      cgeoSearch(v);
    }
  }
);
  final View any=findViewById(R.id.any_button);
  any.setClickable(true);
  any.setOnClickListener(new OnClickListener(){
    public void onClick(    View v){
      cgeoPoint(v);
    }
  }
);
  final View filter=findViewById(R.id.filter_button);
  filter.setClickable(true);
  registerForContextMenu(filter);
  filter.setOnClickListener(new View.OnClickListener(){
    public void onClick(    View v){
      openContextMenu(v);
    }
  }
);
  updateCacheCounter();
  setFilterTitle();
  checkRestore();
  (new cleanDatabase()).start();
}
