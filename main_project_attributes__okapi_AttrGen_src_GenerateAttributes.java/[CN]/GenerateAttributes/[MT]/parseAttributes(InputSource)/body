{
  try {
    final SAXParserFactory factory=SAXParserFactory.newInstance();
    final SAXParser saxParser=factory.newSAXParser();
    final DefaultHandler handler=new DefaultHandler(){
      AttrInfo attr;
      ArrayList<String> names;
      boolean readingName;
      @Override public void startElement(      String uri,      String localName,      String qName,      Attributes attributes) throws SAXException {
        if (qName.equalsIgnoreCase("attr")) {
          attr=new AttrInfo();
          names=new ArrayList<String>();
          attr.acode=Integer.parseInt(attributes.getValue("acode").substring(1));
        }
        if (attr != null && qName.equalsIgnoreCase("opencaching")) {
          if ("http://www.opencaching.de/".equalsIgnoreCase(attributes.getValue("schema"))) {
            attr.oc_de_id=Integer.parseInt(attributes.getValue("id"));
          }
 else           if ("http://opencaching.pl/".equalsIgnoreCase(attributes.getValue("schema"))) {
            attr.oc_pl_id=Integer.parseInt(attributes.getValue("id"));
          }
 else           if ("http://www.opencaching.nl/".equalsIgnoreCase(attributes.getValue("schema"))) {
            attr.oc_nl_id=Integer.parseInt(attributes.getValue("id"));
          }
        }
        if (attr != null && qName.equalsIgnoreCase("groundspeak")) {
          attr.gc_id=Integer.parseInt(attributes.getValue("id"));
        }
        if (names != null && qName.equalsIgnoreCase("name")) {
          readingName=true;
        }
      }
      @Override public void endElement(      String uri,      String localName,      String qName) throws SAXException {
        if (attr != null && qName.equalsIgnoreCase("attr")) {
          attr.names=names.toArray(new String[]{});
          names=null;
          writeAttr(attr);
          attr=null;
        }
        readingName=false;
      }
      @Override public void characters(      char ch[],      int start,      int length) throws SAXException {
        if (readingName) {
          names.add(new String(ch,start,length));
        }
      }
    }
;
    saxParser.parse(stream,handler);
  }
 catch (  final Exception e) {
    e.printStackTrace();
  }
}
