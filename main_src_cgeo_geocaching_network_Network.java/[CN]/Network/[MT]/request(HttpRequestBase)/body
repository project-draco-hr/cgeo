{
  request.setHeader("Accept-Charset","utf-8,iso-8859-1;q=0.8,utf-16;q=0.8,*;q=0.7");
  request.setHeader("Accept-Language","en-US,*;q=0.9");
  request.setHeader("X-Requested-With","XMLHttpRequest");
  request.getParams().setParameter(CoreProtocolPNames.USER_AGENT,USER_AGENT);
  final String reqLogStr=request.getMethod() + " " + Network.hidePassword(request.getURI().toString());
  Log.d(reqLogStr);
  final HttpClient client=Network.getHttpClient();
  for (int i=0; i <= Network.NB_DOWNLOAD_RETRIES; i++) {
    final long before=System.currentTimeMillis();
    try {
      final HttpResponse response=client.execute(request);
      int status=response.getStatusLine().getStatusCode();
      if (status == 200) {
        Log.d(status + Network.formatTimeSpan(before) + reqLogStr);
      }
 else {
        Log.w(status + " [" + response.getStatusLine().getReasonPhrase()+ "]"+ Network.formatTimeSpan(before)+ reqLogStr);
      }
      return response;
    }
 catch (    IOException e) {
      final String timeSpan=Network.formatTimeSpan(before);
      final String tries=(i + 1) + "/" + (Network.NB_DOWNLOAD_RETRIES + 1);
      if (i == Network.NB_DOWNLOAD_RETRIES) {
        Log.e("Failure " + tries + timeSpan+ reqLogStr,e);
      }
 else {
        Log.e("Failure " + tries + " ("+ e.toString()+ ")"+ timeSpan+ "- retrying "+ reqLogStr);
      }
    }
  }
  return null;
}
