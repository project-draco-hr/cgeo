{
  String referer=GCConstants.URL_LIVE_MAP;
  final SearchResult searchResult=new SearchResult();
  searchResult.setUrl(referer + "?ll=" + viewport.getCenter().getLatitude()+ ","+ viewport.getCenter().getLongitude());
  List<Tile> tiles=getTilesForViewport(viewport);
  for (  Tile tile : tiles) {
    String url="?x=" + tile.getX() + "&y="+ tile.getY()+ "&z="+ tile.getZoomlevel();
    if (tile.getZoomlevel() != 14) {
      url+="&_=" + String.valueOf(System.currentTimeMillis());
    }
    cgBase.requestMapTile(GCConstants.URL_MAP_TILE + url,referer);
    String data=cgBase.requestMapInfo(GCConstants.URL_MAP_INFO + url,referer);
    if (StringUtils.isEmpty(data)) {
      Log.e(Settings.tag,"GCBase.searchByViewport: No data from server for tile (" + tile.getX() + "/"+ tile.getY()+ ")");
    }
 else {
      final SearchResult search=parseMapJSON(data,tile);
      if (search == null || CollectionUtils.isEmpty(search.getGeocodes())) {
        Log.e(Settings.tag,"GCBase.searchByViewport: No cache parsed for viewport " + viewport);
      }
      searchResult.addGeocodes(search.getGeocodes());
    }
  }
  return searchResult;
}
