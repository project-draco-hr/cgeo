{
  final SearchResult searchResult=new SearchResult();
  searchResult.setUrl(url);
  try {
    if (StringUtils.isEmpty(page)) {
      throw new JSONException("No page given");
    }
    final JSONObject json=new JSONObject(page);
    final JSONArray grid=json.getJSONArray("grid");
    if (grid == null || grid.length() != 64) {
      throw new JSONException("No grid inside JSON");
    }
    final JSONArray keys=json.getJSONArray("keys");
    if (keys == null) {
      throw new JSONException("No keys inside JSON");
    }
    final JSONObject dataObject=json.getJSONObject("data");
    if (dataObject == null) {
      throw new JSONException("No data inside JSON");
    }
    for (int y=0; y < grid.length(); y++) {
      byte[] row=grid.getString(y).getBytes();
      for (int x=0; x < row.length; x++) {
        byte id=getUTFGridId(row[x]);
        if (id > 0) {
          Log.d(Settings.tag,"(" + x + "/"+ y+ ") ="+ String.valueOf(id));
        }
      }
    }
    for (int i=0; i < keys.length(); i++) {
      String key=keys.getString(i);
      Log.d(Settings.tag,"Key #" + i + "="+ key);
      if (StringUtils.isNotBlank(key)) {
        JSONArray dataForKey=dataObject.getJSONArray(key);
        for (int j=0; j < dataForKey.length(); j++) {
          JSONObject cacheInfo=dataForKey.getJSONObject(j);
          String id=cacheInfo.getString("i");
          String name=cacheInfo.getString("n");
          final cgCache cacheToAdd=new cgCache();
          cacheToAdd.setDetailed(false);
          cacheToAdd.setReliableLatLon(false);
          cacheToAdd.setGeocode(id);
          cacheToAdd.setCoords(getCoordsForUTFGrid(key));
          cacheToAdd.setName(name);
          cacheToAdd.setType(CacheType.GC_LIVE_MAP);
          Log.d(Settings.tag,"key=" + key + " id="+ id+ " name="+ name);
          searchResult.addCache(cacheToAdd);
        }
      }
    }
  }
 catch (  Exception e) {
    Log.e(Settings.tag,"cgBase.parseMapJSON",e);
  }
  return searchResult;
}
