{
  final boolean googlePlayServicesAvailable=CgeoApplication.getInstance().isGooglePlayServicesAvailable();
  final StringBuilder body=new StringBuilder("--- System information ---").append("\nDevice: ").append(Build.MODEL).append(" (").append(Build.PRODUCT).append(", ").append(Build.BRAND).append(")").append("\nAndroid version: ").append(VERSION.RELEASE).append("\nAndroid build: ").append(Build.DISPLAY).append("\nCgeo version: ").append(Version.getVersionName(context)).append("\nGoogle Play services: ").append(googlePlayServicesAvailable ? (Settings.useGooglePlayServices() ? "enabled" : "disabled") : "unavailable").append("\nLow power mode: ").append(Settings.useLowPowerMode() ? "active" : "inactive").append("\nCompass capabilities: ").append(Sensors.getInstance().hasCompassCapabilities() ? "yes" : "no").append("\nRotation sensor: ").append(presence(RotationProvider.hasRotationSensor(context))).append("\nGeomagnetic rotation sensor: ").append(presence(RotationProvider.hasGeomagneticRotationSensor(context))).append("\nOrientation sensor: ").append(presence(OrientationProvider.hasOrientationSensor(context))).append("\nHide own/found: ").append(Settings.isExcludeMyCaches()).append("\nMap strategy: ").append(Settings.getLiveMapStrategy());
  for (  final ILogin connector : ConnectorFactory.getActiveLiveConnectors()) {
    body.append('\n').append(connector.getName()).append(": ").append(connector.isLoggedIn() ? "logged in" : "not logged in").append(" (").append(connector.getLoginStatusString()).append(')');
    if (connector.getName().equals("geocaching.com") && connector.isLoggedIn()) {
      body.append(" / ").append(Settings.getGCMemberStatus());
    }
  }
  body.append("\n--- End of system information ---\n");
  return body.toString();
}
