{
  final double span=mapView.getLongitudeSpan() / 1e6;
  final GeoPointImpl center=mapView.getMapViewCenter();
  pixels=mapView.getWidth() / 2.0;
  bottom=mapView.getHeight() - 14;
  final Geopoint leftCoords=new Geopoint(center.getLatitudeE6() / 1e6,center.getLongitudeE6() / 1e6 - span / 2);
  final Geopoint rightCoords=new Geopoint(center.getLatitudeE6() / 1e6,center.getLongitudeE6() / 1e6 + span / 2);
  distance=cgBase.getDistance(leftCoords,rightCoords);
  distance=distance / 2;
  distanceRound=0d;
  if (settings.units == cgSettings.unitsImperial) {
    distance*=cgBase.kmInMiles;
    if (distance > 100) {
      distanceRound=Math.floor(distance / 100) * 100;
      units="mi";
    }
 else     if (distance > 10) {
      distanceRound=Math.floor(distance / 10) * 10;
      units="mi";
    }
 else     if (distance > 1) {
      distanceRound=Math.floor(distance);
      units="mi";
    }
 else     if (distance > 0.1) {
      distance*=5280;
      distanceRound=Math.floor(distance / 100) * 100;
      units="ft";
    }
 else {
      distance*=5280;
      distanceRound=Math.round(distance / 10) * 10;
      units="ft";
    }
  }
 else {
    if (distance > 100) {
      distanceRound=Math.floor(distance / 100) * 100;
      units="km";
    }
 else     if (distance > 10) {
      distanceRound=Math.floor(distance / 10) * 10;
      units="km";
    }
 else     if (distance > 1) {
      distanceRound=Math.floor(distance);
      units="km";
    }
 else     if (distance > 0.1) {
      distance*=1000;
      distanceRound=Math.floor(distance / 100) * 100;
      units="m";
    }
 else {
      distance*=1000;
      distanceRound=Math.round(distance / 10) * 10;
      units="m";
    }
  }
  pixels=Math.round((pixels / distance) * distanceRound);
  if (blur == null) {
    blur=new BlurMaskFilter(3,BlurMaskFilter.Blur.NORMAL);
  }
  if (scaleShadow == null) {
    scaleShadow=new Paint();
    scaleShadow.setAntiAlias(true);
    scaleShadow.setStrokeWidth(4 * pixelDensity);
    scaleShadow.setMaskFilter(blur);
    scaleShadow.setTextSize(14 * pixelDensity);
    scaleShadow.setTypeface(Typeface.DEFAULT_BOLD);
  }
  if (scale == null) {
    scale=new Paint();
    scale.setAntiAlias(true);
    scale.setStrokeWidth(2 * pixelDensity);
    scale.setTextSize(14 * pixelDensity);
    scale.setTypeface(Typeface.DEFAULT_BOLD);
  }
  if (mapSourceEnum.googleSat == settings.mapSource) {
    scaleShadow.setColor(0xFF000000);
    scale.setColor(0xFFFFFFFF);
  }
 else {
    scaleShadow.setColor(0xFFFFFFFF);
    scale.setColor(0xFF000000);
  }
  canvas.drawLine(10,bottom,10,(bottom - (8 * pixelDensity)),scaleShadow);
  canvas.drawLine((int)(pixels + 10),bottom,(int)(pixels + 10),(bottom - (8 * pixelDensity)),scaleShadow);
  canvas.drawLine(8,bottom,(int)(pixels + 12),bottom,scaleShadow);
  canvas.drawText(String.format("%.0f",distanceRound) + " " + units,(float)(pixels - (10 * pixelDensity)),(bottom - (10 * pixelDensity)),scaleShadow);
  canvas.drawLine(11,bottom,11,(bottom - (6 * pixelDensity)),scale);
  canvas.drawLine((int)(pixels + 9),bottom,(int)(pixels + 9),(bottom - (6 * pixelDensity)),scale);
  canvas.drawLine(10,bottom,(int)(pixels + 10),bottom,scale);
  canvas.drawText(String.format("%.0f",distanceRound) + " " + units,(float)(pixels - (10 * pixelDensity)),(bottom - (10 * pixelDensity)),scale);
}
