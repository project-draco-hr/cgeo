{
  LinearLayout rows=new LinearLayout(this);
  rows.setLayoutParams(new LayoutParams(LayoutParams.FILL_PARENT,LayoutParams.WRAP_CONTENT));
  rows.setOrientation(LinearLayout.VERTICAL);
  LinearLayout attributeRow=newAttributeIconsRow();
  rows.addView(attributeRow);
  noAttributeIconsFound=true;
  for (  String attributeName : cache.getAttributes()) {
    boolean strikethru=attributeName.endsWith("_no");
    if (attributeName.endsWith("_no") || attributeName.endsWith("_yes")) {
      attributeName=attributeName.substring(0,attributeName.lastIndexOf("_"));
    }
    attributeRow.measure(0,0);
    int rowWidth=attributeRow.getMeasuredWidth();
    FrameLayout fl=(FrameLayout)inflater.inflate(R.layout.attribute_image,null);
    ImageView iv=(ImageView)fl.getChildAt(0);
    if ((parentWidth - rowWidth) < iv.getLayoutParams().width) {
      attributeRow=newAttributeIconsRow();
      rows.addView(attributeRow);
    }
    Drawable d=null;
    int id=res.getIdentifier("attribute_" + attributeName,"drawable",base.context.getPackageName());
    if (id > 0) {
      noAttributeIconsFound=false;
      d=res.getDrawable(id);
      iv.setImageDrawable(d);
      if (strikethru) {
        ImageView strikethruImage=new ImageView(this);
        strikethruImage.setLayoutParams(iv.getLayoutParams());
        d=res.getDrawable(R.drawable.attribute__strikethru);
        strikethruImage.setImageDrawable(d);
        fl.addView(strikethruImage);
      }
    }
 else {
      d=res.getDrawable(R.drawable.attribute_icon_not_found);
      iv.setImageDrawable(d);
    }
    attributeRow.addView(fl);
  }
  return rows;
}
