{
  if (MapUtils.isEmpty(calendars)) {
    return;
  }
  try {
    Uri calendarProvider=Compatibility.getCalenderEventsProviderURI();
    final Integer[] keys=calendars.keySet().toArray(new Integer[calendars.size()]);
    final Integer calId=keys[index];
    final Date eventDate=cache.hidden;
    eventDate.setHours(0);
    eventDate.setMinutes(0);
    eventDate.setSeconds(0);
    StringBuilder description=new StringBuilder();
    description.append(cache.getUrl());
    description.append("\n\n");
    if (StringUtils.isNotBlank(cache.shortdesc)) {
      description.append(Html.fromHtml(cache.shortdesc).toString());
    }
    if (StringUtils.isNotBlank(cache.personalNote)) {
      description.append("\n\n" + Html.fromHtml(cache.personalNote).toString());
    }
    ContentValues event=new ContentValues();
    event.put("calendar_id",calId);
    event.put("dtstart",eventDate.getTime() + 43200000);
    event.put("dtend",eventDate.getTime() + 43200000 + 3600000);
    event.put("eventTimezone","UTC");
    event.put("title",Html.fromHtml(cache.name).toString());
    event.put("description",description.toString());
    String location="";
    if (cache.coords != null) {
      location+=cache.getLatitude() + " " + cache.getLongitude();
    }
    if (StringUtils.isNotBlank(cache.location)) {
      boolean addParenteses=false;
      if (location.length() > 0) {
        addParenteses=true;
        location+=" (";
      }
      location+=Html.fromHtml(cache.location).toString();
      if (addParenteses) {
        location+=")";
      }
    }
    if (location.length() > 0) {
      event.put("eventLocation",location);
    }
    event.put("allDay",1);
    event.put("hasAlarm",0);
    getContentResolver().insert(calendarProvider,event);
    showToast(res.getString(R.string.event_success));
  }
 catch (  Exception e) {
    showToast(res.getString(R.string.event_fail));
    Log.e(Settings.tag,"cgeodetail.addToCalendarFn: " + e.toString());
  }
}
