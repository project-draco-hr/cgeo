{
  final Tile tile=new Tile(new Geopoint("N49 44.0 E8 37.0"),14);
  final Set<Tile> tiles=new HashSet<Tile>();
  tiles.add(tile);
  final Geocache main=new Geocache();
  main.setGeocode("GC12345");
  main.setCoords(new Geopoint("N49 44.0 E8 37.0"));
  final Geocache inTileLowZoom=new Geocache();
  inTileLowZoom.setGeocode("GC12346");
  inTileLowZoom.setCoords(new Geopoint("N49 44.001 E8 37.001"),Tile.ZOOMLEVEL_MIN_PERSONALIZED - 5);
  final Geocache outTile=new Geocache();
  outTile.setGeocode("GC12347");
  outTile.setCoords(new Geopoint(tile.getViewport().getLatitudeMin() - 0.1,tile.getViewport().getLongitudeMin() - 0.1));
  final Geocache otherConnector=new Geocache();
  otherConnector.setGeocode("OC0001");
  otherConnector.setCoords(new Geopoint("N49 44.0 E8 37.0"));
  final Geocache inTileHighZoom=new Geocache();
  inTileHighZoom.setGeocode("GC12348");
  inTileHighZoom.setCoords(new Geopoint("N49 44.001 E8 37.001"),Tile.ZOOMLEVEL_MIN_PERSONALIZED + 1);
  DataStore.saveCache(main,EnumSet.of(SaveFlag.SAVE_CACHE));
  DataStore.saveCache(inTileLowZoom,EnumSet.of(SaveFlag.SAVE_CACHE));
  DataStore.saveCache(inTileHighZoom,EnumSet.of(SaveFlag.SAVE_CACHE));
  DataStore.saveCache(outTile,EnumSet.of(SaveFlag.SAVE_CACHE));
  DataStore.saveCache(otherConnector,EnumSet.of(SaveFlag.SAVE_CACHE));
  final SearchResult search=new SearchResult(main);
  Set<String> filteredGeoCodes=DataStore.getCachedMissingFromSearch(search,tiles,GCConnector.getInstance(),Tile.ZOOMLEVEL_MIN_PERSONALIZED - 1);
  assertThat(filteredGeoCodes.contains(inTileLowZoom.getGeocode())).isTrue();
  assertThat(filteredGeoCodes.contains(inTileHighZoom.getGeocode())).isFalse();
  assertThat(filteredGeoCodes.contains(otherConnector.getGeocode())).isFalse();
  assertThat(filteredGeoCodes.contains(outTile.getGeocode())).isFalse();
  assertThat(filteredGeoCodes.contains(main.getGeocode())).isFalse();
}
