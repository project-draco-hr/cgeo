{
  final Integer gkid;
  if (StringUtils.startsWithIgnoreCase(geocode,"GK")) {
    gkid=getId(geocode);
  }
 else {
    Log.d("GeokretyConnector.searchTrackable: geocode=" + geocode);
    final String geocodeFound=getGeocodeFromTrackingCode(geocode);
    if (geocodeFound == null) {
      Log.d("GeokretyConnector.searchTrackable: Unable to retrieve trackable by TrackingCode");
      return null;
    }
    gkid=getId(geocodeFound);
  }
  Log.d("GeokretyConnector.searchTrackable: gkid=" + gkid);
  try {
    final String urlDetails=Settings.isGeokretyCacheActive() ? URLPROXY + "/export-details.php" : URL + "/export2.php";
    final InputStream response=Network.getResponseStream(Network.getRequest(urlDetails + "?gkid=" + gkid));
    if (response == null) {
      Log.d("GeokretyConnector.searchTrackable: No data from server");
      return null;
    }
    final InputSource is=new InputSource(response);
    final List<Trackable> trackables=GeokretyParser.parse(is);
    if (CollectionUtils.isNotEmpty(trackables)) {
      final Trackable trackable=trackables.get(0);
      DataStore.saveTrackable(trackable);
      return trackable;
    }
  }
 catch (  final Exception e) {
    Log.w("GeokretyConnector.searchTrackable",e);
  }
  return null;
}
