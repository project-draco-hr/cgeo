{
  try {
    if (msg.what == 1) {
      final AlertDialog.Builder dlg=new AlertDialog.Builder(activity);
      final LayoutInflater inflater=activity.getLayoutInflater();
      final View view=inflater.inflate(R.layout.recaptcha_dialog,null);
      imageView=(ImageView)view.findViewById(R.id.image);
      ImageButton reloadButton=(ImageButton)view.findViewById(R.id.button_recaptcha_refresh);
      reloadButton.setOnClickListener(new View.OnClickListener(){
        @Override public void onClick(        View v){
          recaptchaThread.fetchChallenge();
          try {
            (new GetCaptchaThread(new URL("http://www.google.com/recaptcha/api/image?c=" + recaptchaThread.getChallenge()))).start();
          }
 catch (          MalformedURLException e) {
            Log.e("Bad reCAPTCHA image url",e);
          }
        }
      }
);
      (new GetCaptchaThread(new URL("http://www.google.com/recaptcha/api/image?c=" + recaptchaThread.getChallenge()))).start();
      dlg.setTitle(res.getString(R.string.caches_recaptcha_title));
      dlg.setView(view);
      dlg.setNeutralButton(res.getString(R.string.caches_recaptcha_continue),new DialogInterface.OnClickListener(){
        @Override public void onClick(        DialogInterface dialog,        int id){
          final String text=((EditText)view.findViewById(R.id.text)).getText().toString();
          recaptchaThread.setText(text);
          dialog.cancel();
        }
      }
);
      dlg.create().show();
    }
  }
 catch (  Exception e) {
    Log.e("Error in reCAPTCHA handler",e);
  }
}
