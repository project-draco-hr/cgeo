{
  final int iLen=in.length;
  final int oDataLen=(iLen * 4 + 2) / 3;
  final int oLen=((iLen + 2) / 3) * 4;
  final char[] out=new char[oLen];
  int ip=0;
  int op=0;
  while (ip < iLen) {
    final int i0=in[ip++] & 0xff;
    final int i1=ip < iLen ? in[ip++] & 0xff : 0;
    final int i2=ip < iLen ? in[ip++] & 0xff : 0;
    final int o0=i0 >>> 2;
    final int o1=((i0 & 3) << 4) | (i1 >>> 4);
    final int o2=((i1 & 0xf) << 2) | (i2 >>> 6);
    final int o3=i2 & 0x3F;
    out[op++]=BASE64MAP1[o0];
    out[op++]=BASE64MAP1[o1];
    out[op]=op < oDataLen ? BASE64MAP1[o2] : '=';
    op++;
    out[op]=op < oDataLen ? BASE64MAP1[o3] : '=';
    op++;
  }
  return new String(out);
}
