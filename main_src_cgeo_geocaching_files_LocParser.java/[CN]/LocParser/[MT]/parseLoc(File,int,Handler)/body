{
  final cgSearch search=new cgSearch();
  try {
    final Map<String,cgCoord> coords=parseCoordinates(readFile(file).toString());
    final cgCacheWrap caches=new cgCacheWrap();
    for (    Entry<String,cgCoord> entry : coords.entrySet()) {
      cgCoord coord=entry.getValue();
      if (StringUtils.isBlank(coord.geocode) || StringUtils.isBlank(coord.name)) {
        continue;
      }
      cgCache cache=new cgCache();
      copyCoordToCache(coord,cache);
      caches.cacheList.add(cache);
      fixCache(cache);
      cache.reason=listId;
      cache.detailed=false;
      cgeoapplication.getInstance().addCacheToSearch(search,cache);
    }
    caches.totalCnt=caches.cacheList.size();
    showCountMessage(handler,search.getCount());
    Log.i(cgSettings.tag,"Caches found in .gpx file: " + caches.totalCnt);
  }
 catch (  Exception e) {
    Log.e(cgSettings.tag,"cgBase.parseGPX: " + e.toString());
  }
  return search.getCurrentId();
}
