{
  final cgSearch search=new cgSearch();
  try {
    final Map<String,cgCoord> coords=parseCoordinates(readFile(file).toString());
    final cgCacheWrap caches=new cgCacheWrap();
    for (    Entry<String,cgCoord> entry : coords.entrySet()) {
      cgCoord coord=entry.getValue();
      if (StringUtils.isBlank(coord.getGeocode()) || StringUtils.isBlank(coord.getName())) {
        continue;
      }
      cgCache cache=new cgCache();
      copyCoordToCache(coord,cache);
      caches.cacheList.add(cache);
      fixCache(cache);
      cache.setCacheType(CacheType.UNKNOWN);
      cache.setReason(listId);
      cache.setDetailed(true);
      cgeoapplication.getInstance().addCacheToSearch(search,cache);
    }
    caches.totalCnt=caches.cacheList.size();
    showCountMessage(handler,R.string.gpx_import_loading_stored,search.getCount());
    Log.i(Settings.tag,"Caches found in .loc file: " + caches.totalCnt);
  }
 catch (  Exception e) {
    Log.e(Settings.tag,"LocParser.parseLoc: " + e.toString());
  }
  return search;
}
