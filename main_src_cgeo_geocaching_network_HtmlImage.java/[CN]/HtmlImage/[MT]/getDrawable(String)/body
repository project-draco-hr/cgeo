{
  if (StringUtils.isBlank(url) || isCounter(url)) {
    return new BitmapDrawable(getTransparent1x1Image());
  }
  Bitmap imagePre=onlySave ? null : loadImageFromStorage(url);
  if (imagePre == null || onlySave) {
    final String absoluteURL=makeAbsoluteURL(url);
    if (absoluteURL != null) {
      try {
        final File file=LocalStorage.getStorageFile(geocode,url,true,true);
        final HttpResponse httpResponse=Network.request(absoluteURL,null,file);
        if (httpResponse != null) {
          final int statusCode=httpResponse.getStatusLine().getStatusCode();
          if (statusCode == 200) {
            LocalStorage.saveEntityToFile(httpResponse,file);
          }
 else           if (statusCode == 304) {
            file.setLastModified(System.currentTimeMillis());
          }
        }
      }
 catch (      Exception e) {
        Log.e("HtmlImage.getDrawable (downloading from web)",e);
      }
    }
  }
  if (onlySave) {
    return null;
  }
  if (imagePre == null) {
    imagePre=loadImageFromStorage(url);
  }
  if (imagePre == null) {
    Log.d("HtmlImage.getDrawable: Failed to obtain image");
    if (returnErrorImage) {
      imagePre=BitmapFactory.decodeResource(context.getResources(),R.drawable.image_not_loaded);
    }
 else {
      imagePre=getTransparent1x1Image();
    }
  }
  final int imgWidth=imagePre.getWidth();
  final int imgHeight=imagePre.getHeight();
  int width;
  int height;
  if (imgWidth > maxWidth || imgHeight > maxHeight) {
    final double ratio=Math.min((double)maxHeight / (double)imgHeight,(double)maxWidth / (double)imgWidth);
    width=(int)Math.ceil(imgWidth * ratio);
    height=(int)Math.ceil(imgHeight * ratio);
    try {
      imagePre=Bitmap.createScaledBitmap(imagePre,width,height,true);
    }
 catch (    Exception e) {
      Log.d("HtmlImage.getDrawable: Failed to scale image");
      return null;
    }
  }
 else {
    width=imgWidth;
    height=imgHeight;
  }
  final BitmapDrawable image=new BitmapDrawable(imagePre);
  image.setBounds(new Rect(0,0,width,height));
  return image;
}
