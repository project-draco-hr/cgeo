{
  if (StringUtils.isBlank(url) || isCounter(url)) {
    return new BitmapDrawable(resources,getTransparent1x1Image());
  }
  final boolean shared=url.contains("/images/icons/icon_");
  final String pseudoGeocode=shared ? "shared" : geocode;
  Bitmap imagePre=loadImageFromStorage(url,pseudoGeocode,shared);
  if (imagePre == null) {
    final String absoluteURL=makeAbsoluteURL(url);
    if (absoluteURL != null) {
      try {
        final File file=LocalStorage.getStorageFile(pseudoGeocode,url,true,true);
        final HttpResponse httpResponse=Network.getRequest(absoluteURL,null,file);
        if (httpResponse != null) {
          final int statusCode=httpResponse.getStatusLine().getStatusCode();
          if (statusCode == 200) {
            LocalStorage.saveEntityToFile(httpResponse,file);
          }
 else           if (statusCode == 304) {
            if (!file.setLastModified(System.currentTimeMillis())) {
              makeFreshCopy(file);
            }
          }
        }
      }
 catch (      Exception e) {
        Log.e("HtmlImage.getDrawable (downloading from web)",e);
      }
    }
  }
  if (onlySave) {
    return null;
  }
  if (imagePre == null) {
    imagePre=loadImageFromStorage(url,pseudoGeocode,shared);
  }
  if (imagePre == null) {
    Log.d("HtmlImage.getDrawable: Failed to obtain image");
    if (returnErrorImage) {
      imagePre=BitmapFactory.decodeResource(resources,R.drawable.image_not_loaded);
    }
 else {
      imagePre=getTransparent1x1Image();
    }
  }
  return imagePre != null ? ImageHelper.scaleBitmapToFitDisplay(imagePre) : null;
}
