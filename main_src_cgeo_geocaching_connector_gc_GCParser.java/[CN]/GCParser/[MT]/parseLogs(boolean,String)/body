{
  return Observable.create(new OnSubscribe<LogEntry>(){
    @Override public void call(    final Subscriber<? super LogEntry> subscriber){
      if (StringUtils.isBlank(rawResponse)) {
        subscriber.onCompleted();
        return;
      }
      try {
        final JSONObject resp=new JSONObject(rawResponse);
        if (!resp.getString("status").equals("success")) {
          Log.e("GCParser.loadLogsFromDetails: status is " + resp.getString("status"));
          subscriber.onCompleted();
          return;
        }
        final JSONArray data=resp.getJSONArray("data");
        for (int index=0; index < data.length(); index++) {
          final JSONObject entry=data.getJSONObject(index);
          final String logIconNameExt=entry.optString("LogTypeImage",".gif");
          final String logIconName=logIconNameExt.substring(0,logIconNameExt.length() - 4);
          long date=0;
          try {
            date=GCLogin.parseGcCustomDate(entry.getString("Visited")).getTime();
          }
 catch (          final ParseException e) {
            Log.e("GCParser.loadLogsFromDetails: failed to parse log date.");
          }
          final String latLon=entry.getString("LatLonString");
          final String logText=(StringUtils.isEmpty(latLon) ? "" : (latLon + "<br/><br/>")) + TextUtils.removeControlCharacters(entry.getString("LogText"));
          final LogEntry logDone=new LogEntry(TextUtils.removeControlCharacters(entry.getString("UserName")),date,LogType.getByIconName(logIconName),logText);
          logDone.found=entry.getInt("GeocacheFindCount");
          logDone.friend=markAsFriendsLog;
          final JSONArray images=entry.getJSONArray("Images");
          for (int i=0; i < images.length(); i++) {
            final JSONObject image=images.getJSONObject(i);
            final String url="http://imgcdn.geocaching.com/cache/log/large/" + image.getString("FileName");
            final String title=TextUtils.removeControlCharacters(image.getString("Name"));
            final Image logImage=new Image(url,title);
            logDone.addLogImage(logImage);
          }
          subscriber.onNext(logDone);
        }
      }
 catch (      final JSONException e) {
        Log.w("GCParser.loadLogsFromDetails: Failed to parse cache logs",e);
      }
      subscriber.onCompleted();
    }
  }
);
}
