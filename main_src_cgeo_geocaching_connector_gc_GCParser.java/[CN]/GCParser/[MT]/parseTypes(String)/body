{
  if (StringUtils.isEmpty(page)) {
    return null;
  }
  final List<LogType> types=new ArrayList<LogType>();
  final MatcherWrapper typeBoxMatcher=new MatcherWrapper(GCConstants.PATTERN_TYPEBOX,page);
  String typesText=null;
  if (typeBoxMatcher.find()) {
    if (typeBoxMatcher.groupCount() > 0) {
      typesText=typeBoxMatcher.group(1);
    }
  }
  if (typesText != null) {
    final MatcherWrapper typeMatcher=new MatcherWrapper(GCConstants.PATTERN_TYPE2,typesText);
    while (typeMatcher.find()) {
      if (typeMatcher.groupCount() > 1) {
        try {
          int type=Integer.parseInt(typeMatcher.group(2));
          if (type > 0) {
            types.add(LogType.getById(type));
          }
        }
 catch (        NumberFormatException e) {
          Log.e("Error parsing log types",e);
        }
      }
    }
  }
  return types;
}
