{
  final String uri=new Uri.Builder().scheme("http").authority("www.geocaching.com").path("/seek/upload.aspx").encodedQuery("LID=" + logId).build().toString();
  final String page=Login.getRequestLogged(uri,null);
  if (StringUtils.isBlank(page)) {
    Log.e("GCParser.uploadLogImage: No data from server");
    return new ImmutablePair<StatusCode,String>(StatusCode.UNKNOWN_ERROR,null);
  }
  final String[] viewstates=Login.getViewstates(page);
  final Parameters uploadParams=new Parameters("__EVENTTARGET","","__EVENTARGUMENT","","ctl00$ContentBody$ImageUploadControl1$uxFileCaption",caption,"ctl00$ContentBody$ImageUploadControl1$uxFileDesc",description,"ctl00$ContentBody$ImageUploadControl1$uxUpload","Upload");
  Login.putViewstates(uploadParams,viewstates);
  final File image=new File(imageUri.getPath());
  final String response=Network.getResponseData(Network.postRequest(uri,uploadParams,"ctl00$ContentBody$ImageUploadControl1$uxFileUpload","image/jpeg",image));
  final MatcherWrapper matcherUrl=new MatcherWrapper(GCConstants.PATTERN_IMAGE_UPLOAD_URL,response);
  if (matcherUrl.find()) {
    Log.i("Logimage successfully uploaded.");
    final String uploadedImageUrl=matcherUrl.group(1);
    return ImmutablePair.of(StatusCode.NO_ERROR,uploadedImageUrl);
  }
  Log.e("GCParser.uploadLogIMage: Failed to upload image because of unknown error");
  return ImmutablePair.of(StatusCode.LOGIMAGE_POST_ERROR,null);
}
