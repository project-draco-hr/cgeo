{
  if (StringUtils.isEmpty(page)) {
    return Collections.emptyList();
  }
  String table=StringUtils.substringBetween(page,"<table id=\"tblTravelBugs\"","</table>");
  if (StringUtils.isBlank(table)) {
    return Collections.emptyList();
  }
  table=StringUtils.substringBetween(table,"<tbody>","</tbody>");
  if (StringUtils.isBlank(table)) {
    Log.e("GCParser.parseTrackableLog: tbody not found on page");
    return Collections.emptyList();
  }
  final List<TrackableLog> trackableLogs=new ArrayList<>();
  final MatcherWrapper trackableMatcher=new MatcherWrapper(GCConstants.PATTERN_TRACKABLE,page);
  while (trackableMatcher.find()) {
    if (trackableMatcher.groupCount() > 0) {
      final String trackCode=trackableMatcher.group(1);
      final String name=Html.fromHtml(trackableMatcher.group(2)).toString();
      try {
        final Integer ctl=Integer.valueOf(trackableMatcher.group(3));
        final Integer id=Integer.valueOf(trackableMatcher.group(5));
        if (trackCode != null && ctl != null && id != null) {
          final TrackableLog entry=new TrackableLog(trackCode,name,id,ctl);
          Log.i("Trackable in inventory (#" + entry.ctl + "/"+ entry.id+ "): "+ entry.trackCode+ " - "+ entry.name);
          trackableLogs.add(entry);
        }
      }
 catch (      final NumberFormatException e) {
        Log.e("GCParser.parseTrackableLog",e);
      }
    }
  }
  return trackableLogs;
}
