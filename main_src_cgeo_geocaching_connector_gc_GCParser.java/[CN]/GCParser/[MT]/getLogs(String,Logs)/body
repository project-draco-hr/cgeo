{
  if (userToken.isEmpty()) {
    Log.e("GCParser.loadLogsFromDetails: unable to extract userToken");
    return Observable.empty();
  }
  return Observable.defer(new Func0<Observable<LogEntry>>(){
    @Override public Observable<LogEntry> call(){
      final Parameters params=new Parameters("tkn",userToken,"idx","1","num",String.valueOf(GCConstants.NUMBER_OF_LOGS),"decrypt","false");
      if (logType != Logs.ALL) {
        params.add(logType.getParamName(),Boolean.toString(Boolean.TRUE));
      }
      try {
        final InputStream responseStream=Network.getResponseStream(Network.getRequest("https://www.geocaching.com/seek/geocache.logbook",params));
        return parseLogs(logType != Logs.ALL,responseStream);
      }
 catch (      final Exception e) {
        Log.e("unable to read logs",e);
        return Observable.empty();
      }
    }
  }
).subscribeOn(AndroidRxUtils.networkScheduler);
}
