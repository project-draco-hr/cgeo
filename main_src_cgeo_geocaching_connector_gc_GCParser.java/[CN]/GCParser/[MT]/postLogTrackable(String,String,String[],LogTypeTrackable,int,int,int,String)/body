{
  if (GCLogin.isEmpty(viewstates)) {
    Log.e("GCParser.postLogTrackable: No viewstate given");
    return StatusCode.LOG_POST_ERROR;
  }
  if (StringUtils.isBlank(log)) {
    Log.e("GCParser.postLogTrackable: No log text given");
    return StatusCode.NO_LOG_TEXT;
  }
  Log.i("Trying to post log for trackable #" + trackingCode + " - action: "+ logType+ "; date: "+ year+ "."+ month+ "."+ day+ ", log: "+ log);
  final String logInfo=log.replace("\n","\r\n");
  final Parameters params=new Parameters("__EVENTTARGET","","__EVENTARGUMENT","","__LASTFOCUS","","ctl00$ContentBody$LogBookPanel1$ddLogType",Integer.toString(logType.id),"ctl00$ContentBody$LogBookPanel1$tbCode",trackingCode,"ctl00$ContentBody$LogBookPanel1$DateTimeLogged",Integer.toString(month) + "/" + Integer.toString(day)+ "/"+ Integer.toString(year),"ctl00$ContentBody$LogBookPanel1$uxDateVisited",GCLogin.formatGcCustomDate(year,month,day),"ctl00$ContentBody$LogBookPanel1$uxLogInfo",logInfo,"ctl00$ContentBody$LogBookPanel1$btnSubmitLog","Submit Log Entry","ctl00$ContentBody$uxVistOtherTrackableTB","");
  GCLogin.putViewstates(params,viewstates);
  final String uri=new Uri.Builder().scheme("https").authority("www.geocaching.com").path("/track/log.aspx").encodedQuery("wid=" + tbid).build().toString();
  final String page=GCLogin.getInstance().postRequestLogged(uri,params);
  if (!GCLogin.getInstance().getLoginStatus(page)) {
    Log.e("GCParser.postLogTrackable: Cannot log in geocaching");
    return StatusCode.NOT_LOGGED_IN;
  }
  try {
    final MatcherWrapper matcherOk=new MatcherWrapper(GCConstants.PATTERN_OK2,page);
    if (matcherOk.find()) {
      Log.i("Log successfully posted to trackable #" + trackingCode);
      return StatusCode.NO_ERROR;
    }
  }
 catch (  final Exception e) {
    Log.e("GCParser.postLogTrackable.check",e);
  }
  Log.e("GCParser.postLogTrackable: Failed to post log because of unknown error");
  return StatusCode.LOG_POST_ERROR;
}
