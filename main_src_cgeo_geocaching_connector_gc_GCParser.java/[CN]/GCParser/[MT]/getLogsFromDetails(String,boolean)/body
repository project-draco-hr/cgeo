{
  String rawResponse;
  if (friends) {
    final MatcherWrapper userTokenMatcher=new MatcherWrapper(GCConstants.PATTERN_USERTOKEN,page);
    if (!userTokenMatcher.find()) {
      Log.e("GCParser.loadLogsFromDetails: unable to extract userToken");
      return null;
    }
    final String userToken=userTokenMatcher.group(1);
    final Parameters params=new Parameters("tkn",userToken,"idx","1","num",String.valueOf(GCConstants.NUMBER_OF_LOGS),"decrypt","true","sf",Boolean.toString(friends));
    final HttpResponse response=Network.getRequest("http://www.geocaching.com/seek/geocache.logbook",params);
    if (response == null) {
      Log.e("GCParser.loadLogsFromDetails: cannot log logs, response is null");
      return null;
    }
    final int statusCode=response.getStatusLine().getStatusCode();
    if (statusCode != 200) {
      Log.e("GCParser.loadLogsFromDetails: error " + statusCode + " when requesting log information");
      return null;
    }
    rawResponse=Network.getResponseData(response);
    if (rawResponse == null) {
      Log.e("GCParser.loadLogsFromDetails: unable to read whole response");
      return null;
    }
  }
 else {
    rawResponse=TextUtils.getMatch(page,GCConstants.PATTERN_LOGBOOK,"");
  }
  return parseLogs(friends,rawResponse);
}
