{
  return Observable.create(new OnSubscribe<LogEntry>(){
    @Override public void call(    final Subscriber<? super LogEntry> subscriber){
      try {
        final ObjectNode resp=(ObjectNode)JsonUtils.reader.readTree(responseStream);
        if (!resp.path("status").asText().equals("success")) {
          Log.e("GCParser.loadLogsFromDetails: status is " + resp.path("status").asText("[absent]"));
          subscriber.onCompleted();
          return;
        }
        final ArrayNode data=(ArrayNode)resp.get("data");
        for (        final JsonNode entry : data) {
          final String logIconNameExt=entry.path("LogTypeImage").asText(".gif");
          final String logIconName=logIconNameExt.substring(0,logIconNameExt.length() - 4);
          final long date;
          try {
            date=GCLogin.parseGcCustomDate(entry.get("Visited").asText()).getTime();
          }
 catch (          ParseException|NullPointerException e) {
            Log.e("GCParser.loadLogsFromDetails: failed to parse log date",e);
            continue;
          }
          final String latLon=entry.path("LatLonString").asText();
          final String logText=(StringUtils.isEmpty(latLon) ? "" : (latLon + "<br/><br/>")) + TextUtils.removeControlCharacters(entry.path("LogText").asText());
          final LogEntry.Builder logDoneBuilder=new LogEntry.Builder().setAuthor(TextUtils.removeControlCharacters(entry.path("UserName").asText())).setDate(date).setLogType(LogType.getByIconName(logIconName)).setLog(logText).setFound(entry.path("GeocacheFindCount").asInt()).setFriend(markAsFriendsLog);
          final ArrayNode images=(ArrayNode)entry.get("Images");
          for (          final JsonNode image : images) {
            final String url="https://imgcdn.geocaching.com/cache/log/large/" + image.path("FileName").asText();
            final String title=TextUtils.removeControlCharacters(image.path("Name").asText());
            final String description=image.path("Descr").asText();
            final Image logImage=new Image.Builder().setUrl(url).setTitle(title).setDescription(description).build();
            logDoneBuilder.addLogImage(logImage);
          }
          subscriber.onNext(logDoneBuilder.build());
        }
      }
 catch (      final IOException e) {
        Log.w("GCParser.loadLogsFromDetails: Failed to parse cache logs",e);
      }
      subscriber.onCompleted();
    }
  }
);
}
