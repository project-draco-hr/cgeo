{
  withMockedLoginDo(new Runnable(){
    public void run(){
      final Strategy strategy=Settings.getLiveMapStrategy();
      final Strategy testStrategy=Strategy.FAST;
      Settings.setLiveMapStrategy(testStrategy);
      final CacheType cacheType=Settings.getCacheType();
      try {
        MockedCache cache=new GC2CJPF();
        deleteCacheFromDBAndLogout(cache.getGeocode());
        Tile.Cache.removeFromTileCache(cache);
        Settings.setCacheType(CacheType.ALL);
        Viewport viewport=new Viewport(cache,0.003,0.003);
        SearchResult search=ConnectorFactory.searchByViewport(viewport,INVALID_TOKEN);
        assertNotNull(search);
        assertTrue(search.getGeocodes().contains(cache.getGeocode()));
        final Geocache cacheFromViewport=DataStore.loadCache(cache.getGeocode(),LoadFlags.LOAD_CACHE_OR_DB);
        Log.d("cgeoApplicationTest.testSearchByViewportNotLoggedIn: Coords expected = " + cache.getCoords());
        Log.d("cgeoApplicationTest.testSearchByViewportNotLoggedIn: Coords actual = " + cacheFromViewport.getCoords());
        assertFalse(cache.getCoords().isEqualTo(cacheFromViewport.getCoords(),1e-3));
        assertEquals(testStrategy == Strategy.DETAILED,cacheFromViewport.isReliableLatLon());
        cache=new GC2JVEH();
        deleteCacheFromDBAndLogout(cache.getGeocode());
        viewport=new Viewport(cache,0.003,0.003);
        search=ConnectorFactory.searchByViewport(viewport,INVALID_TOKEN);
        assertNotNull(search);
        assertEquals(testStrategy == Strategy.DETAILED,search.getGeocodes().contains(cache.getGeocode()));
      }
  finally {
        Settings.setLiveMapStrategy(strategy);
        Settings.setCacheType(cacheType);
      }
    }
  }
);
}
