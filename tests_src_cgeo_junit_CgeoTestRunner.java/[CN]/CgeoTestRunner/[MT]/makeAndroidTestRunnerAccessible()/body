{
  AccessController.doPrivileged(new PrivilegedAction<Void>(){
    @Override public Void run(){
      mListener=new JUnitReportListener(getContext(),getTargetContext(),mReportFile,mReportDir,mFilterTraces,mMultiFile);
      try {
        Class<?> c=getClass();
        Field bridgeTestRunner=c.getSuperclass().getDeclaredField("bridgeTestRunner");
        bridgeTestRunner.setAccessible(true);
        Object obj=bridgeTestRunner.get(this);
        Method m=obj.getClass().getDeclaredMethod("getAndroidTestRunner",(Class[])null);
        AndroidTestRunner androidTestRunner=(AndroidTestRunner)m.invoke(obj);
        androidTestRunner.addTestListener(mListener);
      }
 catch (      NoSuchFieldException|InvocationTargetException|IllegalAccessException|NoSuchMethodException|SecurityException x) {
        Log.e(LOG_TAG,x.toString());
      }
      return null;
    }
  }
);
}
