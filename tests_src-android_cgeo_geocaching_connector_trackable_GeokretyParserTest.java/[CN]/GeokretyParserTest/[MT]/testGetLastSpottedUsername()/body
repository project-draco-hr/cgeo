{
  final LogEntry note=new LogEntry.Builder().setLogType(LogType.NOTE).setAuthor("authorNote").build();
  final LogEntry placed=new LogEntry.Builder().setLogType(LogType.PLACED_IT).setAuthor("authorPlaced").build();
  final LogEntry grabbed=new LogEntry.Builder().setLogType(LogType.GRABBED_IT).setAuthor("authorGrabbed").build();
  final LogEntry visit=new LogEntry.Builder().setLogType(LogType.VISIT).setAuthor("authorVisit").build();
  final LogEntry discovered=new LogEntry.Builder().setLogType(LogType.DISCOVERED_IT).setAuthor("authorDiscovered").build();
  final String userUnknown=CgeoApplication.getInstance().getString(cgeo.geocaching.R.string.user_unknown);
  assertThat(GeokretyParser.getLastSpottedUsername(new ArrayList<LogEntry>())).isEqualTo(userUnknown);
  final List<LogEntry> logsEntries1=new ArrayList<>();
  logsEntries1.add(note);
  assertThat(GeokretyParser.getLastSpottedUsername(logsEntries1)).isEqualTo(userUnknown);
  final List<LogEntry> logsEntries2=new ArrayList<>();
  logsEntries2.add(note);
  logsEntries2.add(placed);
  assertThat(GeokretyParser.getLastSpottedUsername(logsEntries2)).isEqualTo(userUnknown);
  final List<LogEntry> logsEntries3=new ArrayList<>();
  logsEntries3.add(visit);
  assertThat(GeokretyParser.getLastSpottedUsername(logsEntries3)).isEqualTo("authorVisit");
  final List<LogEntry> logsEntries4=new ArrayList<>();
  logsEntries4.add(note);
  logsEntries4.add(visit);
  assertThat(GeokretyParser.getLastSpottedUsername(logsEntries4)).isEqualTo("authorVisit");
  final List<LogEntry> logsEntries5=new ArrayList<>();
  logsEntries5.add(placed);
  assertThat(GeokretyParser.getLastSpottedUsername(logsEntries5)).isEqualTo(userUnknown);
  final List<LogEntry> logsEntries6=new ArrayList<>();
  logsEntries6.add(placed);
  logsEntries6.add(visit);
  assertThat(GeokretyParser.getLastSpottedUsername(logsEntries6)).isEqualTo(userUnknown);
  final List<LogEntry> logsEntries7=new ArrayList<>();
  logsEntries7.add(visit);
  logsEntries7.add(placed);
  assertThat(GeokretyParser.getLastSpottedUsername(logsEntries7)).isEqualTo("authorVisit");
  final List<LogEntry> logsEntries8=new ArrayList<>();
  logsEntries8.add(placed);
  logsEntries8.add(visit);
  assertThat(GeokretyParser.getLastSpottedUsername(logsEntries8)).isEqualTo(userUnknown);
  final List<LogEntry> logsEntries9=new ArrayList<>();
  logsEntries9.add(grabbed);
  logsEntries9.add(visit);
  assertThat(GeokretyParser.getLastSpottedUsername(logsEntries9)).isEqualTo("authorGrabbed");
  final List<LogEntry> logsEntries10=new ArrayList<>();
  logsEntries10.add(discovered);
  logsEntries10.add(visit);
  assertThat(GeokretyParser.getLastSpottedUsername(logsEntries10)).isEqualTo(userUnknown);
  final List<LogEntry> logsEntries11=new ArrayList<>();
  logsEntries11.add(note);
  logsEntries11.add(discovered);
  logsEntries11.add(note);
  logsEntries11.add(visit);
  logsEntries11.add(note);
  assertThat(GeokretyParser.getLastSpottedUsername(logsEntries11)).isEqualTo(userUnknown);
}
