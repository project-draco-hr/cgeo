{
  final List<NavigationAppsEnum> items=new ArrayList<NavigationAppFactory.NavigationAppsEnum>();
  final int defaultNavigationTool=Settings.getDefaultNavigationTool();
  for (  final NavigationAppsEnum navApp : getInstalledNavigationApps()) {
    if ((showInternalMap || !(navApp.app instanceof InternalMap)) && (showDefaultNavigation || defaultNavigationTool != navApp.id)) {
      if (Settings.isUseNavigationApp(navApp)) {
        boolean add=false;
        if (cache != null && navApp.app instanceof CacheNavigationApp && navApp.app.isEnabled(cache)) {
          add=true;
        }
        if (waypoint != null && navApp.app instanceof WaypointNavigationApp && ((WaypointNavigationApp)navApp.app).isEnabled(waypoint)) {
          add=true;
        }
        if (destination != null && navApp.app instanceof GeopointNavigationApp) {
          add=true;
        }
        if (add) {
          items.add(navApp);
        }
      }
    }
  }
  if (items.size() == 1) {
    invokeNavigation(activity,cache,waypoint,destination,items.get(0).app);
    return;
  }
  final ArrayAdapter<NavigationAppsEnum> adapter=new ArrayAdapter<NavigationAppsEnum>(activity,android.R.layout.select_dialog_item,items);
  final AlertDialog.Builder builder=new AlertDialog.Builder(activity);
  builder.setTitle(R.string.cache_menu_navigate);
  builder.setAdapter(adapter,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int item){
      final NavigationAppsEnum selectedItem=adapter.getItem(item);
      invokeNavigation(activity,cache,waypoint,destination,selectedItem.app);
    }
  }
);
  final AlertDialog alert=builder.create();
  alert.show();
}
