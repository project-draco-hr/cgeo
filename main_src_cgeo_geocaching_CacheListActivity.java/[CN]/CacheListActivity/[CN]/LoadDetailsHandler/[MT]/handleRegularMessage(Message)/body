{
  updateAdapter();
  if (msg.what == DownloadProgress.MSG_LOADED) {
    ((Geocache)msg.obj).setStatusChecked(false);
    adapter.notifyDataSetChanged();
    final int dp=detailProgress.get();
    final int secondsElapsed=(int)((System.currentTimeMillis() - detailProgressTime) / 1000);
    final int minutesRemaining=((detailTotal - dp) * secondsElapsed / ((dp > 0) ? dp : 1) / 60);
    progress.setProgress(dp);
    if (minutesRemaining < 1) {
      progress.setMessage(res.getString(R.string.caches_downloading) + " " + res.getString(R.string.caches_eta_ltm));
    }
 else {
      progress.setMessage(res.getString(R.string.caches_downloading) + " " + res.getQuantityString(R.plurals.caches_eta_mins,minutesRemaining,minutesRemaining));
    }
  }
 else {
    new AsyncTask<Void,Void,Set<Geocache>>(){
      @Override protected Set<Geocache> doInBackground(      final Void... params){
        return search != null ? search.getCachesFromSearchResult(LoadFlags.LOAD_CACHE_OR_DB) : null;
      }
      @Override protected void onPostExecute(      final Set<Geocache> result){
        if (CollectionUtils.isNotEmpty(result)) {
          cacheList.clear();
          cacheList.addAll(result);
          adapter.reFilter();
        }
        setAdapterCurrentCoordinates(false);
        showProgress(false);
        progress.dismiss();
      }
    }
.execute();
  }
}
