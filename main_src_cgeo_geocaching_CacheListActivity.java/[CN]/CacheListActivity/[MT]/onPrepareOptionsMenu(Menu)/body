{
  super.onPrepareOptionsMenu(menu);
  final boolean isHistory=type == CacheListType.HISTORY;
  final boolean isOffline=type == CacheListType.OFFLINE;
  final boolean isEmpty=cacheList.isEmpty();
  final boolean isConcrete=isConcreteList();
  try {
    if (adapter.isSelectMode()) {
      menu.findItem(R.id.menu_switch_select_mode).setTitle(res.getString(R.string.caches_select_mode_exit)).setIcon(R.drawable.ic_menu_clear_playlist);
    }
 else {
      menu.findItem(R.id.menu_switch_select_mode).setTitle(res.getString(R.string.caches_select_mode)).setIcon(R.drawable.ic_menu_agenda);
    }
    menu.findItem(R.id.menu_invert_selection).setVisible(adapter.isSelectMode());
    setVisible(menu,R.id.menu_show_on_map,!isEmpty);
    setVisible(menu,R.id.menu_filter,search != null && search.getCount() > 0);
    setVisible(menu,R.id.menu_switch_select_mode,!isEmpty);
    setVisible(menu,R.id.menu_create_list,isOffline);
    setVisible(menu,R.id.menu_sort,!isEmpty && !isHistory);
    setVisible(menu,R.id.menu_refresh_stored,!isEmpty);
    setVisible(menu,R.id.menu_drop_caches,!isEmpty && isOffline);
    setVisible(menu,R.id.menu_delete_events,isConcrete && !isEmpty && containsPastEvents());
    setVisible(menu,R.id.menu_move_to_list,isOffline && !isEmpty);
    setVisible(menu,R.id.menu_remove_from_history,!isEmpty && isHistory);
    setVisible(menu,R.id.menu_clear_offline_logs,!isEmpty && (isHistory || isOffline) && containsOfflineLogs());
    setVisible(menu,R.id.menu_import,isOffline);
    setVisible(menu,R.id.menu_import_web,isOffline);
    setVisible(menu,R.id.menu_import_gpx,isOffline);
    setVisible(menu,R.id.menu_export,!isEmpty && (isHistory || isOffline));
    if (!isOffline && !isHistory) {
      menu.findItem(R.id.menu_refresh_stored).setTitle(R.string.caches_store_offline);
    }
    final boolean isNonDefaultList=isConcrete && listId != StoredList.STANDARD_LIST_ID;
    if (isOffline || type == CacheListType.HISTORY) {
      setMenuItemLabel(menu,R.id.menu_drop_caches,R.string.caches_remove_selected,R.string.caches_remove_all);
      setMenuItemLabel(menu,R.id.menu_refresh_stored,R.string.caches_refresh_selected,R.string.caches_refresh_all);
      setMenuItemLabel(menu,R.id.menu_move_to_list,R.string.caches_move_selected,R.string.caches_move_all);
    }
 else {
      setMenuItemLabel(menu,R.id.menu_refresh_stored,R.string.caches_store_selected,R.string.caches_store_offline);
    }
    menu.findItem(R.id.menu_drop_list).setVisible(isNonDefaultList);
    menu.findItem(R.id.menu_rename_list).setVisible(isNonDefaultList);
    setMenuItemLabel(menu,R.id.menu_remove_from_history,R.string.cache_remove_from_history,R.string.cache_clear_history);
    menu.findItem(R.id.menu_import_android).setVisible(Compatibility.isStorageAccessFrameworkAvailable() && isOffline);
    final List<CacheListApp> listNavigationApps=CacheListApps.getActiveApps();
    menu.findItem(R.id.menu_cache_list_app_provider).setVisible(!isEmpty && listNavigationApps.size() > 1);
    menu.findItem(R.id.menu_cache_list_app).setVisible(!isEmpty && listNavigationApps.size() == 1);
  }
 catch (  final RuntimeException e) {
    Log.e("CacheListActivity.onPrepareOptionsMenu",e);
  }
  return true;
}
