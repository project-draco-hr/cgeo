{
  super.onCreateContextMenu(menu,view,info);
  AdapterContextMenuInfo adapterInfo=null;
  try {
    adapterInfo=(AdapterContextMenuInfo)info;
  }
 catch (  final Exception e) {
    Log.w("CacheListActivity.onCreateContextMenu",e);
  }
  if (adapterInfo == null || adapterInfo.position >= adapter.getCount()) {
    return;
  }
  final Geocache cache=adapter.getItem(adapterInfo.position);
  menu.setHeaderTitle(StringUtils.defaultIfBlank(cache.getName(),cache.getGeocode()));
  contextMenuGeocode=cache.getGeocode();
  getMenuInflater().inflate(R.menu.cache_list_context,menu);
  menu.findItem(R.id.menu_default_navigation).setTitle(NavigationAppFactory.getDefaultNavigationApplication().getName());
  final boolean hasCoords=cache.getCoords() != null;
  menu.findItem(R.id.menu_default_navigation).setVisible(hasCoords);
  menu.findItem(R.id.menu_navigate).setVisible(hasCoords);
  menu.findItem(R.id.menu_cache_details).setVisible(hasCoords);
  final boolean isOffline=cache.isOffline();
  menu.findItem(R.id.menu_drop_cache).setVisible(isOffline);
  menu.findItem(R.id.menu_move_to_list).setVisible(isOffline);
  menu.findItem(R.id.menu_copy_to_list).setVisible(isOffline);
  menu.findItem(R.id.menu_refresh).setVisible(isOffline);
  menu.findItem(R.id.menu_store_cache).setVisible(!isOffline);
  LoggingUI.onPrepareOptionsMenu(menu,cache,adapterInfo.targetView);
}
