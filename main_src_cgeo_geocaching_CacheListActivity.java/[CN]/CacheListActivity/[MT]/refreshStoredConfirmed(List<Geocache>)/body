{
  detailTotal=caches.size();
  if (detailTotal == 0) {
    return;
  }
  if (!Network.isConnected()) {
    showToast(getString(R.string.err_server));
    return;
  }
  if (Settings.getChooseList() && type != CacheListType.OFFLINE && type != CacheListType.HISTORY) {
    new StoredList.UserInterface(this).promptForMultiListSelection(R.string.list_title,new Action1<Set<Integer>>(){
      @Override public void call(      final Set<Integer> selectedListIds){
        refreshStoredInternal(caches,selectedListIds);
      }
    }
,true,Collections.singleton(StoredList.TEMPORARY_LIST.id),Collections.<Integer>emptySet(),listNameMemento);
  }
 else {
    final Set<Integer> additionalListIds=new HashSet<>();
    if (type != CacheListType.OFFLINE && type != CacheListType.HISTORY) {
      additionalListIds.add(StoredList.STANDARD_LIST_ID);
    }
    refreshStoredInternal(caches,additionalListIds);
  }
}
