{
  String bearingText=((EditText)findViewById(R.id.bearing)).getText().toString();
  String distanceText=((EditText)findViewById(R.id.distance)).getText().toString() + distanceUnit;
  String latText=latButton.getText().toString();
  String lonText=lonButton.getText().toString();
  if (StringUtils.isBlank(bearingText) && StringUtils.isBlank(distanceText) && StringUtils.isBlank(latText)&& StringUtils.isBlank(lonText)) {
    showToast(res.getString(R.string.err_point_no_position_given));
    return null;
  }
  Geopoint coords;
  if (StringUtils.isNotBlank(latText) && StringUtils.isNotBlank(lonText)) {
    try {
      coords=new Geopoint(latText,lonText);
    }
 catch (    Geopoint.ParseException e) {
      showToast(res.getString(e.resource));
      return null;
    }
  }
 else {
    if (app.currentGeo().getCoords() == null) {
      showToast(res.getString(R.string.err_point_curr_position_unavailable));
      return null;
    }
    coords=app.currentGeo().getCoords();
  }
  Geopoint result;
  if (StringUtils.isNotBlank(bearingText) && StringUtils.isNotBlank(distanceText)) {
    double bearing;
    try {
      bearing=Double.parseDouble(bearingText);
    }
 catch (    NumberFormatException e) {
      helpDialog(res.getString(R.string.err_point_bear_and_dist_title),res.getString(R.string.err_point_bear_and_dist));
      return null;
    }
    double distance;
    try {
      distance=DistanceParser.parseDistance(distanceText,Settings.isUseMetricUnits());
    }
 catch (    NumberFormatException e) {
      showToast(res.getString(R.string.err_parse_dist));
      return null;
    }
    final Geopoint coordsDst=coords.project(bearing,distance);
    if (coordsDst == null) {
      showToast(res.getString(R.string.err_point_location_error));
      return null;
    }
    result=coordsDst;
  }
 else   if (coords != null) {
    result=coords;
  }
 else {
    return null;
  }
  saveCoords(result);
  return result;
}
