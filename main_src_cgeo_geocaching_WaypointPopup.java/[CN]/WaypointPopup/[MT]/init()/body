{
  super.init();
  waypoint=app.loadWaypoint(waypointId);
  try {
    RelativeLayout itemLayout;
    TextView itemName;
    TextView itemValue;
    if (StringUtils.isNotBlank(waypoint.getName())) {
      setTitle(waypoint.getName());
    }
 else {
      setTitle(waypoint.getGeocode().toUpperCase());
    }
    ((TextView)findViewById(R.id.actionbar_title)).setCompoundDrawablesWithIntrinsicBounds(getResources().getDrawable(waypoint.getWaypointType().markerId),null,null,null);
    LinearLayout waypointDetailsList=(LinearLayout)findViewById(R.id.waypoint_details_list);
    waypointDetailsList.removeAllViews();
    itemLayout=(RelativeLayout)inflater.inflate(R.layout.cache_item,null);
    itemName=(TextView)itemLayout.findViewById(R.id.name);
    itemValue=(TextView)itemLayout.findViewById(R.id.value);
    itemName.setText(res.getString(R.string.cache_geocode));
    itemValue.setText(waypoint.getPrefix().toUpperCase() + waypoint.getGeocode().toUpperCase().substring(2));
    waypointDetailsList.addView(itemLayout);
    Button buttonEdit=(Button)findViewById(R.id.edit);
    buttonEdit.setOnClickListener(new OnClickListener(){
      @Override public void onClick(      View arg0){
        Intent editIntent=new Intent(WaypointPopup.this,cgeowaypointadd.class);
        editIntent.putExtra("waypoint",waypoint.getId());
        startActivity(editIntent);
        restartActivity();
      }
    }
);
    LinearLayout cacheDetailsList=(LinearLayout)findViewById(R.id.details_list);
    cacheDetailsList.removeAllViews();
    itemLayout=(RelativeLayout)inflater.inflate(R.layout.cache_item,null);
    itemName=(TextView)itemLayout.findViewById(R.id.name);
    itemValue=(TextView)itemLayout.findViewById(R.id.value);
    itemValue.setLines(1);
    itemName.setText(res.getString(R.string.cache_name));
    itemValue.setText(cache.getName());
    cacheDetailsList.addView(itemLayout);
    itemLayout=(RelativeLayout)inflater.inflate(R.layout.cache_item,null);
    itemName=(TextView)itemLayout.findViewById(R.id.name);
    itemValue=(TextView)itemLayout.findViewById(R.id.value);
    itemName.setText(res.getString(R.string.cache_type));
    String cacheType=cache.getType().getL10n();
    String cacheSize=cache.getSize() != CacheSize.UNKNOWN ? " (" + cache.getSize().getL10n() + ")" : "";
    itemValue.setText(cacheType + cacheSize);
    cacheDetailsList.addView(itemLayout);
    itemLayout=(RelativeLayout)inflater.inflate(R.layout.cache_item,null);
    itemName=(TextView)itemLayout.findViewById(R.id.name);
    itemValue=(TextView)itemLayout.findViewById(R.id.value);
    itemName.setText(res.getString(R.string.cache_geocode));
    itemValue.setText(cache.getGeocode().toUpperCase());
    cacheDetailsList.addView(itemLayout);
    if (cache.isArchived() || cache.isDisabled() || cache.isPremiumMembersOnly()|| cache.isFound()) {
      itemLayout=createCacheState();
      cacheDetailsList.addView(itemLayout);
    }
    itemLayout=(RelativeLayout)inflater.inflate(R.layout.cache_item,null);
    itemName=(TextView)itemLayout.findViewById(R.id.name);
    itemValue=(TextView)itemLayout.findViewById(R.id.value);
    itemName.setText(res.getString(R.string.cache_distance));
    itemValue.setText("--");
    cacheDistance=itemValue;
    cacheDetailsList.addView(itemLayout);
    if (cache.getDifficulty() > 0f) {
      itemLayout=createDifficulty();
      cacheDetailsList.addView(itemLayout);
    }
    if (cache.getTerrain() > 0f) {
      itemLayout=createTerrain();
      cacheDetailsList.addView(itemLayout);
    }
    if (cache.getRating() > 0) {
      setRating(cache.getRating(),cache.getVotes());
    }
 else {
      aquireGCVote();
    }
    Button buttonMore=(Button)findViewById(R.id.more_details);
    buttonMore.setOnClickListener(new OnClickListener(){
      @Override public void onClick(      View arg0){
        Intent cachesIntent=new Intent(WaypointPopup.this,CacheDetailActivity.class);
        cachesIntent.putExtra(EXTRA_GEOCODE,geocode.toUpperCase());
        startActivity(cachesIntent);
        finish();
      }
    }
);
  }
 catch (  Exception e) {
    Log.e("cgeopopup.init: " + e.toString());
  }
}
