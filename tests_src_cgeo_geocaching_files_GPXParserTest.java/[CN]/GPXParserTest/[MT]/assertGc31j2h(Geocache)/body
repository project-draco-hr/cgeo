{
  assertThat(cache.getGeocode()).isEqualTo("GC31J2H");
  assertThat(cache.getName()).isEqualTo("Hockenheimer City-Brunnen");
  assertThat(cache.getShortDescription()).startsWith("Kurzer informativer Multi entlang der Brunnen");
  assertThat(cache.getDescription()).startsWith("Cachemobile k??nnen kostenfrei am Messplatz geparkt werden.");
  assertThat(cache.hasTrackables()).isTrue();
  assertEquals(2.0f,cache.getDifficulty(),0.01f);
  assertEquals(1.0f,cache.getTerrain(),0.01f);
  final Geopoint refCoordinates=new Geopoint("N 49?? 19.122","E 008?? 32.739");
  assertThat(cache.getCoords()).isEqualTo(refCoordinates);
  assertThat(cache.getOwnerDisplayName()).isEqualTo("vptsz");
  assertThat(cache.getOwnerUserId()).isEqualTo("vptsz");
  assertThat(cache.getSize()).isEqualTo(CacheSize.SMALL);
  assertThat(cache.getType()).isEqualTo(CacheType.MULTI);
  assertThat(cache.isArchived()).isFalse();
  assertThat(cache.isDisabled()).isFalse();
  assertThat(cache.isEventCache()).isFalse();
  assertThat(cache.isPremiumMembersOnly()).isFalse();
  assertThat(cache.isOwner()).isFalse();
  assertThat(cache.isFound()).isTrue();
  assertThat(cache.getHint()).isEqualTo("Station3: Der zerbrochene Stein z??hlt doppelt.\nFinal: Oben neben dem Tor");
  assertThat(cache.getLogs()).hasSize(6);
  final LogEntry log=cache.getLogs().get(5);
  assertThat(log.author).isEqualTo("Geoteufel");
  assertThat(log.date).isEqualTo(parseTime("2011-09-11T07:00:00Z"));
  assertThat(log.found).isEqualTo(-1);
  assertThat(log.log).isEqualTo("Sehr sch??ne Runde und wir haben wieder etwas Neues ??ber Hockenheim gelernt. Super Tarnung.\nTFTC, Geoteufel");
  assertThat(log.isOwn()).isFalse();
  assertThat(log.getDisplayText()).isEqualTo(log.log);
  assertThat(CalendarUtils.daysSince(log.date)).isGreaterThan(700);
  assertThat(cache.getAttributes()).isEmpty();
}
