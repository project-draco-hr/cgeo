{
  if (currentFormat == coordInputFormatEnum.Plain) {
    try {
      gp=new Geopoint(eLat.getText().toString() + " " + eLon.getText().toString());
    }
 catch (    ParseException e) {
      context.showToast(context.getResources().getString(R.string.err_parse_lat_lon));
      return false;
    }
catch (    MalformedCoordinateException e) {
      context.showToast(context.getResources().getString(R.string.err_invalid_lat_lon));
      return false;
    }
    return true;
  }
  int latDeg=0, latMin=0, latSec=0;
  int lonDeg=0, lonMin=0, lonSec=0;
  Double latDegFrac=0.0, latMinFrac=0.0, latSecFrac=0.0;
  Double lonDegFrac=0.0, lonMinFrac=0.0, lonSecFrac=0.0;
  try {
    latDeg=Integer.parseInt(eLatDeg.getText().toString());
    lonDeg=Integer.parseInt(eLonDeg.getText().toString());
    latDegFrac=Double.parseDouble("0." + eLatMin.getText().toString());
    lonDegFrac=Double.parseDouble("0." + eLonMin.getText().toString());
    latMin=Integer.parseInt(eLatMin.getText().toString());
    lonMin=Integer.parseInt(eLonMin.getText().toString());
    latMinFrac=Double.parseDouble("0." + eLatSec.getText().toString());
    lonMinFrac=Double.parseDouble("0." + eLonSec.getText().toString());
    latSec=Integer.parseInt(eLatSec.getText().toString());
    lonSec=Integer.parseInt(eLonSec.getText().toString());
    latSecFrac=Double.parseDouble("0." + eLatSub.getText().toString());
    lonSecFrac=Double.parseDouble("0." + eLonSub.getText().toString());
  }
 catch (  NumberFormatException e) {
  }
  Double latitude=0.0;
  Double longitude=0.0;
switch (currentFormat) {
case Deg:
    latitude=latDeg + latDegFrac;
  longitude=lonDeg + lonDegFrac;
break;
case Min:
latitude=latDeg + latMin / 60.0 + latMinFrac / 60.0;
longitude=lonDeg + lonMin / 60.0 + lonMinFrac / 60.0;
break;
case Sec:
latitude=latDeg + latMin / 60.0 + latSec / 60.0 / 60.0 + latSecFrac / 60.0 / 60.0;
longitude=lonDeg + lonMin / 60.0 + lonSec / 60.0 / 60.0 + lonSecFrac / 60.0 / 60.0;
break;
}
latitude*=(bLat.getText().toString().equalsIgnoreCase("S") ? -1 : 1);
longitude*=(bLon.getText().toString().equalsIgnoreCase("W") ? -1 : 1);
try {
gp=new Geopoint(latitude,longitude);
}
 catch (MalformedCoordinateException e) {
context.showToast(context.getResources().getString(R.string.err_invalid_lat_lon));
return false;
}
return true;
}
