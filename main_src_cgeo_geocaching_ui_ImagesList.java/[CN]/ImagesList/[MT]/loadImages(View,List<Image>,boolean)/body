{
  imagesView=(LinearLayout)parentView.findViewById(R.id.spoiler_list);
  final HtmlImage imgGetter=new HtmlImage(geocode,true,offline ? StoredList.STANDARD_LIST_ID : StoredList.TEMPORARY_LIST_ID,false);
  for (  final Image img : images) {
    final LinearLayout rowView=(LinearLayout)inflater.inflate(R.layout.cache_image_item,null);
    assert(rowView != null);
    if (StringUtils.isNotBlank(img.getTitle())) {
      ((TextView)rowView.findViewById(R.id.title)).setText(Html.fromHtml(img.getTitle()));
      rowView.findViewById(R.id.titleLayout).setVisibility(View.VISIBLE);
    }
    if (StringUtils.isNotBlank(img.getDescription())) {
      final TextView descView=(TextView)rowView.findViewById(R.id.description);
      descView.setText(Html.fromHtml(img.getDescription()),TextView.BufferType.SPANNABLE);
      descView.setVisibility(View.VISIBLE);
    }
    final ImageView imageView=(ImageView)inflater.inflate(R.layout.image_item,null);
    assert(imageView != null);
    subscriptions.add(AndroidObservable.fromActivity(activity,imgGetter.fetchDrawable(img.getUrl())).subscribe(new Action1<BitmapDrawable>(){
      @Override public void call(      final BitmapDrawable image){
        display(imageView,image,img,rowView);
      }
    }
,new Action1<Throwable>(){
      @Override public void call(      final Throwable e){
      }
    }
));
    rowView.addView(imageView);
    imagesView.addView(rowView);
  }
}
