{
  final cgCache cache=new cgCache();
  cache.setReliableLatLon(true);
  try {
    cache.setGeocode(response.getString(CACHE_CODE));
    cache.setName(response.getString(CACHE_NAME));
    setLocation(cache,response.getString(CACHE_LOCATION));
    cache.setType(getCacheType(response.getString(CACHE_TYPE)));
    final String status=response.getString(CACHE_STATUS);
    cache.setDisabled(status.equalsIgnoreCase("Temporarily unavailable"));
    cache.setArchived(status.equalsIgnoreCase("Archived"));
    final JSONObject owner=response.getJSONObject(CACHE_OWNER);
    cache.setOwnerDisplayName(parseUser(owner));
    cache.getLogCounts().put(LogType.FOUND_IT,response.getInt(CACHE_FOUNDS));
    cache.getLogCounts().put(LogType.DIDNT_FIND_IT,response.getInt(CACHE_NOTFOUNDS));
    cache.setSize(getCacheSize(response));
    cache.setDifficulty((float)response.getDouble(CACHE_DIFFICULTY));
    cache.setTerrain((float)response.getDouble(CACHE_TERRAIN));
    if (!response.isNull(CACHE_RATING)) {
      cache.setRating((float)response.getDouble(CACHE_RATING));
    }
    cache.setVotes(response.getInt(CACHE_VOTES));
    cache.setFavoritePoints(response.getInt(CACHE_RECOMMENDATIONS));
    cache.setDescription(response.getString(CACHE_DESCRIPTION));
    cache.setHint(Html.fromHtml(response.getString(CACHE_HINT)).toString());
    final JSONArray images=response.getJSONArray(CACHE_IMAGES);
    if (images != null) {
      for (int i=0; i < images.length(); i++) {
        JSONObject imageResponse=images.getJSONObject(i);
        if (imageResponse.getBoolean(CACHE_IMAGE_IS_SPOILER)) {
          final String title=imageResponse.getString(CACHE_IMAGE_CAPTION);
          final String url=absoluteUrl(imageResponse.getString(CACHE_IMAGE_URL),cache.getGeocode());
          cache.addSpoiler(new Image(url,title));
        }
      }
    }
    cache.setLogs(parseLogs(response.getJSONArray(CACHE_LATEST_LOGS)));
    cache.setHidden(parseDate(response.getString(CACHE_HIDDEN)));
    cache.setDetailedUpdatedNow();
    cgData.saveCache(cache,EnumSet.of(SaveFlag.SAVE_DB));
  }
 catch (  JSONException e) {
    Log.e("OkapiClient.parseCache",e);
  }
  return cache;
}
