{
  final Geocache cache=new Geocache();
  cache.setReliableLatLon(true);
  try {
    parseCoreCache(response,cache);
    final JSONObject ownerObject=response.getJSONObject(CACHE_OWNER);
    final String owner=parseUser(ownerObject);
    cache.setOwnerDisplayName(owner);
    cache.setOwnerUserId(owner);
    cache.getLogCounts().put(LogType.FOUND_IT,response.getInt(CACHE_FOUNDS));
    cache.getLogCounts().put(LogType.DIDNT_FIND_IT,response.getInt(CACHE_NOTFOUNDS));
    cache.getLogCounts().put(LogType.WILL_ATTEND,response.optInt(CACHE_WILLATTENDS));
    if (!response.isNull(CACHE_RATING)) {
      cache.setRating((float)response.getDouble(CACHE_RATING));
    }
    cache.setVotes(response.getInt(CACHE_VOTES));
    cache.setFavoritePoints(response.getInt(CACHE_RECOMMENDATIONS));
    final StringBuilder description=new StringBuilder(500);
    if (!response.isNull("gc_code")) {
      final String gccode=response.getString("gc_code");
      description.append(CgeoApplication.getInstance().getResources().getString(R.string.cache_listed_on,GCConnector.getInstance().getName())).append(": <a href=\"http://coord.info/").append(gccode).append("\">").append(gccode).append("</a><br /><br />");
    }
    description.append(response.getString(CACHE_DESCRIPTION));
    cache.setDescription(description.toString());
    cache.setHint(response.getString(CACHE_HINT));
    final JSONArray images=response.getJSONArray(CACHE_IMAGES);
    if (images != null) {
      for (int i=0; i < images.length(); i++) {
        final JSONObject imageResponse=images.getJSONObject(i);
        final String title=imageResponse.getString(CACHE_IMAGE_CAPTION);
        final String url=absoluteUrl(imageResponse.getString(CACHE_IMAGE_URL),cache.getGeocode());
        cache.addSpoiler(new Image(url,title));
      }
    }
    cache.setAttributes(parseAttributes(response.getJSONArray(CACHE_ATTRNAMES),response.optJSONArray(CACHE_ATTR_ACODES)));
    cache.setWaypoints(parseWaypoints(response.getJSONArray(CACHE_WPTS)),false);
    cache.setInventory(parseTrackables(response.getJSONArray(CACHE_TRACKABLES)));
    if (!response.isNull(CACHE_IS_WATCHED)) {
      cache.setOnWatchlist(response.getBoolean(CACHE_IS_WATCHED));
    }
    if (!response.isNull(CACHE_MY_NOTES)) {
      cache.setPersonalNote(response.getString(CACHE_MY_NOTES));
      cache.parseWaypointsFromNote();
    }
    cache.setLogPasswordRequired(response.getBoolean(CACHE_REQ_PASSWORD));
    cache.setDetailedUpdatedNow();
    DataStore.saveCache(cache,EnumSet.of(SaveFlag.DB));
    DataStore.saveLogsWithoutTransaction(cache.getGeocode(),parseLogs(response.getJSONArray(CACHE_LATEST_LOGS)));
  }
 catch (  final JSONException e) {
    Log.e("OkapiClient.parseCache",e);
  }
  return cache;
}
