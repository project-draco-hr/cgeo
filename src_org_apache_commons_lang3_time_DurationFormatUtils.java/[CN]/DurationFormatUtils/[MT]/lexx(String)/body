{
  char[] array=format.toCharArray();
  ArrayList<Token> list=new ArrayList<Token>(array.length);
  boolean inLiteral=false;
  StringBuffer buffer=null;
  Token previous=null;
  int sz=array.length;
  for (int i=0; i < sz; i++) {
    char ch=array[i];
    if (inLiteral && ch != '\'') {
      buffer.append(ch);
      continue;
    }
    Object value=null;
switch (ch) {
case '\'':
      if (inLiteral) {
        buffer=null;
        inLiteral=false;
      }
 else {
        buffer=new StringBuffer();
        list.add(new Token(buffer));
        inLiteral=true;
      }
    break;
case 'y':
  value=y;
break;
case 'M':
value=M;
break;
case 'd':
value=d;
break;
case 'H':
value=H;
break;
case 'm':
value=m;
break;
case 's':
value=s;
break;
case 'S':
value=S;
break;
default :
if (buffer == null) {
buffer=new StringBuffer();
list.add(new Token(buffer));
}
buffer.append(ch);
}
if (value != null) {
if (previous != null && previous.getValue() == value) {
previous.increment();
}
 else {
Token token=new Token(value);
list.add(token);
previous=token;
}
buffer=null;
}
}
return list.toArray(new Token[list.size()]);
}
