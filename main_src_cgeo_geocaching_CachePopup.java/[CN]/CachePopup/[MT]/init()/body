{
  super.init();
  try {
    RelativeLayout itemLayout;
    TextView itemName;
    TextView itemValue;
    if (StringUtils.isNotBlank(cache.getName())) {
      setTitle(cache.getName());
    }
 else {
      setTitle(geocode.toUpperCase());
    }
    LinearLayout detailsList=(LinearLayout)findViewById(R.id.details_list);
    detailsList.removeAllViews();
    ((TextView)findViewById(R.id.actionbar_title)).setCompoundDrawablesWithIntrinsicBounds(getResources().getDrawable(cache.getType().markerId),null,null,null);
    itemLayout=(RelativeLayout)inflater.inflate(R.layout.cache_item,null);
    itemName=(TextView)itemLayout.findViewById(R.id.name);
    itemValue=(TextView)itemLayout.findViewById(R.id.value);
    itemName.setText(res.getString(R.string.cache_type));
    String cacheType=cache.getType().getL10n();
    String cacheSize=cache.getSize() != CacheSize.UNKNOWN ? " (" + cache.getSize().getL10n() + ")" : "";
    itemValue.setText(cacheType + cacheSize);
    detailsList.addView(itemLayout);
    itemLayout=(RelativeLayout)inflater.inflate(R.layout.cache_item,null);
    itemName=(TextView)itemLayout.findViewById(R.id.name);
    itemValue=(TextView)itemLayout.findViewById(R.id.value);
    itemName.setText(res.getString(R.string.cache_geocode));
    itemValue.setText(cache.getGeocode().toUpperCase());
    detailsList.addView(itemLayout);
    if (cache.isArchived() || cache.isDisabled() || cache.isPremiumMembersOnly()|| cache.isFound()) {
      itemLayout=createCacheState();
      detailsList.addView(itemLayout);
    }
    itemLayout=(RelativeLayout)inflater.inflate(R.layout.cache_item,null);
    itemName=(TextView)itemLayout.findViewById(R.id.name);
    itemValue=(TextView)itemLayout.findViewById(R.id.value);
    itemName.setText(res.getString(R.string.cache_distance));
    itemValue.setText("--");
    detailsList.addView(itemLayout);
    cacheDistance=itemValue;
    if (cache.getDifficulty() > 0f) {
      itemLayout=createDifficulty();
      detailsList.addView(itemLayout);
    }
    if (cache.getTerrain() > 0f) {
      itemLayout=createTerrain();
      detailsList.addView(itemLayout);
    }
    if (cache.getRating() > 0) {
      setRating(cache.getRating(),cache.getVotes());
    }
 else {
      aquireGCVote();
    }
    Button buttonMore=(Button)findViewById(R.id.more_details);
    buttonMore.setOnClickListener(new OnClickListener(){
      @Override public void onClick(      View arg0){
        Intent cachesIntent=new Intent(CachePopup.this,CacheDetailActivity.class);
        cachesIntent.putExtra(EXTRA_GEOCODE,geocode.toUpperCase());
        startActivity(cachesIntent);
        finish();
      }
    }
);
    ((LinearLayout)findViewById(R.id.offline_box)).setVisibility(View.VISIBLE);
    final TextView offlineText=(TextView)findViewById(R.id.offline_text);
    final Button offlineRefresh=(Button)findViewById(R.id.offline_refresh);
    final Button offlineStore=(Button)findViewById(R.id.offline_store);
    if (cache.getListId() > 0) {
      long diff=(System.currentTimeMillis() / (60 * 1000)) - (cache.getDetailedUpdate() / (60 * 1000));
      String ago;
      if (diff < 15) {
        ago=res.getString(R.string.cache_offline_time_mins_few);
      }
 else       if (diff < 50) {
        ago=res.getString(R.string.cache_offline_time_about) + " " + diff+ " "+ res.getString(R.string.cache_offline_time_mins);
      }
 else       if (diff < 90) {
        ago=res.getString(R.string.cache_offline_time_about) + " " + res.getString(R.string.cache_offline_time_hour);
      }
 else       if (diff < (48 * 60)) {
        ago=res.getString(R.string.cache_offline_time_about) + " " + (diff / 60)+ " "+ res.getString(R.string.cache_offline_time_hours);
      }
 else {
        ago=res.getString(R.string.cache_offline_time_about) + " " + (diff / (24 * 60))+ " "+ res.getString(R.string.cache_offline_time_days);
      }
      offlineText.setText(res.getString(R.string.cache_offline_stored) + "\n" + ago);
      offlineRefresh.setVisibility(View.VISIBLE);
      offlineRefresh.setEnabled(true);
      offlineRefresh.setOnClickListener(new storeCache());
      offlineStore.setText(res.getString(R.string.cache_offline_drop));
      offlineStore.setEnabled(true);
      offlineStore.setOnClickListener(new dropCache());
    }
 else {
      offlineText.setText(res.getString(R.string.cache_offline_not_ready));
      offlineRefresh.setVisibility(View.GONE);
      offlineRefresh.setEnabled(false);
      offlineRefresh.setOnTouchListener(null);
      offlineRefresh.setOnClickListener(null);
      offlineStore.setText(res.getString(R.string.cache_offline_store));
      offlineStore.setEnabled(true);
      offlineStore.setOnClickListener(new storeCache());
    }
  }
 catch (  Exception e) {
    Log.e("cgeopopup.init: " + e.toString());
  }
}
