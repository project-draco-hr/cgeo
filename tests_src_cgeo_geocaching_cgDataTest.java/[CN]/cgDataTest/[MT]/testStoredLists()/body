{
  int listId1=StoredList.STANDARD_LIST_ID;
  int listId2=StoredList.STANDARD_LIST_ID;
  final Geocache cache1=new Geocache();
  cache1.setGeocode("Cache 1");
  final Geocache cache2=new Geocache();
  cache2.setGeocode("Cache 2");
  assertNotNull(cache2);
  try {
    listId1=cgData.createList("cgData Test");
    assertTrue(listId1 > StoredList.STANDARD_LIST_ID);
    listId2=cgData.createList("cgDataTest");
    assertTrue(listId2 > StoredList.STANDARD_LIST_ID);
    assertTrue(cgData.getLists().size() >= 2);
    cache1.setDetailed(true);
    cache1.setListId(listId1);
    cache2.setDetailed(true);
    cache2.setListId(listId1);
    cgData.saveCache(cache1,LoadFlags.SAVE_ALL);
    cgData.saveCache(cache2,LoadFlags.SAVE_ALL);
    assertTrue(cgData.getAllCachesCount() >= 2);
    assertEquals(1,cgData.renameList(listId1,"cgData Test (renamed)"));
    final StoredList list1=cgData.getList(listId1);
    assertEquals("cgData Test (renamed)",list1.title);
    cgData.moveToList(Collections.singletonList(cache1),listId2);
    assertEquals(1,cgData.getAllStoredCachesCount(CacheType.ALL,listId2));
    assertTrue(cgData.removeList(listId1));
    cgData.markDropped(Collections.singletonList(cache2));
    cgData.moveToList(Collections.singletonList(cache2),listId2);
    assertEquals(2,cgData.getAllStoredCachesCount(CacheType.ALL,listId2));
    cgData.removeList(listId2);
  }
  finally {
    final Set<String> geocodes=new HashSet<String>();
    geocodes.add(cache1.getGeocode());
    geocodes.add(cache2.getGeocode());
    cgData.removeCaches(geocodes,LoadFlags.REMOVE_ALL);
    cgData.removeList(listId1);
    cgData.removeList(listId2);
  }
}
