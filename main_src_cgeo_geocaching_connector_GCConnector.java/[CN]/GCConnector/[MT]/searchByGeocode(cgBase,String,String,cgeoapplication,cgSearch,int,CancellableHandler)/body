{
  final Parameters params=new Parameters("decrypt","y");
  if (StringUtils.isNotBlank(geocode)) {
    params.put("wp",geocode);
  }
 else   if (StringUtils.isNotBlank(guid)) {
    params.put("guid",guid);
  }
  if (app == null) {
    Log.e(Settings.tag,"cgeoBase.searchByGeocode: No application found");
    return null;
  }
  cgBase.sendLoadProgressDetail(handler,R.string.cache_dialog_loading_details_status_loadpage);
  final String page=cgBase.requestLogged("http://www.geocaching.com/seek/cache_details.aspx",params,false,false,false);
  if (StringUtils.isEmpty(page)) {
    if (app.isThere(geocode,guid,true,false)) {
      if (StringUtils.isBlank(geocode) && StringUtils.isNotBlank(guid)) {
        Log.i(Settings.tag,"Loading old cache from cache.");
        search.addGeocode(app.getGeocode(guid));
      }
 else {
        search.addGeocode(geocode);
      }
      search.error=null;
      return search;
    }
    Log.e(Settings.tag,"cgeoBase.searchByGeocode: No data from server");
    return null;
  }
  final cgCacheWrap caches=cgBase.parseCache(page,reason,handler);
  if (caches == null || CollectionUtils.isEmpty(caches.cacheList)) {
    if (caches != null && caches.error != null) {
      search.error=caches.error;
    }
    if (caches != null && StringUtils.isNotBlank(caches.url)) {
      search.url=caches.url;
    }
    app.addSearch(null,reason);
    Log.e(Settings.tag,"cgeoBase.searchByGeocode: No cache parsed");
    return null;
  }
  final List<cgCache> cacheList=cgBase.filterSearchResults(search,caches,false,false,Settings.getCacheType());
  app.addSearch(cacheList,reason);
  return search;
}
