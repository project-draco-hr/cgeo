{
  super(activity,0,list);
  this.res=activity.getResources();
  this.list=list;
  this.cacheListType=cacheListType;
  if (cacheListType == CacheListType.HISTORY) {
    cacheComparator=new VisitComparator();
  }
  final Drawable modifiedCoordinatesMarker=activity.getResources().getDrawable(R.drawable.marker_usermodifiedcoords);
  for (  final CacheType cacheType : CacheType.values()) {
    int hashCode=getIconHashCode(cacheType,false);
    gcIconDrawables.put(hashCode,activity.getResources().getDrawable(cacheType.markerId));
    hashCode=getIconHashCode(cacheType,true);
    Drawable[] layers=new Drawable[2];
    layers[0]=activity.getResources().getDrawable(cacheType.markerId);
    layers[1]=modifiedCoordinatesMarker;
    LayerDrawable ld=new LayerDrawable(layers);
    ld.setLayerInset(1,layers[0].getIntrinsicWidth() - layers[1].getIntrinsicWidth(),layers[0].getIntrinsicHeight() - layers[1].getIntrinsicHeight(),0,0);
    gcIconDrawables.put(hashCode,ld);
  }
  if (Settings.isLightSkin()) {
    ratingBcgs[0]=R.drawable.favourite_background_red_light;
    ratingBcgs[1]=R.drawable.favourite_background_orange_light;
    ratingBcgs[2]=R.drawable.favourite_background_green_light;
  }
 else {
    ratingBcgs[0]=R.drawable.favourite_background_red_dark;
    ratingBcgs[1]=R.drawable.favourite_background_orange_dark;
    ratingBcgs[2]=R.drawable.favourite_background_green_dark;
  }
}
