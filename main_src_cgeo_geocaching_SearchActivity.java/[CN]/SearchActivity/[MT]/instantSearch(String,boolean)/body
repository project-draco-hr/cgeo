{
  final String query=StringUtils.trim(nonTrimmedQuery);
  String geocode=ConnectorFactory.getGeocodeFromURL(query);
  if (StringUtils.isEmpty(geocode)) {
    geocode=StringUtils.upperCase(StringUtils.trim(query));
  }
  final IConnector connector=ConnectorFactory.getConnector(geocode);
  if (connector instanceof ISearchByGeocode && geocode != null) {
    CacheDetailActivity.startActivity(this,geocode.toUpperCase(Locale.US));
    return true;
  }
  TrackableConnector trackableConnector=ConnectorFactory.getTrackableConnector(geocode);
  if (trackableConnector.equals(ConnectorFactory.UNKNOWN_TRACKABLE_CONNECTOR)) {
    final String tbCode=ConnectorFactory.getTrackableFromURL(query);
    if (StringUtils.isNotBlank(tbCode)) {
      trackableConnector=ConnectorFactory.getTrackableConnector(tbCode);
      geocode=tbCode;
    }
  }
  if (!trackableConnector.equals(ConnectorFactory.UNKNOWN_TRACKABLE_CONNECTOR) && geocode != null) {
    final Intent trackablesIntent=new Intent(this,TrackableActivity.class);
    trackablesIntent.putExtra(Intents.EXTRA_GEOCODE,geocode.toUpperCase(Locale.US));
    startActivity(trackablesIntent);
    return true;
  }
  if (keywordSearch) {
    CacheListActivity.startActivityKeyword(this,query.trim());
    return true;
  }
  return false;
}
