{
  final String query=StringUtils.trim(nonTrimmedQuery);
  String geocode=ConnectorFactory.getGeocodeFromURL(query);
  if (StringUtils.isEmpty(geocode)) {
    geocode=StringUtils.upperCase(StringUtils.trim(query));
  }
  final IConnector connector=ConnectorFactory.getConnector(geocode);
  if (connector instanceof ISearchByGeocode && geocode != null) {
    CacheDetailActivity.startActivity(this,geocode.toUpperCase(Locale.US));
    return true;
  }
  TrackableBrand trackableBrand=ConnectorFactory.getTrackableConnector(geocode).getBrand();
  if (trackableBrand == TrackableBrand.UNKNOWN) {
    final String tbCode=ConnectorFactory.getTrackableFromURL(query);
    if (StringUtils.isNotBlank(tbCode)) {
      trackableBrand=ConnectorFactory.getTrackableConnector(tbCode).getBrand();
      geocode=tbCode;
    }
  }
  if (trackableBrand == TrackableBrand.UNKNOWN) {
    final TrackableTrackingCode tbTrackingCode=ConnectorFactory.getTrackableTrackingCodeFromURL(query);
    if (!tbTrackingCode.isEmpty()) {
      trackableBrand=tbTrackingCode.brand;
      geocode=tbTrackingCode.trackingCode;
    }
  }
  if (trackableBrand != TrackableBrand.UNKNOWN && geocode != null) {
    final Intent trackablesIntent=new Intent(this,TrackableActivity.class);
    trackablesIntent.putExtra(Intents.EXTRA_GEOCODE,geocode.toUpperCase(Locale.US));
    trackablesIntent.putExtra(Intents.EXTRA_BRAND,trackableBrand.getId());
    startActivity(trackablesIntent);
    return true;
  }
  if (keywordSearch) {
    CacheListActivity.startActivityKeyword(this,query.trim());
    return true;
  }
  return false;
}
