{
  params.put("oauth_consumer_key",consumerKey,"oauth_nonce",CryptUtils.md5(Long.toString(System.currentTimeMillis())),"oauth_signature_method","HMAC-SHA1","oauth_timestamp",Long.toString(System.currentTimeMillis() / 1000),"oauth_token",StringUtils.defaultString(tokens.getTokenPublic()),"oauth_version","1.0");
  params.sort();
  final StringBuilder paramsEncodedBuilder=new StringBuilder();
  for (  final ImmutablePair<String,String> nameValue : params) {
    paramsEncodedBuilder.append('&').append(percentEncode(nameValue.left)).append('=').append(percentEncode(nameValue.right));
  }
  final String paramsEncoded=paramsEncodedBuilder.substring(1);
  final String requestPacked=method + '&' + percentEncode((https ? "https" : "http") + "://" + host+ path)+ '&'+ percentEncode(paramsEncoded);
  final String keysPacked=percentEncode(consumerSecret) + '&' + percentEncode(StringUtils.defaultString(tokens.getTokenSecret()));
  params.put("oauth_signature",CryptUtils.base64Encode(CryptUtils.hashHmac(requestPacked,keysPacked)));
}
