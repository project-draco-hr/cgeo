{
  if (app == null) {
    return;
  }
  if (settings == null || StringUtils.isBlank(settings.tokenPublic) || StringUtils.isBlank(settings.tokenSecret)) {
    return;
  }
  try {
    Map<String,String> parameters=new HashMap<String,String>();
    parameters.put("status",status);
    if (latitude != null && longitude != null) {
      parameters.put("lat",String.format("%.6f",latitude));
      parameters.put("long",String.format("%.6f",longitude));
      parameters.put("display_coordinates","true");
    }
    final String paramsDone=cgOAuth.signOAuth("api.twitter.com","/1/statuses/update.json","POST",false,parameters,settings.tokenPublic,settings.tokenSecret);
    HttpURLConnection connection=null;
    try {
      final StringBuffer buffer=new StringBuffer();
      final URL u=new URL("http://api.twitter.com/1/statuses/update.json");
      final URLConnection uc=u.openConnection();
      uc.setRequestProperty("Host","api.twitter.com");
      connection=(HttpURLConnection)uc;
      connection.setReadTimeout(30000);
      connection.setRequestMethod("POST");
      HttpURLConnection.setFollowRedirects(true);
      connection.setDoInput(true);
      connection.setDoOutput(true);
      final OutputStream out=connection.getOutputStream();
      final OutputStreamWriter wr=new OutputStreamWriter(out);
      wr.write(paramsDone);
      wr.flush();
      wr.close();
      Log.i(cgSettings.tag,"Twitter.com: " + connection.getResponseCode() + " "+ connection.getResponseMessage());
      InputStream ins;
      final String encoding=connection.getContentEncoding();
      if (encoding != null && encoding.equalsIgnoreCase("gzip")) {
        ins=new GZIPInputStream(connection.getInputStream());
      }
 else       if (encoding != null && encoding.equalsIgnoreCase("deflate")) {
        ins=new InflaterInputStream(connection.getInputStream(),new Inflater(true));
      }
 else {
        ins=connection.getInputStream();
      }
      final InputStreamReader inr=new InputStreamReader(ins);
      final BufferedReader br=new BufferedReader(inr);
      readIntoBuffer(br,buffer);
      br.close();
      ins.close();
      inr.close();
      connection.disconnect();
    }
 catch (    IOException e) {
      Log.e(cgSettings.tag,"cgBase.postTweet.IO: " + connection.getResponseCode() + ": "+ connection.getResponseMessage()+ " ~ "+ e.toString());
      final InputStream ins=connection.getErrorStream();
      final StringBuffer buffer=new StringBuffer();
      final InputStreamReader inr=new InputStreamReader(ins);
      final BufferedReader br=new BufferedReader(inr);
      readIntoBuffer(br,buffer);
      br.close();
      ins.close();
      inr.close();
    }
catch (    Exception e) {
      Log.e(cgSettings.tag,"cgBase.postTweet.inner: " + e.toString());
    }
    connection.disconnect();
  }
 catch (  Exception e) {
    Log.e(cgSettings.tag,"cgBase.postTweet: " + e.toString());
  }
}
