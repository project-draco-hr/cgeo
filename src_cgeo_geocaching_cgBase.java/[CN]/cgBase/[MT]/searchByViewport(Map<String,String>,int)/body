{
  final cgSearch search=new cgSearch();
  final String latMin=parameters.get("latitude-min");
  final String latMax=parameters.get("latitude-max");
  final String lonMin=parameters.get("longitude-min");
  final String lonMax=parameters.get("longitude-max");
  String usertoken=null;
  if (parameters.get("usertoken") != null) {
    usertoken=parameters.get("usertoken");
  }
 else {
    usertoken="";
  }
  cgCacheWrap caches=new cgCacheWrap();
  String page=null;
  if (StringUtils.isBlank(latMin) || StringUtils.isBlank(latMax) || StringUtils.isBlank(lonMin)|| StringUtils.isBlank(lonMax)) {
    Log.e(cgSettings.tag,"cgeoBase.searchByViewport: Not enough parameters to recognize viewport");
    return null;
  }
  final String host="www.geocaching.com";
  final String path="/map/default.aspx/MapAction";
  String params="{\"dto\":{\"data\":{\"c\":1,\"m\":\"\",\"d\":\"" + latMax + "|"+ latMin+ "|"+ lonMax+ "|"+ lonMin+ "\"},\"ut\":\""+ usertoken+ "\"}}";
  final String url="http://" + host + path+ "?"+ params;
  page=requestJSONgc(host,path,params);
  if (StringUtils.isBlank(page)) {
    Log.e(cgSettings.tag,"cgeoBase.searchByViewport: No data from server");
    return null;
  }
  caches=parseMapJSON(url,page);
  if (caches == null || caches.cacheList == null || caches.cacheList.isEmpty()) {
    Log.e(cgSettings.tag,"cgeoBase.searchByViewport: No cache parsed");
  }
  if (app == null) {
    Log.e(cgSettings.tag,"cgeoBase.searchByViewport: No application found");
    return null;
  }
  List<cgCache> cacheList=processSearchResults(search,caches,settings.excludeDisabled,settings.excludeMine,settings.cacheType);
  app.addSearch(search,cacheList,true,reason);
  return search.getCurrentId();
}
