{
  final String viewstate=app.getViewstate(searchId);
  final String viewstate1=app.getViewstate1(searchId);
  cgCacheWrap caches=new cgCacheWrap();
  String url=app.getUrl(searchId);
  if (url == null || url.length() == 0) {
    Log.e(cgSettings.tag,"cgeoBase.searchByNextPage: No url found");
    return searchId;
  }
  if (viewstate == null || viewstate.length() == 0) {
    Log.e(cgSettings.tag,"cgeoBase.searchByNextPage: No viewstate given");
    return searchId;
  }
  String host="www.geocaching.com";
  String path="/";
  final String method="POST";
  int dash=-1;
  if (url.indexOf("http://") > -1) {
    url=url.substring(7);
  }
  dash=url.indexOf("/");
  if (dash > -1) {
    host=url.substring(0,dash);
    url=url.substring(dash);
  }
 else {
    host=url;
    url="";
  }
  dash=url.indexOf("?");
  if (dash > -1) {
    path=url.substring(0,dash);
  }
 else {
    path=url;
  }
  final HashMap<String,String> params=new HashMap<String,String>();
  params.put("__VIEWSTATE",viewstate);
  if (viewstate1 != null) {
    params.put("__VIEWSTATE1",viewstate1);
    params.put("__VIEWSTATEFIELDCOUNT","2");
  }
  params.put("__EVENTTARGET","ctl00$ContentBody$pgrBottom$ctl08");
  params.put("__EVENTARGUMENT","");
  String page=request(false,host,path,method,params,false,false,true).getData();
  if (checkLogin(page) == false) {
    int loginState=login();
    if (loginState == 1) {
      page=request(false,host,path,method,params,false,false,true).getData();
    }
 else     if (loginState == -3) {
      Log.i(cgSettings.tag,"Working as guest.");
    }
 else {
      app.setError(searchId,errorRetrieve.get(loginState));
      Log.e(cgSettings.tag,"cgeoBase.searchByNextPage: Can not log in geocaching");
      return searchId;
    }
  }
  if (page == null || page.length() == 0) {
    Log.e(cgSettings.tag,"cgeoBase.searchByNextPage: No data from server");
    return searchId;
  }
  caches=parseSearch(thread,url,page,showCaptcha);
  if (caches == null || caches.cacheList == null || caches.cacheList.isEmpty()) {
    Log.e(cgSettings.tag,"cgeoBase.searchByNextPage: No cache parsed");
    return searchId;
  }
  app.setError(searchId,caches.error);
  app.setViewstate(searchId,caches.viewstate);
  app.setViewstate1(searchId,caches.viewstate1);
  final ArrayList<cgCache> cacheList=new ArrayList<cgCache>();
  for (  cgCache cache : caches.cacheList) {
    app.addGeocode(searchId,cache.geocode);
    cacheList.add(cache);
  }
  app.addSearch(searchId,cacheList,true,reason);
  return searchId;
}
