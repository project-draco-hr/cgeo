{
  if (viewstate == null || viewstate.length() == 0) {
    Log.e(cgSettings.tag,"cgeoBase.postLog: No viewstate given");
    return 1000;
  }
  if (logTypes2.containsKey(logType) == false) {
    Log.e(cgSettings.tag,"cgeoBase.postLog: Unknown logtype");
    return 1000;
  }
  if (log == null || log.length() == 0) {
    Log.e(cgSettings.tag,"cgeoBase.postLog: No log text given");
    return 1001;
  }
  final int logLen=log.length();
  final StringBuilder logUpdated=new StringBuilder();
  for (int i=0; i < logLen; i++) {
    char c=log.charAt(i);
    if (c > 300) {
      logUpdated.append("&#");
      logUpdated.append(Integer.toString((int)c));
      logUpdated.append(";");
    }
 else {
      logUpdated.append(c);
    }
  }
  log=logUpdated.toString();
  log=log.replace("\n","\r\n");
  if (trackables != null) {
    Log.i(cgSettings.tag,"Trying to post log for cache #" + cacheid + " - action: "+ logType+ "; date: "+ year+ "."+ month+ "."+ day+ ", log: "+ log+ "; trackables: "+ trackables.size());
  }
 else {
    Log.i(cgSettings.tag,"Trying to post log for cache #" + cacheid + " - action: "+ logType+ "; date: "+ year+ "."+ month+ "."+ day+ ", log: "+ log+ "; trackables: 0");
  }
  final String host="www.geocaching.com";
  final String path="/seek/log.aspx?ID=" + cacheid;
  final String method="POST";
  final HashMap<String,String> params=new HashMap<String,String>();
  params.put("__VIEWSTATE",viewstate);
  if (viewstate1 != null) {
    params.put("__VIEWSTATE1",viewstate1);
    params.put("__VIEWSTATEFIELDCOUNT","2");
  }
  params.put("__EVENTTARGET","");
  params.put("__EVENTARGUMENT","");
  params.put("__LASTFOCUS","");
  params.put("ctl00$ContentBody$LogBookPanel1$ddLogType",Integer.toString(logType));
  params.put("ctl00$ContentBody$LogBookPanel1$DateTimeLogged",String.format("%02d",month) + "/" + String.format("%02d",day)+ "/"+ String.format("%04d",year));
  params.put("ctl00$ContentBody$LogBookPanel1$DateTimeLogged$Month",Integer.toString(month));
  params.put("ctl00$ContentBody$LogBookPanel1$DateTimeLogged$Day",Integer.toString(day));
  params.put("ctl00$ContentBody$LogBookPanel1$DateTimeLogged$Year",Integer.toString(year));
  params.put("ctl00$ContentBody$LogBookPanel1$uxLogInfo",log);
  params.put("ctl00$ContentBody$LogBookPanel1$LogButton","Submit Log Entry");
  params.put("ctl00$ContentBody$uxVistOtherListingGC","");
  if (trackables != null && trackables.isEmpty() == false) {
    final StringBuilder hdnSelected=new StringBuilder();
    for (    cgTrackableLog tb : trackables) {
      final String action=Integer.toString(tb.id) + logTypesTrackableAction.get(tb.action);
      if (tb.action > 0) {
        hdnSelected.append(action);
        hdnSelected.append(",");
      }
    }
    params.put("ctl00$ContentBody$LogBookPanel1$uxTrackables$hdnSelectedActions",hdnSelected.toString());
    params.put("ctl00$ContentBody$LogBookPanel1$uxTrackables$hdnCurrentFilter","");
  }
  String page=request(false,host,path,method,params,false,false,false).getData();
  if (checkLogin(page) == false) {
    int loginState=login();
    if (loginState == 1) {
      page=request(false,host,path,method,params,false,false,false).getData();
    }
 else {
      Log.e(cgSettings.tag,"cgeoBase.postLog: Can not log in geocaching (error: " + loginState + ")");
      return loginState;
    }
  }
  if (page == null || page.length() == 0) {
    Log.e(cgSettings.tag,"cgeoBase.postLog: No data from server");
    return 1002;
  }
  final Pattern pattern=Pattern.compile("<span id=\"ctl00_ContentBody_LogBookPanel1_lbConfirm\"[^>]*>([^<]*<font[^>]*>)?([^<]+)(</font>[^<]*)?</span>",Pattern.CASE_INSENSITIVE);
  final Matcher matcher=pattern.matcher(page);
  try {
    if (matcher.find() && matcher.groupCount() > 0) {
      final String viewstateConfirm=findViewstate(page,0);
      final String viewstate1Confirm=findViewstate(page,1);
      if (viewstateConfirm == null || viewstateConfirm.length() == 0) {
        Log.e(cgSettings.tag,"cgeoBase.postLog: No viewstate for confirm log");
        return 1000;
      }
      params.clear();
      params.put("__VIEWSTATE",viewstateConfirm);
      if (viewstate1 != null) {
        params.put("__VIEWSTATE1",viewstate1Confirm);
        params.put("__VIEWSTATEFIELDCOUNT","2");
      }
      params.put("__EVENTTARGET","");
      params.put("__EVENTARGUMENT","");
      params.put("__LASTFOCUS","");
      params.put("ctl00$ContentBody$LogBookPanel1$btnConfirm","Yes");
      params.put("ctl00$ContentBody$LogBookPanel1$uxLogInfo",log);
      params.put("ctl00$ContentBody$uxVistOtherListingGC","");
      if (trackables != null && trackables.isEmpty() == false) {
        final StringBuilder hdnSelected=new StringBuilder();
        for (        cgTrackableLog tb : trackables) {
          String ctl=null;
          final String action=Integer.toString(tb.id) + logTypesTrackableAction.get(tb.action);
          if (tb.ctl < 10) {
            ctl="0" + Integer.toString(tb.ctl);
          }
 else {
            ctl=Integer.toString(tb.ctl);
          }
          params.put("ctl00$ContentBody$LogBookPanel1$uxTrackables$repTravelBugs$ctl" + ctl + "$ddlAction",action);
          if (tb.action > 0) {
            hdnSelected.append(action);
            hdnSelected.append(",");
          }
        }
        params.put("ctl00$ContentBody$LogBookPanel1$uxTrackables$hdnSelectedActions",hdnSelected.toString());
        params.put("ctl00$ContentBody$LogBookPanel1$uxTrackables$hdnCurrentFilter","");
      }
      page=request(false,host,path,method,params,false,false,false).getData();
    }
  }
 catch (  Exception e) {
    Log.e(cgSettings.tag,"cgeoBase.postLog.confim: " + e.toString());
  }
  try {
    final Pattern patternOk=Pattern.compile("<h2[^>]*>[^<]*<span id=\"ctl00_ContentBody_lbHeading\"[^>]*>[^<]*</span>[^<]*</h2>",Pattern.CASE_INSENSITIVE | Pattern.MULTILINE);
    final Matcher matcherOk=patternOk.matcher(page);
    if (matcherOk.find()) {
      Log.i(cgSettings.tag,"Log successfully posted to cache #" + cacheid);
      if (app != null && geocode != null) {
        app.saveVisitDate(geocode);
      }
      return 1;
    }
  }
 catch (  Exception e) {
    Log.e(cgSettings.tag,"cgeoBase.postLog.check: " + e.toString());
  }
  Log.e(cgSettings.tag,"cgeoBase.postLog: Failed to post log because of unknown error");
  return 1000;
}
