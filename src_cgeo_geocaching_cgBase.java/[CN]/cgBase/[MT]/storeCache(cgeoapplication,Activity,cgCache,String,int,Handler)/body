{
  try {
    if (cache != null) {
      final HashMap<String,String> params=new HashMap<String,String>();
      params.put("geocode",cache.geocode);
      final Long searchId=searchByGeocode(params,listId,false);
      cache=app.getCache(searchId);
    }
 else     if (geocode != null) {
      final HashMap<String,String> params=new HashMap<String,String>();
      params.put("geocode",geocode);
      final Long searchId=searchByGeocode(params,listId,false);
      cache=app.getCache(searchId);
    }
    if (cache == null) {
      if (handler != null) {
        handler.sendMessage(new Message());
      }
      return;
    }
    final cgHtmlImg imgGetter=new cgHtmlImg(activity,settings,cache.geocode,false,listId,true);
    if (cache.description != null) {
      Html.fromHtml(cache.description,imgGetter,null);
    }
    if (cache.spoilers != null && cache.spoilers.isEmpty() == false) {
      for (      cgImage oneSpoiler : cache.spoilers) {
        imgGetter.getDrawable(oneSpoiler.url);
      }
    }
    if (settings.storelogimages == true) {
      for (      cgLog log : cache.logs) {
        if (log.logImages != null && log.logImages.isEmpty() == false) {
          for (          cgImage oneLogImg : log.logImages) {
            imgGetter.getDrawable(oneLogImg.url);
          }
        }
      }
    }
    if (settings.storeOfflineMaps == 1 && cache.latitude != null && cache.longitude != null) {
      final String latlonMap=String.format((Locale)null,"%.6f",cache.latitude) + "," + String.format((Locale)null,"%.6f",cache.longitude);
      final Display display=((WindowManager)activity.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
      final int maxWidth=display.getWidth() - 25;
      final int maxHeight=display.getHeight() - 25;
      int edge=0;
      if (maxWidth > maxHeight) {
        edge=maxWidth;
      }
 else {
        edge=maxHeight;
      }
      String type="mystery";
      if (cache.found == true) {
        type=cache.type + "_found";
      }
 else       if (cache.disabled == true) {
        type=cache.type + "_disabled";
      }
 else {
        type=cache.type;
      }
      final String markerUrl=urlencode_rfc3986("http://cgeo.carnero.cc/_markers/marker_cache_" + type + ".png");
      final StringBuilder waypoints=new StringBuilder();
      if (cache.waypoints != null && cache.waypoints.size() > 0) {
        for (        cgWaypoint waypoint : cache.waypoints) {
          if (waypoint.latitude == null && waypoint.longitude == null) {
            continue;
          }
          waypoints.append("&markers=icon%3Ahttp://cgeo.carnero.cc/_markers/marker_waypoint_");
          waypoints.append(waypoint.type);
          waypoints.append(".png%7C");
          waypoints.append(String.format((Locale)null,"%.6f",waypoint.latitude));
          waypoints.append(",");
          waypoints.append(String.format((Locale)null,"%.6f",waypoint.longitude));
        }
      }
      final String code=cache.geocode;
      final int finalEdge=edge;
      Thread staticMapsThread=new Thread("getting static map"){
        @Override public void run(){
          cgMapImg mapGetter=new cgMapImg(settings,code);
          mapGetter.getDrawable("http://maps.google.com/maps/api/staticmap?center=" + latlonMap + "&zoom=20&size="+ finalEdge+ "x"+ finalEdge+ "&maptype=satellite&markers=icon%3A"+ markerUrl+ "%7C"+ latlonMap+ waypoints.toString()+ "&sensor=false",1);
          mapGetter.getDrawable("http://maps.google.com/maps/api/staticmap?center=" + latlonMap + "&zoom=18&size="+ finalEdge+ "x"+ finalEdge+ "&maptype=satellite&markers=icon%3A"+ markerUrl+ "%7C"+ latlonMap+ waypoints.toString()+ "&sensor=false",2);
          mapGetter.getDrawable("http://maps.google.com/maps/api/staticmap?center=" + latlonMap + "&zoom=16&size="+ finalEdge+ "x"+ finalEdge+ "&maptype=roadmap&markers=icon%3A"+ markerUrl+ "%7C"+ latlonMap+ waypoints.toString()+ "&sensor=false",3);
          mapGetter.getDrawable("http://maps.google.com/maps/api/staticmap?center=" + latlonMap + "&zoom=14&size="+ finalEdge+ "x"+ finalEdge+ "&maptype=roadmap&markers=icon%3A"+ markerUrl+ "%7C"+ latlonMap+ waypoints.toString()+ "&sensor=false",4);
          mapGetter.getDrawable("http://maps.google.com/maps/api/staticmap?center=" + latlonMap + "&zoom=11&size="+ finalEdge+ "x"+ finalEdge+ "&maptype=roadmap&markers=icon%3A"+ markerUrl+ "%7C"+ latlonMap+ waypoints.toString()+ "&sensor=false",5);
        }
      }
;
      staticMapsThread.setPriority(Thread.MIN_PRIORITY);
      staticMapsThread.start();
    }
    app.markStored(cache.geocode,listId);
    app.removeCacheFromCache(cache.geocode);
    if (handler != null) {
      handler.sendMessage(new Message());
    }
  }
 catch (  Exception e) {
    Log.e(cgSettings.tag,"cgBase.storeCache: " + e.toString());
  }
}
