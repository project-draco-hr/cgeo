{
  try {
    if (cache != null) {
      if (cache.reason > 0 || StringUtils.isBlank(cache.description)) {
        final Map<String,String> params=new HashMap<String,String>();
        params.put("geocode",cache.geocode);
        final UUID searchId=searchByGeocode(params,listId,false);
        cache=app.getCache(searchId);
      }
    }
 else     if (StringUtils.isNotBlank(geocode)) {
      final Map<String,String> params=new HashMap<String,String>();
      params.put("geocode",geocode);
      final UUID searchId=searchByGeocode(params,listId,false);
      cache=app.getCache(searchId);
    }
    if (cache == null) {
      if (handler != null) {
        handler.sendMessage(new Message());
      }
      return;
    }
    final cgHtmlImg imgGetter=new cgHtmlImg(activity,cache.geocode,false,listId,true);
    if (StringUtils.isNotBlank(cache.description)) {
      Html.fromHtml(cache.description,imgGetter,null);
    }
    if (CollectionUtils.isNotEmpty(cache.spoilers)) {
      for (      cgImage oneSpoiler : cache.spoilers) {
        imgGetter.getDrawable(oneSpoiler.url);
      }
    }
    if (settings.storelogimages) {
      for (      cgLog log : cache.logs) {
        if (CollectionUtils.isNotEmpty(log.logImages)) {
          for (          cgImage oneLogImg : log.logImages) {
            imgGetter.getDrawable(oneLogImg.url);
          }
        }
      }
    }
    StaticMapsProvider.downloadMaps(cache,settings,activity);
    app.markStored(cache.geocode,listId);
    app.removeCacheFromCache(cache.geocode);
    if (handler != null) {
      handler.sendMessage(new Message());
    }
  }
 catch (  Exception e) {
    Log.e(cgSettings.tag,"cgBase.storeCache: " + e.toString());
  }
}
