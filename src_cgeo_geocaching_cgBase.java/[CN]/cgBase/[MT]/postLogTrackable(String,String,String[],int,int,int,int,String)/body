{
  if (isEmpty(viewstates)) {
    Log.e(cgSettings.tag,"cgeoBase.postLogTrackable: No viewstate given");
    return 1000;
  }
  if (logTypes2.containsKey(logType) == false) {
    Log.e(cgSettings.tag,"cgeoBase.postLogTrackable: Unknown logtype");
    return 1000;
  }
  if (log == null || log.length() == 0) {
    Log.e(cgSettings.tag,"cgeoBase.postLogTrackable: No log text given");
    return 1001;
  }
  Log.i(cgSettings.tag,"Trying to post log for trackable #" + trackingCode + " - action: "+ logType+ "; date: "+ year+ "."+ month+ "."+ day+ ", log: "+ log);
  log=log.replace("\n","\r\n");
  final Calendar currentDate=Calendar.getInstance();
  final String host="www.geocaching.com";
  final String path="/track/log.aspx?wid=" + tbid;
  final String method="POST";
  final HashMap<String,String> params=new HashMap<String,String>();
  setViewstates(viewstates,params);
  params.put("__EVENTTARGET","");
  params.put("__EVENTARGUMENT","");
  params.put("__LASTFOCUS","");
  params.put("ctl00$ContentBody$LogBookPanel1$ddLogType",Integer.toString(logType));
  params.put("ctl00$ContentBody$LogBookPanel1$tbCode",trackingCode);
  if (currentDate.get(Calendar.YEAR) == year && (currentDate.get(Calendar.MONTH) + 1) == month && currentDate.get(Calendar.DATE) == day) {
    params.put("ctl00$ContentBody$LogBookPanel1$DateTimeLogged","");
  }
 else {
    params.put("ctl00$ContentBody$LogBookPanel1$DateTimeLogged",Integer.toString(month) + "/" + Integer.toString(day)+ "/"+ Integer.toString(year));
  }
  params.put("ctl00$ContentBody$LogBookPanel1$DateTimeLogged$Day",Integer.toString(day));
  params.put("ctl00$ContentBody$LogBookPanel1$DateTimeLogged$Month",Integer.toString(month));
  params.put("ctl00$ContentBody$LogBookPanel1$DateTimeLogged$Year",Integer.toString(year));
  params.put("ctl00$ContentBody$LogBookPanel1$uxLogInfo",log);
  params.put("ctl00$ContentBody$LogBookPanel1$LogButton","Submit Log Entry");
  params.put("ctl00$ContentBody$uxVistOtherListingGC","");
  String page=request(false,host,path,method,params,false,false,false).getData();
  if (checkLogin(page) == false) {
    int loginState=login();
    if (loginState == 1) {
      page=request(false,host,path,method,params,false,false,false).getData();
    }
 else {
      Log.e(cgSettings.tag,"cgeoBase.postLogTrackable: Can not log in geocaching (error: " + loginState + ")");
      return loginState;
    }
  }
  if (page == null || page.length() == 0) {
    Log.e(cgSettings.tag,"cgeoBase.postLogTrackable: No data from server");
    return 1002;
  }
  try {
    final Pattern patternOk=Pattern.compile("<div id=[\"|']ctl00_ContentBody_LogBookPanel1_ViewLogPanel[\"|']>",Pattern.CASE_INSENSITIVE);
    final Matcher matcherOk=patternOk.matcher(page);
    if (matcherOk.find()) {
      Log.i(cgSettings.tag,"Log successfully posted to trackable #" + trackingCode);
      return 1;
    }
  }
 catch (  Exception e) {
    Log.e(cgSettings.tag,"cgeoBase.postLogTrackable.check: " + e.toString());
  }
  Log.e(cgSettings.tag,"cgeoBase.postLogTrackable: Failed to post log because of unknown error");
  return 1000;
}
