{
  super.onCreate(savedInstanceState);
  res=this.getResources();
  app=(cgeoapplication)this.getApplication();
  settings=new cgSettings(this,getSharedPreferences(cgSettings.preferences,0));
  base=new cgBase(app,settings,getSharedPreferences(cgSettings.preferences,0));
  warning=new cgWarning(this);
  getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
  setTheme();
  setContentView(R.layout.navigate);
  setTitle(res.getString(R.string.compass_title));
  if (geo == null) {
    geo=app.startGeo(this,geoUpdate,base,settings,warning,0,0);
  }
  if (settings.useCompass == 1 && dir == null) {
    dir=app.startDir(this,dirUpdate,warning);
  }
  Bundle extras=getIntent().getExtras();
  if (extras != null) {
    title=extras.getString("geocode");
    name=extras.getString("name");
    dstLatitude=extras.getDouble("latitude");
    dstLongitude=extras.getDouble("longitude");
    if (name != null && name.length() > 0) {
      if (title != null && title.length() > 0) {
        title=title + ": " + name;
      }
 else {
        title=name;
      }
    }
  }
 else {
    Intent pointIntent=new Intent(this,cgeopoint.class);
    startActivity(pointIntent);
    finish();
    return;
  }
  if (title != null && title.length() > 0) {
    app.setAction(title);
  }
 else   if (name != null && name.length() > 0) {
    app.setAction(name);
  }
  setTitle();
  setDestCoords();
  compassView=(cgCompass)findViewById(R.id.rose);
  updater=new updaterThread(updaterHandler);
  updater.start();
  if (geo != null) {
    geoUpdate.updateLoc(geo);
  }
  if (dir != null) {
    dirUpdate.updateDir(dir);
  }
}
