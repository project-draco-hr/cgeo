{
  final AtomicReference<T> lastValue=new AtomicReference<>(initialValue);
  return observable.doOnNext(new Action1<T>(){
    @Override public void call(    final T value){
      lastValue.set(value);
    }
  }
).startWith(Observable.defer(new Func0<Observable<T>>(){
    @Override public Observable<T> call(){
      final T last=lastValue.get();
      return last != null ? Observable.just(last) : Observable.<T>empty();
    }
  }
)).replay(1).refCount();
}
