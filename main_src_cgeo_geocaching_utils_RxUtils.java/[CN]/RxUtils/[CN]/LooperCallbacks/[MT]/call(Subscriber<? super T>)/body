{
  subscriber.add(subject.subscribe(new Action1<T>(){
    @Override public void call(    final T data){
      subscriber.onNext(data);
    }
  }
,new Action1<Throwable>(){
    @Override public void call(    final Throwable throwable){
      subscriber.onError(throwable);
    }
  }
,new Action0(){
    @Override public void call(){
      subscriber.onCompleted();
    }
  }
));
  looperCallbacksWorker.schedule(new Action0(){
    @Override public void call(){
      if (counter.getAndIncrement() == 0) {
        onStart();
      }
      subscriber.add(Subscriptions.create(new Action0(){
        @Override public void call(){
          looperCallbacksWorker.schedule(new Action0(){
            @Override public void call(){
              if (counter.decrementAndGet() == 0) {
                onStop();
              }
            }
          }
,stopDelay,stopDelayUnit);
        }
      }
));
    }
  }
);
}
