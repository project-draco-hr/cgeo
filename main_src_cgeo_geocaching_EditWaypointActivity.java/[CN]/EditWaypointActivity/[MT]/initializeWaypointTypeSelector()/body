{
  final ArrayAdapter<WaypointType> wpAdapter=new ArrayAdapter<WaypointType>(this,android.R.layout.simple_spinner_item,POSSIBLE_WAYPOINT_TYPES.toArray(new WaypointType[POSSIBLE_WAYPOINT_TYPES.size()])){
    @Override public View getView(    final int position,    final View convertView,    final ViewGroup parent){
      final View view=super.getView(position,convertView,parent);
      addWaypointIcon(position,view);
      return view;
    }
    @Override public View getDropDownView(    final int position,    final View convertView,    final ViewGroup parent){
      final View view=super.getDropDownView(position,convertView,parent);
      addWaypointIcon(position,view);
      return view;
    }
    private void addWaypointIcon(    final int position,    final View view){
      final TextView label=(TextView)view.findViewById(android.R.id.text1);
      label.setCompoundDrawablesWithIntrinsicBounds(POSSIBLE_WAYPOINT_TYPES.get(position).markerId,0,0,0);
    }
  }
;
  wpAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
  waypointTypeSelector.setAdapter(wpAdapter);
  waypointTypeSelector.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener(){
    @Override public void onItemSelected(    final AdapterView<?> parent,    final View v,    final int pos,    final long id){
      final String oldDefaultName=waypointTypeSelectorPosition >= 0 ? getDefaultWaypointName(POSSIBLE_WAYPOINT_TYPES.get(waypointTypeSelectorPosition)) : StringUtils.EMPTY;
      waypointTypeSelectorPosition=pos;
      final String currentName=waypointName.getText().toString().trim();
      if (StringUtils.isBlank(currentName) || oldDefaultName.equals(currentName)) {
        waypointName.setText(getDefaultWaypointName(getSelectedWaypointType()));
      }
    }
    @Override public void onNothingSelected(    final AdapterView<?> parent){
    }
  }
);
  waypointTypeSelector.setSelection(getDefaultWaypointType());
  waypointTypeSelector.setVisibility(View.VISIBLE);
}
