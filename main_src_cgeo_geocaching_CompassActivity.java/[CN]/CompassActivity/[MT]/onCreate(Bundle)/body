{
  onCreate(savedInstanceState,R.layout.compass_activity);
  ButterKnife.bind(this);
  final Bundle extras=getIntent().getExtras();
  if (extras == null) {
    finish();
    return;
  }
  final String geocode=extras.getString(Intents.EXTRA_GEOCODE);
  if (geocode != null) {
    cache=DataStore.loadCache(geocode,LoadFlags.LOAD_CACHE_OR_DB);
  }
  if (extras.containsKey(Intents.EXTRA_WAYPOINT_ID)) {
    final int waypointId=extras.getInt(Intents.EXTRA_WAYPOINT_ID);
    final Waypoint waypoint=DataStore.loadWaypoint(waypointId);
    if (waypoint != null) {
      setTarget(waypoint);
    }
  }
 else   if (extras.containsKey(Intents.EXTRA_COORDS)) {
    setTarget(extras.<Geopoint>getParcelable(Intents.EXTRA_COORDS),extras.getString(Intents.EXTRA_COORD_DESCRIPTION));
  }
 else   if (cache != null) {
    setTarget(cache);
  }
 else {
    Log.w("CompassActivity.onCreate: no cache was found for geocode " + geocode);
    finish();
  }
  if (cache != null) {
    setCacheTitleBar(cache);
  }
 else {
    setTitle(StringUtils.defaultIfBlank(extras.getString(Intents.EXTRA_NAME),res.getString(R.string.navigation)));
  }
  if (Sensors.getInstance().hasCompassCapabilities()) {
    useCompassSwitch.setOnClickListener(new OnClickListener(){
      @Override public void onClick(      final View view){
        Settings.setUseCompass(((ToggleButton)view).isChecked());
      }
    }
);
    useCompassSwitch.setVisibility(View.VISIBLE);
  }
 else {
    useCompassSwitch.setVisibility(View.GONE);
  }
  setVolumeControlStream(AudioManager.STREAM_MUSIC);
  presentShowcase();
}
