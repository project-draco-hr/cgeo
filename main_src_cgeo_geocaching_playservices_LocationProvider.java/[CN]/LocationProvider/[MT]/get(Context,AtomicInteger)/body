{
  final LocationProvider instance=getInstance(context);
  return Observable.create(new OnSubscribe<GeoData>(){
    @Override public void call(    final Subscriber<? super GeoData> subscriber){
      if (reference.incrementAndGet() == 1) {
        instance.updateRequest();
      }
      subscriber.add(Subscriptions.create(new Action0(){
        @Override public void call(){
          RxUtils.looperCallbacksWorker.schedule(new Action0(){
            @Override public void call(){
              if (reference.decrementAndGet() == 0) {
                instance.updateRequest();
              }
            }
          }
,2500,TimeUnit.MILLISECONDS);
        }
      }
));
      subscriber.add(subject.subscribe(new Action1<GeoData>(){
        @Override public void call(        final GeoData geoData){
          subscriber.onNext(geoData);
        }
      }
));
    }
  }
);
}
